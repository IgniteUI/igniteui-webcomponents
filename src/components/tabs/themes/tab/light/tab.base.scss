@use '../../../../../styles/common/component';
@use '../../../../../styles/utilities' as *;
@use '../../tabs.common' as *;
@use 'sass:map';

[part~='header'] {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex-shrink: 0;
    text-align: center;
    justify-content: center;
    height: 100%;
    pointer-events: all;
    min-height: rem(42px);
    padding: rem(12px) rem(16px);
    cursor: pointer;
    position: relative;
    background: var(--header-background);
    color: var(--header-foreground);
    z-index: map.get($tabs-z-index, 'header');
    grid-row: 1;

    &:hover,
    &:focus-within {
        background: var(--header-background--hover);
    }

    &:hover {
        color: var(--header-foreground--hover);
    }

    &:focus-within {
        outline: none;
        color: var(--header-foreground--focus-within);
    }
}

[part='base'] {
    display: flex;
    grid-row: var(--header-bottom, 1);
    align-items: center;
    justify-content: center;
    gap: rem(8px);
    max-width: var(--tab-max-width--justify, var(--tab-max-width));
    min-width: var(--tab-min-width);
    user-select: none;
    outline-style: none;
}

[part='content'] {
    @include type-style('button');

    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center;
    outline-style: none;
    flex: 1;

    @include line-clamp(2, true, true);

    ::slotted(*) {
        @include line-clamp(2, true, true);
    }
}

[part~='body'] {
    display: none;
    position: sticky;
    inset-inline-start: 0;
    background: var(--body-background);
    color: var(--body-foreground);
    width: var(--tabs-width);
    grid-row: 3;
    grid-column: 1 / -1;
    transition: transform 250ms ease-in-out;
}

:host([selected]) {
    [part='header'] {
        background: var(--header-background--selected);
        color: var(--header-foreground--selected);

        ::slotted(igc-icon) {
            color: var(--header-foreground--selected);
        }

        &:hover,
        &:focus-within {
            background: var(--header-background--selected--hover);
            color: var(--header-foreground--selected--hover);
        }
    }

    [part~='body'] {
        display: flex;
        transform: translateX(0);
    }
}

:host([disabled]) {
    [part='header'] {
        pointer-events: none;
        cursor: initial;
        color: var(--header-foreground--disabled);
    }
}

::slotted(igc-icon) {
    --size: #{rem(24px)};
}
