@use 'styles/utilities' as *;
@use '../light/themes' as *;

$theme: $indigo;

:host {
    ::part(helper-text) {
        @include type-style('caption');

        margin-block-start: pad-block(rem(16px));
        grid-auto-rows: minmax(rem(18px), auto);
    }
}

[part~='base'] {
    gap: rem(8px);

    &:hover {
        [part~='label'] {
            color: var-get($theme, 'label-color-hover');
        }
    }
}

[part~='label'] {
    @include type-style('body-2');

    color: var-get($theme, 'label-color');
}

[part~='control'] {
    --size: #{rem(16px)};

    border-radius: var(--size);
    width: var(--size, rem(20px));
    height: var(--size, rem(20px));
    min-width: var(--size, rem(20px));
    transition: none;
    background: none;

    &::before,
    &::after {
        border-radius: calc(var(--size) / 2);
    }

    &::after {
        border: rem(2px) solid var-get($theme, 'empty-color');
    }

    &:hover {
        &::after {
            border: rem(2px) solid var-get($theme, 'hover-color');
        }
    }
}

[part='control checked'] {
    &::after {
        border-color: var-get($theme, 'fill-color');
    }

    &::before {
        background: var-get($theme, 'fill-color');
        border-color: var-get($theme, 'fill-color');
    }

    &:hover {
        &::after {
            border-color: var-get($theme, 'fill-hover-border-color');
        }

        &::before {
            background: var-get($theme, 'fill-color-hover');
            border-color: var-get($theme, 'fill-hover-border-color');
        }
    }
}

[part~='focused'] {
    [part='control'] {
        box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');
    }

    [part='control checked'] {
        box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-filled');
    }
}

:host(:not([disabled]):state(ig-invalid)),
:host(:not(:disabled):state(ig-invalid)) {
    [part~='base'] {
        &:hover {
            [part~='label'] {
                color: var-get($theme, 'label-color-hover');
            }
        }
    }

    [part='label'] {
        color: var-get($theme, 'label-color');
    }

    [part='control'] {
        &::after {
            border-color: var-get($theme, 'error-color');
        }

        &:hover {
            &::after {
                border-color: var-get($theme, 'error-color-hover');
            }
        }
    }

    [part='control checked'] {
        &::after {
            border-color: var-get($theme, 'error-color');
        }

        &::before {
            background: var-get($theme, 'error-color');
        }

        &:hover {
            &::after {
                border-color: var-get($theme, 'error-color-hover');
            }

            &::before {
                background: var-get($theme, 'error-color-hover');
            }
        }
    }

    [part~='focused'] {
        [part~='control'],
        [part='control checked'] {
            box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-error');
        }
    }
}

:host([disabled]),
:host(:disabled) {
    [part='control'] {
        &::after {
            border-color: var-get($theme, 'disabled-color');
        }
    }

    [part='control checked'] {
        &::after {
            border-color: var-get($theme, 'disabled-fill-color');
        }

        &::before {
            background: var-get($theme, 'disabled-fill-color');
        }
    }
}
