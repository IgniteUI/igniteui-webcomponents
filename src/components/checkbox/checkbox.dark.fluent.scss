@use '../../styles/utilities' as utils;
@use 'checkbox.fluent' as light-checkbox;

@mixin theme() {
    @include light-checkbox.theme();

    igc-checkbox::part(control) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(gray, 700)};
        }
    }

    igc-checkbox::part(indicator) {
        stroke: #{utils.color(surface, 500)};
    }

    igc-checkbox:hover {
        &::part(indicator checked) {
            stroke: #{utils.color(surface, 500)};
        }
    }

    igc-checkbox:hover,
    igc-checkbox:focus-within {
        &::part(control)::after {
            box-shadow: inset 0 0 0 1px #{utils.color(gray, 900)};
        }
    }

    igc-checkbox[indeterminate]:hover::part(control),
    igc-checkbox[indeterminate]:focus-within::part(control) {
        &::before {
            background: #{utils.color(primary, 100)};
        }

        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(primary, 100)};
            background: transparent;
        }
    }

    igc-checkbox::part(control checked) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(primary, 500)};
        }
    }

    igc-checkbox:hover::part(control checked),
    igc-checkbox:focus-within::part(control checked) {
        &::after {
            background: #{utils.color(primary, 100)};
            box-shadow: inset 0 0 0 1px #{utils.color(primary, 100)};
        }
    }

    igc-checkbox:not([disabled])[invalid]::part(label) {
        color: #{utils.color(error, 200)};
    }

    igc-checkbox[invalid]::part(control) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 200)};
        }
    }

    igc-checkbox[invalid]:hover::part(indicator) {
        stroke: #{utils.color(error, 200)};
    }

    igc-checkbox[invalid]:hover::part(indicator checked) {
        stroke: #{utils.color(surface, 500)};
    }

    igc-checkbox[invalid]::part(control checked) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 200)};
            background: #{utils.color(error, 200)};
        }
    }

    igc-checkbox[indeterminate][invalid]::part(control) {
        &::before {
            background: #{utils.color(error, 200)};
        }

        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 200)};
            background: transparent;
        }
    }

    igc-checkbox[invalid]:hover::part(control),
    igc-checkbox[invalid]:focus-within::part(control) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 100)};
        }
    }

    igc-checkbox[invalid]:hover::part(control checked),
    igc-checkbox[invalid]:focus-within::part(control checked) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 100)};
            background: #{utils.color(error, 100)};
        }
    }

    igc-checkbox[indeterminate][invalid]:hover::part(control),
    igc-checkbox[indeterminate][invalid]:focus-within::part(control) {
        &::before {
            background: #{utils.color(error, 100)};
        }

        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 100)};
            background: transparent;
        }
    }

    igc-checkbox[disabled]::part(label) {
        color: #{utils.color(gray, 200)};
    }

    igc-checkbox[disabled]::part(control),
    igc-checkbox[disabled][invalid]::part(control) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(gray, 200)};
        }
    }

    igc-checkbox[disabled]::part(control checked),
    igc-checkbox[disabled][invalid]::part(control checked) {
        &::after {
            background: #{utils.color(gray, 200)};
        }
    }

    igc-checkbox[disabled][indeterminate]::part(control),
    igc-checkbox[disabled][indeterminate][invalid]::part(control) {
        &::before {
            background: #{utils.color(gray, 200)};
        }

        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(gray, 200)};
        }
    }
}
