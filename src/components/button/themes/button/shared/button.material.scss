@use 'styles/utilities' as *;
@use '../light/themes' as *;

$flat-theme: $material-flat;
$contained-theme: $material-contained;
$fab-theme: $material-fab;
$outlined-theme: $material-outlined;

:host([variant='flat']) {
    --component-size: var(--ig-size, #{var-get($flat-theme, 'default-size')});
}

:host([variant='outlined']) {
    --component-size: var(--ig-size, #{var-get($outlined-theme, 'default-size')});
}

:host([variant='contained']) {
    --component-size: var(--ig-size, #{var-get($contained-theme, 'default-size')});
}

:host([variant='fab']) {
    --component-size: var(--ig-size, #{var-get($fab-theme, 'default-size')});
}

[part='base'] {
    transition: all .1s ease-in-out;
}

:host(:not([disabled])[variant='flat']) [part='base'],
:host(:not(:disabled)[variant='flat']) [part='base'] {
    &:focus-visible {
        &:active {
            color: var-get($flat-theme, 'active-foreground');
            background: var-get($flat-theme, 'active-background');
        }
    }
}

:host(:not([disabled])[variant='outlined']) [part='base'],
:host(:not(:disabled)[variant='outlined']) [part='base'] {
    border: rem(1px) solid var-get($outlined-theme, 'border-color');

    &:hover {
        border-color: var-get($outlined-theme, 'hover-border-color');
    }

    &:focus {
        border-color: var-get($outlined-theme, 'focus-border-color');
    }

    &:active {
        border-color: var-get($outlined-theme, 'active-border-color');
    }

    &:focus-visible {
        border-color: var-get($outlined-theme, 'focus-visible-border-color');

        &:active {
            color: var-get($outlined-theme, 'active-foreground');
            background: var-get($outlined-theme, 'active-background');
            border-color: var-get($outlined-theme, 'active-border-color');
        }
    }
}

:host(:not([disabled])[variant='contained']) [part='base'],
:host(:not(:disabled)[variant='contained']) [part='base'] {
    box-shadow: var(--ig-elevation-2);

    &:hover {
        box-shadow: var(--ig-elevation-4);
    }

    &:focus,
    &:active {
        box-shadow: var(--ig-elevation-8);
    }

    &:focus-visible {
        &:active {
            color: var-get($contained-theme, 'active-foreground');
            background: var-get($contained-theme, 'active-background');
        }
    }
}

:host(:not([disabled])[variant='fab']) [part='base'],
:host(:not(:disabled)[variant='fab']) [part='base'] {
    box-shadow: var(--ig-elevation-6);

    &:hover {
        box-shadow: var(--ig-elevation-4);
    }

    &:focus,
    &:active {
        box-shadow: var(--ig-elevation-8);
    }

    &:focus-visible {
        &:active {
            color: var-get($fab-theme, 'active-foreground');
            background: var-get($fab-theme, 'active-background');
        }
    }

    &:hover,
    &:focus,
    &:focus-visible,
    &:active {
        box-shadow: var(--ig-elevation-12);
    }
}
