@use '../../../../styles/common/component';
@use '../../../../styles/utilities/index' as *;
@use '../base' as *;

:host {
    @extend %host !optional;

    display: inline-flex;

    --stroke-thicknes: 4px;
    --size: #{rem(32px)};
    --percentage: 0;
    --radius: calc(var(--size) / 2 - var(--stroke-thicknes) * 0.5);
    --circumference: calc(var(--radius) * 2 * 3.14159);
}

[part~='custom_label'] {
    @extend %custom-label !optional;
    font-size: calc(100% - var(--stroke-thicknes) - 2px);
    font-weight: 600;
    fill: $text-color;
    position: absolute;
    transform: translate(-50%, -50%);
    top: 50%;
    left: 50%;
}

[part~='wrapper'] {
    display: inline-flex;
    position: relative;
    width: var(--size);
    height: var(--size);
}

[part~='indeterminate'] {
    transform-origin: 50% 50%;
    animation: 3s linear 0s infinite $animation-direction none running rotate-center;
}

[part~='svg'] {
    width: var(--size);
    height: var(--size);
}

[part~='inner'] {
    stroke: $track-color;
}

[part~='outer'] {
    stroke-dasharray: var(--circumference) var(--circumference);
    transform-origin: 50% 50%;
    transform: rotate(-90deg);
}

[part~='inner'],
[part~='outer'] {
    fill: transparent;
    stroke-width: var(--stroke-thicknes);
    cx: calc(var(--size) / 2);
    cy: calc(var(--size) / 2);
    r: var(--radius);
}

[part~='gradient_start'],
[part~='gradient_end'] {
    stop-color: $fill-color;
}

:host([variant='danger']) [part~='gradient_start'],
:host([variant='danger']) [part~='gradient_end'] {
    stop-color: $danger-color;
}

:host([variant='warning']) [part~='gradient_start'],
:host([variant='warning']) [part~='gradient_end'] {
    stop-color: $warning-color;
}

:host([variant='info']) [part~='gradient_start'],
:host([variant='info']) [part~='gradient_end'] {
    stop-color: $info-color;
}

:host([variant='success']) [part~='gradient_start'],
:host([variant='success']) [part~='gradient_end'] {
    stop-color: $success-color;
}

[part~='indeterminate'] [part~='outer'] {
    stroke-dashoffset: calc(var(--circumference) * 2);
    animation: indeterminate-accordion 1.5s cubic-bezier(0, .085, .68, .53) $animation-direction infinite;
}
