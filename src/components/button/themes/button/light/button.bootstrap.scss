@use '../../../../../styles/utilities' as utils;
@use './button.base.scss';

:host [part='base'] {
    transition: all .15s ease-out;

    &::before {
        transition: all .15s ease-out;
    }
}

:host([size='large']) [part='base'] {
    --size: #{utils.rem(48px)};
}

:host([size='medium']) [part='base'] {
    --size: #{utils.rem(38px)};
}

:host([size='small']) [part='base'] {
    --size: #{utils.rem(31px)};
}

:host([disabled][variant='flat']) [part='base'] {
    background: transparent;
    color: #{utils.color(primary, 100)};
}

:host([disabled][variant='fab']),
:host([disabled][variant='contained']) {
    [part='base'] {
        background: #{utils.color(primary, 200)};
        color: #{utils.contrast-color(primary, 600)};
    }
}

:host([disabled][variant='outlined']) [part='base'] {
    color: #{utils.color(primary, 500)};
    box-shadow: 0 0 0 1px utils.color(primary, 500);
    opacity: .65;
    background: transparent;
}

:host(:not([disabled])[variant='flat']) [part='base'] {
    color: #{utils.color(primary, 500)};
    border-radius: calc(var(--igc-border-radius) * 2);

    &:hover {
        color: #{utils.color(primary, 800)};
    }

    &:focus,
    &:active {
        color: #{utils.color(primary, 600)};
        box-shadow: 0 0 0 utils.rem(4px) utils.color(primary, 200, .5);
    }

    &:hover::before {
        background: transparent;
    }

    &:focus::before,
    &:active::before {
        background: transparent;
        opacity: 1;
    }
}

:host(:not([disabled])[variant='contained']) [part='base'] {
    color: #{utils.contrast-color(primary, 600)};
    box-shadow: var(--igc-elevation-0);

    &:hover {
        color: #{utils.contrast-color(primary, 600)};
    }

    &:focus,
    &:active {
        color: #{utils.contrast-color(primary, 600)};
        box-shadow: 0 0 0 utils.rem(4px) utils.color(primary, 200, .5);
    }

    &::before {
        background: #{utils.color(primary, 500)};
        opacity: 1;
    }

    &:hover::before,
    &:focus::before,
    &:active::before {
        background: #{utils.color(primary, 600)};
        opacity: 1;
    }
}

:host(:not([disabled])[variant='outlined']) [part='base'] {
    color: #{utils.color(primary, 500)};
    box-shadow: 0 0 0 1px utils.color(primary, 500);
    overflow: visible;

    &::after {
        position: absolute;
        content: '';
        width: 100%;
        height: 100%;
        border-radius: calc(var(--igc-border-radius) * 2);
    }

    &:hover {
        background: #{utils.color(primary, 600)};
        color: #{utils.contrast-color(primary, 600)};
    }

    &:hover::before {
        background: #{utils.color(primary, 500)};
        opacity: 1;
    }

    &:focus::before,
    &:active::before {
        background: transparent;
        opacity: 1;
    }

    &:focus::after,
    &:active::after {
        box-shadow: 0 0 0 utils.rem(4px) utils.color(primary, 200, .5);
    }
}

:host([variant='fab'][size='large']) [part='base'] {
    border-radius: calc(var(--igc-border-radius) * 8);
}

:host([variant='fab'][size='medium']) [part='base'] {
    border-radius: calc(var(--igc-border-radius) * 6);
}

:host([variant='fab'][size='small']) [part='base'] {
    border-radius: calc(var(--igc-border-radius) * 4);
}

:host(:not([disabled])[variant='fab']) [part='base'] {
    color: #{utils.contrast-color(primary, 600)};
    box-shadow: var(--igc-elevation-0);

    &:hover {
        color: #{utils.contrast-color(primary, 600)};
    }

    &:focus,
    &:active {
        color: #{utils.contrast-color(primary, 600)};
        box-shadow: 0 0 0 utils.rem(4px) utils.color(primary, 200, .5);
    }

    &::before {
        background: #{utils.color(primary, 500)};
        opacity: 1;
    }

    &:hover::before,
    &:focus::before,
    &:active::before {
        background: #{utils.color(primary, 600)};
        opacity: 1;
    }
}
