@use 'styles/utilities' as *;
@use '../light/themes' as *;
@use 'igniteui-theming/sass/animations/easings' as *;

$theme: $material;
$idle-border-width: rem(1px) !default;
$active-border-width: rem(2px) !default;
$fs: rem(16px) !default;

%label {
    translate: 0 -50%;
}

%floated-styles {
    border-top: $idle-border-width solid transparent;
}

%suffix-preffix {
    display: inline-flex;
    align-items: center;
    width: max-content;
    height: 100%;
}

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --input-size: var(--component-size);
    --affix-padding: #{pad-inline(rem(12px), rem(14px), rem(16px))};

    input:placeholder-shown + [part='notch'] {
        @extend %floated-styles;
    }

    ::part(helper-text) {
        @include type-style('caption');

        color: var-get($theme, 'helper-text-color');
        margin-block-start: rem(4px);
        grid-auto-rows: minmax(rem(18px), auto);
        padding-inline: pad-inline(rem(14px), rem(16px), rem(18px));
    }
}

[part='prefix'],
[part='suffix'] {
    ::slotted(*) {
        color: inherit;
    }
}

input:placeholder-shown + [part='notch'] [part='label'],
[part~='filled'] + [part='notch'] [part='label'] {
    @include type-style('caption');
    @extend %label;
}

[part~='input'] {
    color: var-get($theme, 'filled-text-color');
    background: transparent;
    padding: 0 rem(4px);
    font-size: rem(16px);
    grid-area: 1 / 2 / span 1 / span 2;
}

[part='label'] {
    @include type-style('subtitle-1');

    color: var-get($theme, 'idle-secondary-color');
    transition:
        transform 150ms cubic-bezier(0.4, 0, 0.2, 1),
        translate 150ms cubic-bezier(0.4, 0, 0.2, 1),
        color 150ms cubic-bezier(0.4, 0, 0.2, 1),
        font-size 150ms cubic-bezier(0.4, 0, 0.2, 1);
    text-overflow: ellipsis;
    overflow: hidden;
    will-change: font-size, color, transform, translate;
}

[part^='container'] {
    grid-template-columns: auto auto 1fr auto;
}

[part~='input'],
[part^='container'] {
    height: var-get($theme, 'size');
}

[part='start'] {
    border-start-start-radius: var-get($theme, 'border-border-radius');
    justify-content: flex-start;
    grid-area: 1 / 1;

    > [part='prefix'] {
        ::slotted(*) {
            @extend %suffix-preffix;
        }
    }
}

[part='notch'] {
    display: flex;
    align-items: center;
    width: auto;
    min-width: 0;
    height: 100%;
    grid-area: 1 / 2;
    padding: 0 rem(4px);
    overflow: visible;

    &:empty {
        display: none;
    }
}

[part='filler'] {
    grid-area: 1 / 3;
}

[part='end'] {
    border-start-end-radius: var-get($theme, 'border-border-radius');
    justify-content: flex-end;
    grid-area: 1 / 4;

    > [part='suffix'] {
        ::slotted(*) {
            @extend %suffix-preffix;
        }
    }
}

[part='start'],
[part='end'] {
    display: flex;
    min-width: sizable(rem(10px), rem(12px), rem(14px));
    height: var(--size);
    overflow: hidden;
}

:host(:focus-within) {
    [part='label'] {
        color: var-get($theme, 'focused-secondary-color');
    }
}

:host(:not([readonly]):focus-within) {
    [part='label'] {
        @include type-style('caption');

        translate: 0 -73%;
    }
}

:host([outlined]:not([readonly]):focus-within) {
    [part='label'] {
        @extend %label;

        align-self: start;
    }
}


:host([readonly]:not([outlined]):focus-within) {
    :not([part~='filled']) {
        input:has(:not(:placeholder-shown)) + [part='notch'] [part='label'] {
            translate: 0;
            font-size: initial;
        }
    }
}

:host(:not([outlined])) {
    [part='prefix'],
    [part='suffix'] {
        max-height: calc(100% - #{rem(1px)});
    }

    [part='label'] {
        inset-inline-start: rem(2px);
    }

    [part~='container'] {
        background: var-get($theme, 'box-background');
        border-bottom: 1px solid var-get($theme, 'idle-bottom-line-color');

        border: {
            start: {
                end-radius: var-get($theme, 'box-border-radius');
                start-radius: var-get($theme, 'box-border-radius');
            }
        }

        transition: border-bottom-width 150ms cubic-bezier(0.4, 0, 0.2, 1);

        &::after {
            position: absolute;
            content: '';
            width: 100%;
            height: rem(2px);
            left: 0;
            right: 0;
            bottom: -1px;
            background: var-get($theme, 'idle-bottom-line-color');
            transform: scaleX(0);
            transition:
                transform 180ms cubic-bezier(0.4, 0, 0.2, 1),
                opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);
        }
    }

    [part~='labelled'] [part~='input'] {
        padding-top: rem(20px);
        padding-bottom: rem(6px);
    }

    input:placeholder-shown + [part='notch'] [part='label'],
    [part~='filled'] + [part='notch'] [part='label'] {
        translate: 0 -73%;
    }
}

:host(:not([outlined],[type='search'],[aria-haspopup='dialog'],[role='combobox'])[readonly]) {
    [part~='container'] {
        background: var-get($theme, 'box-background-focus');
    }
}

:host(:not([outlined],[type='search'],[aria-haspopup='dialog'],[role='combobox'])[readonly]:hover) {
    [part~='container'] {
        background: var-get($theme, 'box-background-focus');
        border-bottom-color: var-get($theme, 'idle-bottom-line-color');

        &::after {
            background: var-get($theme, 'idle-bottom-line-color');
        }
    }
}

:host(:not([outlined]):hover) {
    [part~='container'] {
        background: var-get($theme, 'box-background-hover');
        border-bottom-color: var-get($theme, 'hover-bottom-line-color');

        &::after {
            background: var-get($theme, 'hover-bottom-line-color');
        }
    }
}

:host(:not([outlined]):focus-within),
:host(:not([outlined],[aria-haspopup='dialog'],[role='combobox'])[readonly]:focus-within) {
    [part~='container'] {
        background: var-get($theme, 'box-background-focus');
        border-bottom-color: var-get($theme, 'focused-bottom-line-color');

        &::after {
            background: var-get($theme, 'focused-bottom-line-color');
            transform: scaleX(1);
            opacity: 1;
        }
    }
}

:host(:not([outlined],[aria-haspopup='dialog'],[role='combobox'])[readonly]:focus-within) {
    [part='label'] {
        @include type-style('caption');

        translate: 0 -73%;
    }
}

:host(:not([outlined],[disabled],[readonly]):state(ig-invalid)),
:host(:not([outlined],[disabled],[readonly]):state(ig-invalid):focus-within),
:host(:not([disabled],[outlined])[role='combobox']:state(ig-invalid)),
:host(:not([disabled],[outlined])[role='combobox']:state(ig-invalid):focus-within) {
    [part~='container'] {
        border-color: var-get($theme, 'error-secondary-color');

        &::after {
            background: var-get($theme, 'error-secondary-color');
        }
    }
}

:host(:not([outlined])[disabled]),
:host(:not([outlined]):disabled) {
    [part~='container'] {
        background: var-get($theme, 'box-disabled-background');
        border-color: var-get($theme, 'disabled-border-color');
        border-bottom-style: dashed;
    }
}

:host([type='search']) {
    [part^='container'] {
        background: var-get($theme, 'search-background');
        border-bottom: none;
        box-shadow: var-get($theme, 'search-resting-elevation');
        border-radius: var-get($theme, 'search-border-radius');
        overflow: hidden;

        &:focus-within {
            background: var-get($theme, 'search-background');

            &::after {
                display: none;
            }
        }
    }
}

:host(:not([readonly])[type='search']:hover),
:host([type='search']:focus-within) {
    [part^='container'] {
        box-shadow: var-get($theme, 'search-hover-elevation');
        background: var-get($theme, 'search-background');
    }
}

:host([readonly][type='search']:hover),
:host([readonly][type='search']:focus-within) {
    [part^='container'] {
        background: var-get($theme, 'search-background');
    }
}

:host([outlined][type='search']) {
    [part~='labelled'] [part~='input'] {
        padding-top: rem(20px);
        padding-bottom: rem(6px);
    }
}

:host([outlined][type='search']:focus-within) {
    [part='notch'] [part='label'] {
        translate: 0 -73%;
    }
}

:host(:disabled[type='search']),
:host([disabled][type='search']) {
    [part^='container'] {
        background: var-get($theme, 'search-disabled-background');
        box-shadow: var-get($theme, 'search-disabled-elevation');
        border: none;
    }
}

:host(:not([type='search'])[outlined]) {
    [part^='container'] {
        border-radius: var-get($theme, 'border-border-radius');
        background: var-get($theme, 'border-background');
    }

    [part='start'] {
        border: {
            style: solid;
            color: var-get($theme, 'border-color');
            inline: {
                start-width: $idle-border-width;
                end-width: 0;
            }
            block: {
                start-width: $idle-border-width;
                end-width: $idle-border-width;
            }
            start: {
                start-radius: var-get($theme, 'border-border-radius');
            }
            end: {
                start-radius: var-get($theme, 'border-border-radius');
            }
        }
    }

    [part='filler'] {
        border: {
            width: $idle-border-width;
            style: solid;
            color: var-get($theme, 'border-color');
            left: none;
            right: none;
        }
    }

    [part='end'] {
        border: {
            style: solid;
            color: var-get($theme, 'border-color');
            inline: {
                start-width: 0;
                end-width: $idle-border-width;
            }
            block: {
                start-width: $idle-border-width;
                end-width: $idle-border-width;
            }
            start: {
                end-radius: var-get($theme, 'border-border-radius');
            }
            end: {
                end-radius: var-get($theme, 'border-border-radius');
            }
        }
    }
}

:host([outlined]) {
    [part='notch'] {
        border: {
            width: $idle-border-width;
            style: solid;
            color: var-get($theme, 'border-color');
            left: none;
            right: none;
        }
    }

    [part~='filled'] + [part='notch'] {
        @extend %floated-styles;

        [part='label'] {
            align-self: start;
        }
    }

    [part~='container']:has(input:placeholder-shown) {
        [part='label'] {
            align-self: start;
        }
    }
}

:host(:not([aria-haspopup='dialog'],[role='combobox'])[outlined][readonly]:hover) {
    [part='notch'],
    [part='start'],
    [part='end'],
    [part='filler'] {
        border-color: var-get($theme, 'border-color');
    }

    [part~='filled'] + [part='notch'] {
        @extend %floated-styles;
    }
}

:host(:not([aria-haspopup='dialog'],[role='combobox'])[outlined][readonly]:focus-within) {
    [part='notch'],
    [part='start'],
    [part='end'],
    [part='filler'] {
        border-color: var-get($theme, 'focused-border-color');
    }

    [part='notch'] {
        border-top: $idle-border-width solid transparent;
    }
}

:host(:not(:state(ig-invalid),[type='search'])[readonly][outlined]:focus-within) {
    :not([part~='filled']) {
        input:has(:not(:placeholder-shown)) + [part='notch'] [part='label'] {
            translate: 0;
            font-size: initial;
            align-self: center;
        }

        input:has(:not(:placeholder-shown)) + [part='notch'] {
            border: {
                width: $active-border-width;
                color: var-get($theme, 'focused-border-color');
            }
        }
    }
}

:host(:not([type='search'])[outlined]:hover) {
    [part='notch'],
    [part='start'],
    [part='end'],
    [part='filler'] {
        border-color: var-get($theme, 'hover-border-color');
    }

    input:placeholder-shown + [part='notch'],
    [part~='filled'] + [part='notch'] {
        @extend %floated-styles;
    }
}

:host(:not([type='search'])[outlined]:focus-within) {
    [part='start'] {
        border: {
            color: var-get($theme, 'focused-border-color');
            inline: {
                start-width: $active-border-width;
            }
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            }
        }
    }

    [part='notch'] {
        border: {
            width: $active-border-width;
            color: var-get($theme, 'focused-border-color');
        }
    }

    input:placeholder-shown + [part='notch'],
    [part~='filled'] + [part='notch'] {
        border: {
            width: $active-border-width;
            color: var-get($theme, 'focused-border-color');
            top: $idle-border-width solid transparent;
        }
    }

    [part='filler'] {
        border: {
            width: $active-border-width;
            color: var-get($theme, 'focused-border-color');
        }
    }

    [part='end'] {
        border: {
            color: var-get($theme, 'focused-border-color');
            inline: {
                end-width: $active-border-width;
            }
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            }
        }
    }
}

:host(:not([type='search'],[aria-haspopup='dialog'],[role='combobox'])[outlined]:focus-within) {
    [part='notch'] {
        border: {
            width: $active-border-width;
            color: var-get($theme, 'focused-border-color');
            top: $idle-border-width solid transparent;
        }
    }
}

:host(:not([type='search'])[outlined]:focus),
:host(:not([type='search'])[outlined]:focus-within) {
    [part='suffix'] {
        margin-inline-end: rem(-1px);
    }

    [part='prefix'] {
        margin-inline-start: rem(-1px);
    }

    [part='suffix'],
    [part='prefix'] {
        ::slotted(*) {
            padding-block: pad-block(10px, 12px, 14px);
        }
    }
}

:host(:not([type='search'],[readonly])[outlined]:state(ig-invalid)),
:host(:not([type='search'],[readonly])[outlined]:state(ig-invalid):focus-within),
:host(:not([disabled])[role='combobox'][outlined]:state(ig-invalid)),
:host(:not([disabled])[role='combobox'][outlined]:state(ig-invalid):focus-within) {
    [part='start'],
    [part='notch'],
    [part='filler'],
    [part='end'] {
        border-color: var-get($theme, 'error-secondary-color');
    }

    input:placeholder-shown + [part='notch'],
    [part~='filled'] + [part='notch'] {
        @extend %floated-styles;
    }
}

:host(:not([disabled])[role='combobox'][outlined]:state(ig-invalid):focus-within) {
     :not([part~='filled']) {
        input:not(:placeholder-shown) + [part='notch'] {
            border-width: $active-border-width;
        }
    }
}

:host(:not([type='search'])[outlined]:state(ig-invalid):focus-within),
:host([role='combobox'][outlined]:state(ig-invalid):focus-within) {
    [part='notch'] {
        border-top: $idle-border-width solid transparent;
    }
}

:host(:not([disabled],[readonly]):state(ig-invalid)),
:host(:not([disabled])[role='combobox']:state(ig-invalid)) {
    [part='label'] {
        color: var-get($theme, 'error-secondary-color');
    }
}

:host(:not([type='search']):disabled[outlined]),
:host(:not([type='search'])[disabled][outlined]) {
    [part='start'],
    [part='filler'],
    [part='notch'],
    [part='end'] {
        border-color: var-get($theme, 'disabled-border-color');
    }

    input:placeholder-shown + [part='notch'],
    [part~='filled'] + [part='notch'] {
        @extend %floated-styles;
    }
}

:host([type='search'][outlined]) {
    [part='notch'] {
        border: none;
    }
}

:host(:disabled),
:host([disabled]) {
    [part~='input'],
    [part='label'],
    [part='prefix'],
    [part='suffix'],
    ::part(helper-text) {
        color: var-get($theme, 'disabled-text-color');
    }

    [part='start'],
    [part='filler'],
    [part='notch'],
    [part='end'] {
        color: var-get($theme, 'disabled-text-color');
    }

    [part~='filled'] + [part='notch'] {
        @extend %floated-styles;
    }
}
