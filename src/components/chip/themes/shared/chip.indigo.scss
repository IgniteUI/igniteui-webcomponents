@use 'styles/utilities' as *;
@use '../light/themes' as *;

$theme: $indigo;

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
}

:host button {
    border: rem(1px) solid var-get($theme, 'border-color');
    padding: 0 pad(4px, 6px, 8px);

    &:focus {
        box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');
    }

    &[disabled] {
        border-color: var-get($theme, 'disabled-border-color');
    }

    igc-icon {
        --size: #{sizable(rem(14px), rem(14px), rem(16px))};
    }
}

:host([selected]) button:not([disabled]) {
    color: var-get($theme, 'selected-text-color');
    background: var-get($theme, 'selected-background');
    border-color: transparent;

    &:focus {
        box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-selected-outline-color');
    }

    &:hover {
        color: var-get($theme, 'hover-selected-text-color');
        background: var-get($theme, 'hover-selected-background');
    }

}

:host([variant='primary']) button,
:host([selected][variant='primary']) button:not([disabled]) {
    color: var-get($theme, 'selected-text-color');
    background: var-get($theme, 'selected-background');
    border-color: transparent;

    &:focus {
        color: var-get($theme, 'selected-text-color');
        background: var-get($theme, 'selected-background');
        box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-selected-outline-color');
    }

    &:hover {
        color: var-get($theme, 'hover-selected-text-color');
        background: var-get($theme, 'hover-selected-background');
    }
}

:host([selected]) button[disabled],
:host([variant='primary']) button[disabled] {
    background: color($color: 'primary', $variant: 400, $opacity: .5);
    border-color: transparent;
}

:host([variant='info']) button,
:host([selected][variant='info']) button:not([disabled]) {
    border-color: transparent;

    &:focus {
        background: color(info, 500);
        color: contrast-color(info, 500);
        box-shadow: 0 0 0 rem(3px) color(info, 200);
    }

    &:hover {
        background: color(info, 400);
        color: contrast-color(info, 400);
    }
}

:host([variant='info']) button[disabled] {
    background: color(info, 200);
    color: contrast-color(info, 400);
}

:host([variant='success']) button,
:host([selected][variant='success']) button:not([disabled]) {
    border-color: transparent;

    &:focus {
        background: color(success, 500);
        color: contrast-color(success, 500);
        box-shadow: 0 0 0 rem(3px) color(success, 200);
    }

    &:hover {
        background: color(success, 400);
        color: contrast-color(success, 400);
    }
}

:host([variant='success']) button[disabled] {
    background: color(success, 200);
    color: contrast-color(success, 800);
}

:host([variant='warning']) button,
:host([selected][variant='warning']) button:not([disabled]) {
    border-color: transparent;

    &:focus {
        background: color(warn, 500);
        color: contrast-color(warn, 500);
        box-shadow: 0 0 0 rem(3px) color(warn, 200);
    }

    &:hover {
        background: color(warn, 400);
        color: contrast-color(warn, 400);
    }
}

:host([variant='warning']) button[disabled] {
    background: color(warn, 200);
    color: contrast-color(warn, 900);
}

:host([variant='danger']) button,
:host([selected][variant='danger']) button:not([disabled]) {
    border-color: transparent;

    &:focus {
        background: color(error, 500);
        color: contrast-color(error, 500);
        box-shadow: 0 0 0 rem(3px) color(error, 200);
    }

    &:hover {
        background: color(error, 400);
        color: contrast-color(error, 400);
    }
}

:host([variant='danger']) button[disabled] {
    background: color(error, 200);
    color: contrast-color(error, 400);
}
