@use '../../../../styles/utilities' as utils;

:host {
    &::part(base) {
        transition: none;
    }
}

:host [part~='control'] {
    --size: #{utils.rem(16px)};

    width: var(--size);
    height: var(--size);
    min-width: var(--size);
    background: none;
    transition: transparent;

    &::before,
    &::after {
        transition: none;
    }

    &::before {
        transform: translate(-50%, -50%) scale(.375);
    }

    &::after {
        width: inherit;
        height: inherit;
        min-width: inherit;
        border-color: #{utils.color(gray, 400)};
        border-width: calc(var(--size, #{utils.rem(10px)}) / 10);
    }
}

:host(:focus-within) [part~='control'] {
    box-shadow: 0 0 0 #{calc(var(--size, #{utils.rem(16px)}) / 4)} #{utils.color(primary, 100)};

    &::after {
        border-color: #{utils.color(primary, 500)};
    }
}

:host [part='control checked'] {
    &::after {
        background: #{utils.color(primary, 500)};
        border-color: #{utils.color(primary, 500)};
    }

    &::before {
        background: white;
    }
}

:host(:not([disabled])[invalid]) {
    [part~='control']::after {
        border-color: utils.color(error, 500);
    }

    [part='control checked'] {
        &::after {
            background: utils.color(error, 500);
        }
    }
}

:host([invalid]:focus-within) {
    [part~='control'] {
        box-shadow: 0 0 0 #{calc(var(--size, #{utils.rem(16px)}) / 4)} #{utils.color(error, 100)};
    }
}

:host([disabled]) {
    [part='control'] {
        &::after {
            border-color: #{utils.color(gray, 300)};
        }
    }

    [part='control checked'] {
        &::after {
            background: #{utils.color(primary, 200)};
            border-color: #{utils.color(primary, 200)};
        }

        &::before {
            background: white;
        }
    }
}
