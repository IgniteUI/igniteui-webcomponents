@use 'styles/utilities' as *;
@use '../../light/themes' as *;

$theme: $material;

@mixin disabled {
    [part~='toggle'] {
        color: var-get($theme, 'disabled-text-color');
        background: var-get($theme, 'disabled-background-color');
        border-color: var-get($theme, 'item-disabled-border');
    }

    ::slotted(igc-icon) {
        color: var-get($theme, 'disabled-text-color');
    }
}

:host {
    [part~='toggle'] {
        $icon-size: rem(18px);

        --ig-icon-size: #{$icon-size};
        --igx-icon-size: #{$icon-size};

        min-height: $material-flat-btn-size;
        color: var-get($theme, 'item-text-color');
        background: var-get($theme, 'item-background');
        padding-inline: rem(16px);
        padding-block: pad-block(rem(1px), rem(4px), rem(6px));
        border-color: var-get($theme, 'item-border-color');
    }

    ::slotted(igc-icon) {
        color: var-get($theme, 'item-icon-color');
    }
}

:host(:hover) {
    [part~='toggle'] {
        color: var-get($theme, 'item-hover-text-color');
        background: var-get($theme, 'item-hover-background');
        border-color: var-get($theme, 'item-hover-border-color');
    }

    ::slotted(igc-icon) {
        color: var-get($theme, 'item-hover-icon-color');
    }
}

:host([selected]) {
    [part~='toggle'] {
        color: var-get($theme, 'item-selected-text-color');
        background: var-get($theme, 'item-selected-background');
        border-color: var-get($theme, 'item-selected-border-color');
    }

    ::slotted(igc-icon) {
        color: var-get($theme, 'item-selected-icon-color');
    }
}

:host([selected]:hover) {
    [part~='toggle'] {
        color: var-get($theme, 'item-selected-hover-text-color');
        background: var-get($theme, 'item-selected-hover-background');
        border-color: var-get($theme, 'item-selected-hover-border-color');
    }

    ::slotted(igc-icon) {
        color: var-get($theme, 'item-selected-hover-icon-color');
    }
}

:host([disabled]),
:host(:disabled) {
    @include disabled();
}

:host-context([disabled]),
:host-context(:disabled) {
    @include disabled();
}

:host([selected]:disabled),
:host([selected][disabled]) {
    [part~='toggle'] {
        &::before {
            position: absolute;
            content: '';
            inset: 0;
            z-index: 3;
            background: var-get($theme, 'disabled-selected-background');
        }
    }
}
