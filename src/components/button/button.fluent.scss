@use '../../styles/utilities' as utils;

@mixin theme() {
    igc-button[variant='contained']::part(base),
    igc-button[variant='fab']::part(base) {
        box-shadow: var(--igc-elevation-0);
    }

    igc-button[size='small']::part(base) {
        border-radius: calc(var(--igc-border-radius) * 1);
        --size: #{utils.rem(24px)};
    }

    igc-button[size='medium']::part(base) {
        border-radius: calc(var(--igc-border-radius) * 1);
        --size: #{utils.rem(28px)};
    }

    igc-button[size='large']::part(base) {
        border-radius: calc(var(--igc-border-radius) * 1);
        --size: #{utils.rem(32px)};
    }

    // FLAT
    igc-button[variant='flat']:not([disabled])::part(base) {
        color: #{utils.color(gray, 900)};

        &:hover {
            color: #{utils.color(primary, 500)};
        }

        &:active {
            color: #{utils.color(gray, 900)};
        }

        &:hover,
        &:focus,
        &:active {
            &::before {
                background: transparent;
            }
        }
    }

    // OUTLINED
    igc-button[variant='outlined']:not([disabled])::part(base) {
        color: #{utils.color(gray, 900)};
        transition: color .15s ease-out;
        box-shadow: 0 0 0 1px #{utils.color(gray, 700)};

        &:hover,
        &:focus:hover {
            &::before {
                opacity: 1;
                background: #{utils.color(gray, 100)};
            }
        }

        &:focus {
            &::before {
                opacity: 1;
                background: transparent;
            }
        }

        &:focus:active {
            &::before {
                opacity: 1;
                background: #{utils.color(gray, 200)};
            }
        }

        &:hover,
        &:focus,
        &:active {
            color: #{utils.color(gray, 900)};
        }

        &:active,
        &:focus:active,
        &:focus-visible:hover:active,
        &:focus-visible:active {
            &::before {
                opacity: 1;
                background: #{utils.color(gray, 200)};
            }
        }

        &:focus-visible:hover {
            &::before {
                opacity: 1;
                background: #{utils.color(gray, 100)};
            }
        }
    }

    // FLAT & OUTLINED
    igc-button[variant='flat']:not([disabled])::part(base),
    igc-button[variant='outlined']:not([disabled])::part(base) {
        &:focus-visible {
            position: relative;

            &::after {
                content: '';
                box-shadow: 0 0 0 1px #{utils.color(gray, 800)};
                position: absolute;
                top: 2px;
                left: 2px;
                pointer-events: none;
                width: calc(100% - 4px);
                height: calc(100% - 4px);
            }

            &::before {
                background: transparent;
            }
        }
    }

    // FAB & CONTAINED
    igc-button[variant='contained']:not([disabled])::part(base),
    igc-button[variant='fab']:not([disabled])::part(base) {
        color: #{utils.contrast-color(primary, 600)};

        &:hover,
        &:focus-visible:hover {
            color: #{utils.contrast-color(primary, 600)};

            &::before {
                opacity: 1;
                background: #{utils.color(primary, 600)};
            }
        }

        &:focus,
        &:active {
            color: #{utils.contrast-color(primary, 600)};
        }

        &::before {
            opacity: 1;
            background: #{utils.color(primary, 500)};
        }

        &:active,
        &:focus-visible:active {
            &::before {
                opacity: 1;
                background: #{utils.color(primary, 700)};
            }
        }

        &:focus-visible {
            position: relative;

            &::after {
                content: '';
                box-shadow: 0 0 0 1px #{utils.contrast-color(primary, 600)};
                position: absolute;
                top: 3px;
                left: 3px;
                pointer-events: none;
                width: calc(100% - 6px);
                height: calc(100% - 6px);
            }

            &::before {
                background: transparent;
            }
        }
    }

    igc-button[variant='fab']:not([disabled])::part(base) {
        border-radius: calc(#{var(--igc-border-radius)} * 7);

        &::after {
            border-radius: calc(#{var(--igc-border-radius)} * 6);
        }
    }

    // DISABLED START
    igc-button[variant='flat'][disabled]::part(base) {
        color: #{utils.color(gray, 400)};
        background: transparent;
    }

    igc-button[variant='fab'][disabled]::part(base),
    igc-button[variant='contained'][disabled]::part(base) {
        color: #{utils.color(gray, 400)};

        &::before {
            opacity: 1;
            background: #{utils.color(gray, 100)};
        }
    }

    igc-button[variant='outlined'][disabled]::part(base) {
        box-shadow: none;
        color: #{utils.color(gray, 500, 8)};
        background: #{utils.color(gray, 200)};
    }
    // DISABLED END
}

