@use 'styles/utilities' as *;
@use '../../light/themes' as *;

$theme: $bootstrap;

:host {
    border-end-end-radius: 0;
    border-end-start-radius: 0;

    [part='tab-header'] {
        transition: none;
        border-radius: 0;
        padding: pad-block(rem(8px)) pad-inline(rem(16px));

        &::before {
            content: '';
            position: absolute;
            border-radius: var-get($theme, 'border-radius') var-get($theme, 'border-radius') 0 0;
            inset: 0;
            z-index: -1;
        }

        ::slotted(igc-icon) {
            transition: none;
        }
    }
}

[part~='content'] {
    @include type-style('button');
}

[part='tab-header'] {
    &:hover {
        &::before {
            box-shadow:
                inset 0 var(--_border-size) 0 0 var-get($theme, 'border-color--hover'),  /* Top */
                inset calc(var(--_border-size) * -1) 0 0 0 var-get($theme, 'border-color--hover'),  /* Left */
                inset var(--_border-size) 0 0 0 var-get($theme, 'border-color--hover'),  /* Right */
        }
    }

    &:focus,
    &:focus-within {
        background: var-get($theme, 'item-hover-background');
        z-index: 1;
    }

    &:focus-within {
        &::after {
            content: '';
            pointer-events: none;
            user-select: none;
            position: absolute;
            width: 100%;
            height: 100%;
            box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'item-hover-color');
            border-radius: var-get($theme, 'border-radius');
            z-index: 2;
        }
    }
}

:host([selected]) {
    [part='tab-header'] {
        position: relative;

        &::before {
            box-shadow:
                inset 0 var(--_border-size) 0 0 var-get($theme, 'border-color'),  /* Top */
                inset calc(var(--_border-size) * -1) 0 0 0 var-get($theme, 'border-color'),  /* Left */
                inset var(--_border-size) 0 0 0 var-get($theme, 'border-color'),  /* Right */
        }

        &:hover {
            border-top-color: var-get($theme, 'border-color');
            border-inline-color: var-get($theme, 'border-color');
            border-bottom-color: var-get($theme, 'item-background');
        }

        &:focus,
        &:focus-within
        {
            background: var-get($theme, 'item-hover-background');
            z-index: 1;
        }
    }
}

:host(:not([selected])) {
    [part='tab-header'] {
        border-radius: 0;
        box-shadow: inset 0 calc(var(--_border-size) * -1) 0 0 var-get($theme, 'border-color');

        &::before {
            height: calc(100% - var(--_border-size));
        }
    }
}
