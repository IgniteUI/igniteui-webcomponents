@use 'sass:map';
@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;
@use '../../../../styles/themes/schemas' as *;

$schema: map.get($light-material-schema, 'input-group');
$theme: digest-schema($schema);

:host {
    --size: #{sizable(rem(82px, 22px), rem(82px, 19px), rem(82px, 16px))};

    font-family: var(--ig-font-family);
    resize: vertical;
    overflow: hidden;
}

:host([size='large']) {
    --component-size: var(--ig-size, var(--ig-size-large));
}

:host([size='medium']) {
    --component-size: var(--ig-size, var(--ig-size-medium));
}

:host([size='small']) {
    --component-size: var(--ig-size, var(--ig-size-small));
}

[part~='label'] {
    @include ellipsis();
}

[part~='container'] {
    display: grid;
    grid-template-columns: auto 1fr auto;
    grid-area: 1 / 2 / span 1 / span 2;
    height: auto;
    position: relative;
    max-width: 100%;
    font-size: rem(16px);
    min-height: var(--size);

    &:hover {
        cursor: pointer;
    }
}

textarea {
    font: inherit;
    overflow: auto;
    grid-area: 1 / 2 / auto / auto;
    height: auto;
    position: relative;
    display: block;
    border: none;
    padding-block-start: rem(20px);
    padding-block-end: rem(6px);
    padding-inline-start: 0;
    width: 100%;
    min-width: 0;
    background: transparent;
    color: var-get($theme, 'filled-text-color');
    outline-style: none;
    box-shadow: none;
    overflow: hidden;
    text-overflow: ellipsis;

    &::placeholder {
        color: var-get($theme, 'placeholder-color');
        opacity: 1;
        line-height: normal;
    }

    /* resets typography styles */
    line-height: normal;

    &:not([type='*']) {
        /* resets typography styles */
        line-height: normal; 
    }
}

%prefix,
%suffix {
    position: relative;
    display: inline-flex;
    width: max-content;
    align-items: center;
    height: 100%;
    padding-inline: pad-inline(8px, 12px, 16px);

    igc-icon {
        width: sizable(rem(18px), rem(20px), rem(24px)) ;
        height: sizable(rem(18px), rem(20px), rem(24px)) ;
        font-size: sizable(rem(18px), rem(20px), rem(24px)) !important;
    }
}

[part~='prefixed'] {
    [part='prefix'] {
        @extend %prefix;
        grid-area: 1 / 1 / auto / auto;
    }
}

[part~='suffixed'] {
    [part='suffix'] {
        @extend %suffix;
        grid-area: 1 / 3 / auto / auto;
    }
}

[part~='helper-text'] {
    position: relative;
    display: flex;
    justify-content: space-between;

    > * {
        margin-inline-end: rem(8px);

        &:last-child {
            margin-inline-end: 0;
        }
    }

    ::slotted(*) {
        display: flex;
        align-items: center;
        position: relative;
        width: 100%;
    }
}
