@use 'styles/common/component';
@use 'styles/utilities' as *;
@use 'tabs.common' as *;
@use 'sass:map';

:host {
    // Scroll buttons
    --scroll-btn-size: #{rem(48px)};
    --tabs-width: 100%;
    --tab-max-width: #{rem(360px)};
    --tab-min-width: #{rem(90px)};
    --_border-size: #{rem(1px)};

    display: block;
    overflow: hidden;
    position: relative;
    height: 100%;
}

%fake-column {
    content: '';
    width: 100%;
    height: 100%;
    grid-row: 1;
}

[part~='tabs'] {
    display: flex;
    height: 100%;
    scroll-padding-inline: var(--scroll-btn-size);
    scroll-behavior: smooth;
    overflow: hidden;
}

[part~='inner'] {
    display: grid;
    grid-template-rows: minmax(var(--header-min-height), auto) auto 1fr;
    align-items: center;
    position: relative;
    flex-grow: 1;

    ::slotted(igc-tab) {
        display: contents;
        pointer-events: none;
    }
}

[part~='scrollable'] {
    /* stylelint-disable */
    grid-template-columns: var(--scroll-btn-size) repeat(var(--tabs-count), minmax(max-content, auto)) var(--scroll-btn-size);
    /* stylelint-enable */
}

[part~='inner']:not([part~='scrollable']) {
    grid-template-columns: repeat(var(--tabs-count), minmax(auto, min-content));
    min-width: var(--tab-min-width);
}

:host([alignment='start']) {
    [part~='inner']:not([part~='scrollable']) {
        grid-template-columns: repeat(var(--tabs-count), minmax(max-content, auto)) 1fr;

        &::after {
            @extend %fake-column;
        }
    }
}

:host([alignment='center']) {
    [part~='inner']:not([part~='scrollable']) {
        grid-template-columns: 1fr repeat(var(--tabs-count), minmax(max-content, auto)) 1fr;

        &::before,
        &::after {
            @extend %fake-column;
        }
    }
}

:host([alignment='end']) {
    [part~='inner']:not([part~='scrollable']) {
        grid-template-columns: 1fr repeat(var(--tabs-count), minmax(max-content, auto));

        &::before {
            @extend %fake-column;
        }
    }
}

:host([alignment='justify']) {
    --tab-max-width--justify: 100%;

    [part~='scrollable'] {
        /* stylelint-disable */
        grid-template-columns: var(--scroll-btn-size) repeat(var(--tabs-count), minmax(var(--tab-min-width), 1fr)) var(--scroll-btn-size);
        /* stylelint-enable */
    }

    [part~='inner']:not([part~='scrollable']) {
        grid-template-columns: repeat(var(--tabs-count), minmax(var(--tab-min-width), auto));
    }
}

[part~='start-scroll-button'],
[part~='end-scroll-button'] {
    grid-row: 1;
    position: sticky;
    top: 0;
    height: 100%;
    min-width: var(--scroll-btn-size);
    width: var(--scroll-btn-size);
    z-index: map.get($tabs-z-index, 'scroll-button');
    transform: scaleX(direction($rtl: var(--ig-dir)));
}

[part~='start-scroll-button'] {
    inset-inline-start: 0;
}

[part~='end-scroll-button'] {
    inset-inline-end: 0;
}

igc-icon-button::part(base) {
    border-radius: 0;
    padding: 0;
    height: 100%;
    width: 100%;
    transition: none;
}

[part='selected-indicator'] {
    $indicator-bezier: cubic-bezier(.35, 0, .25, 1);

    position: relative;
    grid-row: 2;
    grid-column: 1 / -1;

    span {
        position: absolute;
        display: inline-block;
        transition: transform .3s $indicator-bezier, width .2s $indicator-bezier;
        z-index: map.get($tabs-z-index, 'selected-indicator');
    }
}
