@use 'sass:map';
@use '../../../../../styles/utilities' as *;
@use '../../../../../styles/themes/schemas' as *;

$flat-schema: extend((name: 'ig-button'), map.get($light-indigo-schema, 'button', 'flat'));
$contained-schema: extend((name: 'ig-button'), map.get($light-indigo-schema, 'button', 'raised'));
$fab-schema: extend((name: 'ig-button'), map.get($light-indigo-schema, 'button', 'fab'));
$outlined-schema: extend((name: 'ig-button'), map.get($light-indigo-schema, 'button', 'outlined'));
$flat-theme: digest-schema($flat-schema);
$contained-theme: digest-schema($contained-schema);
$fab-theme: digest-schema($fab-schema);
$outlined-theme: digest-schema($outlined-schema);

:host {
    --size: #{sizable(rem(28px), rem(32px), rem(36px))};
}

:host([variant='flat']) {
    @include css-vars($flat-theme);
}

:host([variant='outlined']) {
    @include css-vars($outlined-theme);
}

:host([variant='contained']) {
    @include css-vars($contained-theme);
}

:host([variant='fab']) {
    --size: #{sizable(rem(36px), rem(42px), rem(48px))};

    @include css-vars($fab-theme);
}

[part='base'] {
    transition: all .15s ease-in-out;
}

:host([variant='flat']) [part='base'] {
    @include border-radius(map.get($flat-theme, 'border-radius')...);
}

:host([variant='outlined']) [part='base'] {
    @include border-radius(map.get($outlined-theme, 'border-radius')...);
}

:host([variant='contained']) [part='base'] {
    @include border-radius(map.get($contained-theme, 'border-radius')...);
}

:host([variant='fab']) [part='base'] {
    @include border-radius(map.get($fab-theme, 'border-radius')...);
}

:host(:not([disabled])[variant='flat']) [part='base'] {
    color: var-get($flat-theme, 'foreground');
    background: var-get($flat-theme, 'background');

    &:hover {
        color: var-get($flat-theme, 'hover-foreground');
        background: var-get($flat-theme, 'hover-background');
    }

    &:focus {
        color: var-get($flat-theme, 'focus-foreground');
        background: var-get($flat-theme, 'focus-background');
    }

    &:active {
        color: var-get($flat-theme, 'active-foreground');
        background: var-get($flat-theme, 'active-background');
    }

    &:focus-visible {
        color: var-get($flat-theme, 'focus-visible-foreground');
        background: var-get($flat-theme, 'focus-visible-background');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color');
    }
}

:host(:not([disabled])[variant='outlined']) [part='base'] {
    color: var-get($outlined-theme, 'foreground');
    background: var-get($outlined-theme, 'background');
    border-style: solid;
    border-color: var-get($outlined-theme, 'border-color');
    border-width: rem(2px);

    &:hover {
        background: var-get($outlined-theme, 'hover-background');
        color: var-get($outlined-theme, 'hover-foreground');
        border-color: var-get($outlined-theme, 'hover-border-color');
    }

    &:focus {
        background: var-get($outlined-theme, 'focus-background');
        color: var-get($outlined-theme, 'focus-foreground');
        border-color: var-get($outlined-theme, 'focus-border-color');
    }

    &:active {
        background: var-get($outlined-theme, 'active-background');
        color: var-get($outlined-theme, 'active-foreground');
        border-color: var-get($outlined-theme, 'active-border-color');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');
    }

    &:focus-visible {
        background: var-get($outlined-theme, 'focus-visible-background');
        color: var-get($outlined-theme, 'focus-visible-foreground');
        border-color: var-get($outlined-theme, 'focus-visible-border-color');

        &:hover {
            background: var-get($outlined-theme, 'hover-background');
            color: var-get($outlined-theme, 'hover-foreground');
            border-color: var-get($outlined-theme, 'hover-border-color');
        }

        &:active {
            background: var-get($outlined-theme, 'active-background');
            color: var-get($outlined-theme, 'active-foreground');
            border-color: var-get($outlined-theme, 'active-border-color');
        }
    }
}

:host(:not([disabled])[variant='contained']) [part='base'] {
    color: var-get($contained-theme, 'foreground');
    background: var-get($contained-theme, 'background');

    &:hover {
        color: var-get($contained-theme, 'hover-foreground');
        background: var-get($contained-theme, 'hover-background');
        border-color: var-get($contained-theme, 'hover-border-color');
    }

    &:focus {
        color: var-get($contained-theme, 'focus-foreground');
        background: var-get($contained-theme, 'focus-background');
        border-color: var-get($contained-theme, 'focus-border-color');
    }

    &:active {
        color: var-get($contained-theme, 'active-foreground');
        background: var-get($contained-theme, 'active-background');
        border-color: var-get($contained-theme, 'active-border-color');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(3px) var-get($contained-theme, 'shadow-color');
    }

    &:focus-visible {
        background: var-get($contained-theme, 'focus-visible-background');
        color: var-get($contained-theme, 'focus-visible-foreground');
        border-color: var-get($contained-theme, 'focus-visible-border-color');

        &:hover {
            color: var-get($contained-theme, 'hover-foreground');
            background: var-get($contained-theme, 'hover-background');
            border-color: var-get($contained-theme, 'hover-border-color');
        }

        &:active {
            color: var-get($contained-theme, 'active-foreground');
            background: var-get($contained-theme, 'active-background');
            border-color: var-get($contained-theme, 'active-border-color');
        }
    }
}

:host(:not([disabled])[variant='fab']) [part='base'] {
    color: var-get($fab-theme, 'foreground');
    background: var-get($fab-theme, 'background');
    border-color: var-get($flat-theme, 'border-color');
    min-width: var(--size);
    min-height: var(--size);

    &:hover {
        color: var-get($fab-theme, 'hover-foreground');
        background: var-get($fab-theme, 'hover-background');
        border-color: var-get($flat-theme, 'hover-border-color');
    }

    &:focus {
        color: var-get($fab-theme, 'focus-foreground');
        background: var-get($fab-theme, 'focus-background');
        border-color: var-get($flat-theme, 'focus-border-color');
    }

    &:active {
        color: var-get($fab-theme, 'active-foreground');
        background: var-get($fab-theme, 'active-background');
        border-color: var-get($flat-theme, 'active-border-color');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(3px) var-get($flat-theme, 'shadow-color');
    }

    &:focus-visible {
        background: var-get($fab-theme, 'focus-visible-background');
        color: var-get($fab-theme, 'focus-visible-foreground');
        border-color: var-get($fab-theme, 'focus-visible-border-color');

        &:hover {
            color: var-get($fab-theme, 'hover-foreground');
            background: var-get($fab-theme, 'hover-background');
            border-color: var-get($fab-theme, 'hover-border-color');
        }

        &:active {
            color: var-get($fab-theme, 'active-foreground');
            background: var-get($fab-theme, 'active-background');
            border-color: var-get($fab-theme, 'active-border-color');
        }
    }
}

:host([disabled][variant='flat']) [part='base'] {
    color: var-get($flat-theme, 'disabled-foreground');
    background: var-get($flat-theme, 'disabled-background');
}

:host([disabled][variant='outlined']) [part='base'] {
    color: var-get($outlined-theme, 'disabled-foreground');
    background: var-get($outlined-theme, 'disabled-background');
}

:host([disabled][variant='contained']) [part='base'] {
    color: var-get($contained-theme, 'disabled-foreground');
    background: var-get($contained-theme, 'disabled-background');
}

:host([disabled][variant='fab']) [part='base'] {
    color: var-get($fab-theme, 'disabled-foreground');
    background: var-get($fab-theme, 'disabled-background');
}
