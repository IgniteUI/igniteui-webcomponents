@use 'sass:map';
@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;
@use '../../../../styles/themes/schemas' as *;

$schema: map.get($light-material-schema, 'nav-drawer');
$theme: digest-schema($schema);

$active-text-color: var(--active-text-color, color(primary, 500)) !default;
$active-background: var(--active-background, color(primary, 500, .12)) !default;
$hover-background: var(--hover-background, color(gray, 200, .8)) !default;
$item-margin: rem(8px);

[part~='base'] {
    @include border-radius(map.get($theme, 'item-border-radius')...);

    display: flex;
    gap: rem(32px);
    align-items: center;
    flex-flow: row nowrap;
    position: relative;
    color: color(gray, 700);
    max-height: rem(48px);
    margin: #{$item-margin};
    padding: rem(12px) rem(8px);
    cursor: pointer;
    user-select: none;
    outline: transparent;
    white-space: nowrap;
    text-decoration: none;
    width: calc(100% - #{$item-margin * 2});
    border: none;
    justify-content: flex-start;
    transition: background .15s ease-out;

    ::slotted(igc-icon) {
        display: flex;
        font: inherit;
    }

    &:hover,
    &:focus-within {
        background: $hover-background;
        color: color(gray, 900);
    }
}

[part='content'] {
    @include ellipsis();
    @include type-style('subtitle-2');
}

[part='base mini'] {
    display: block;

    [part='content'] {
        display: none;
    }

    ::slotted(igc-icon) {
        width: 100%;
    }
}

:host([disabled]) {
    user-select: none;
    cursor: initial;
    pointer-events: none;

    [part~='base'] {
        color: color(gray, 400);
    }
}

:host([active]) {
    [part~='base'] {
        background: $active-background;
        color: $active-text-color;
    }
}
