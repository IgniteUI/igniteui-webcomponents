@use 'sass:map';
@use 'sass:math';
@use '../../../../../styles/utilities' as *;

$flat-schema: extend((name: 'igc-button'), map.get($light-bootstrap-schema, 'button', 'flat'));
$contained-schema: extend((name: 'igc-button'), map.get($light-bootstrap-schema, 'button', 'raised'));
$fab-schema: extend((name: 'igc-button'), map.get($light-bootstrap-schema, 'button', 'fab'));
$outlined-schema: extend((name: 'igc-button'), map.get($light-bootstrap-schema, 'button', 'outlined'));
$flat-theme: digest-schema($flat-schema);
$contained-theme: digest-schema($contained-schema);
$fab-theme: digest-schema($fab-schema);
$outlined-theme: digest-schema($outlined-schema);

:host([variant='flat']) {
    @include css-vars($flat-theme);

    [part='base'] {
        @include border-radius(var-get($flat-theme, 'border-radius'));
    }
}

:host([variant='contained']) {
    @include css-vars($contained-theme);

    [part='base'] {
        @include border-radius(var-get($contained-theme, 'border-radius'));
    }
}

:host([variant='outlined']) {
    @include css-vars($outlined-theme);

    [part='base'] {
        border: rem(1px) solid var-get($outlined-theme, 'border-color');

        @include border-radius(var-get($outlined-theme, 'border-radius'));
    }
}

:host([variant='fab']) {
    @include css-vars($fab-theme);

    [part='base'] {
        @include border-radius(var-get($fab-theme, 'border-radius'));
    }
}

:host {
    --size: #{sizable(rem(31px), rem(38px), rem(48px))};
}

:host [part='base'] {
    transition: all .15s ease-in-out;
}

:host(:not([disabled])[variant='flat']) [part='base'] {
    color: var-get($flat-theme, 'foreground');
    background: var-get($flat-theme, 'background');

    &:hover {
        color: var-get($flat-theme, 'hover-foreground');
        background: var-get($flat-theme, 'hover-background');
    }

    &:focus {
        color: var-get($flat-theme, 'focus-foreground');
        background: var-get($flat-theme, 'focus-background');
    }

    &:focus-visible {
        color: var-get($flat-theme, 'focus-visible-foreground');
        background: var-get($flat-theme, 'focus-visible-background');
    }

    &:active {
        color: var-get($flat-theme, 'active-foreground');
        background: var-get($flat-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(4px) var-get($flat-theme, 'shadow-color');
    }
}

:host(:not([disabled])[variant='contained']) [part='base'] {
    color: var-get($contained-theme, 'foreground');
    background: var-get($contained-theme, 'background');

    &:hover {
        color: var-get($contained-theme, 'hover-foreground');
        background: var-get($contained-theme, 'hover-background');
    }

    &:focus {
        color: var-get($contained-theme, 'focus-foreground');
        background: var-get($contained-theme, 'focus-background');
    }

    &:focus-visible {
        color: var-get($contained-theme, 'focus-visible-foreground');
        background: var-get($contained-theme, 'focus-visible-background');
    }

    &:active {
        color: var-get($contained-theme, 'active-foreground');
        background: var-get($contained-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(4px) var-get($contained-theme, 'shadow-color');
    }
}

:host(:not([disabled])[variant='outlined']) [part='base'] {
    color: var-get($outlined-theme, 'foreground');
    background: var-get($outlined-theme, 'background');

    &:focus {
        color: var-get($outlined-theme, 'focus-foreground');
        background: var-get($outlined-theme, 'focus-background');
    }

    &:focus-visible {
        color: var-get($outlined-theme, 'focus-visible-foreground');
        background: var-get($outlined-theme, 'focus-visible-background');
    }

    &:hover {
        color: var-get($outlined-theme, 'hover-foreground');
        background: var-get($outlined-theme, 'hover-background');
    }

    &:active {
        color: var-get($outlined-theme, 'active-foreground');
        background: var-get($outlined-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(4px) var-get($outlined-theme, 'shadow-color');
    }
}

:host(:not([disabled])[variant='fab']) [part='base'] {
    color: var-get($fab-theme, 'foreground');
    background: var-get($fab-theme, 'background');

    &:hover {
        color: var-get($fab-theme, 'hover-foreground');
        background: var-get($fab-theme, 'hover-background');
    }

    &:focus {
        color: var-get($fab-theme, 'focus-foreground');
        background: var-get($fab-theme, 'focus-background');
    }

    &:focus-visible {
        color: var-get($fab-theme, 'focus-visible-foreground');
        background: var-get($fab-theme, 'focus-visible-background');
    }

    &:active {
        color: var-get($fab-theme, 'active-foreground');
        background: var-get($fab-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(4px) var-get($fab-theme, 'shadow-color');
    }
}

:host([disabled][variant='flat']) [part='base'] {
    color: var-get($flat-theme, 'disabled-foreground');
    background: var-get($flat-theme, 'disabled-background');
}

:host([disabled][variant='contained']) [part='base'] {
    color: var-get($contained-theme, 'disabled-foreground');
    background: var-get($contained-theme, 'disabled-background');
}

:host([disabled][variant='outlined']) [part='base'] {
    color: var-get($contained-theme, 'disabled-foreground');
    background: var-get($contained-theme, 'disabled-background');
    border-color: var-get($contained-theme, 'disabled-border-color');
}

:host([disabled][variant='fab']) [part='base'] {
    color: var-get($fab-theme, 'disabled-foreground');
    background: var-get($fab-theme, 'disabled-background');
}
