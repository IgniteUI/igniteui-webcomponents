@use 'styles/utilities' as *;
@use '../../light/themes' as *;

$theme: $fluent;
$outline-indent: rem(1px);

:host {
    border-radius: var-get($theme, 'item-border-radius');
    color: var-get($theme, 'item-text-color');
    padding: pad(rem(2px), rem(4px), rem(8px));
}

:host([active]),
:host(:hover) {
    background: var-get($theme, 'hover-item-background');
    color: var-get($theme, 'hover-item-text-color');
}

:host([active]) {
    background: var-get($theme, 'focused-item-background');
    color: var-get($theme, 'focused-item-text-color');

    &::after {
        content: '';
        position: absolute;
        pointer-events: none;
        inset-block-start: $outline-indent;
        inset-inline-start: $outline-indent;
        width: calc(100% - (#{$outline-indent} * 2));
        height: calc(100% - (#{$outline-indent} * 2));
        border-radius: var-get($theme, 'item-border-radius');
        box-shadow: 0 0 0 rem(1px) var-get($theme, 'border-color');
    }
}

:host([selected]) {
    background: var-get($theme, 'selected-item-background');
    color: var-get($theme, 'selected-item-text-color');
}

:host([selected]:hover),
:host([selected][active]) {
    background: var-get($theme, 'selected-hover-item-background');
    color: var-get($theme, 'selected-hover-item-text-color');
}

:host([disabled]) {
    background: var-get($theme, 'disabled-item-background');
    color: var-get($theme, 'disabled-item-text-color');
}
