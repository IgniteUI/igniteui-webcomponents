@use 'styles/common/component';
@use 'styles/utilities' as *;
@use './light/themes' as *;

$theme: $material;

:host {
    --size: #{rem(22px)};
    --_badge-size: var(--size);

    width: fit-content;
    height: fit-content;
    display: inline-flex;
    font-weight: 500;
    vertical-align: top;
}

[part='base'] {
    display: inline-flex;
    min-width: var(--size);
    min-height: var(--size);
    line-height: 1;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    white-space: nowrap;
    font-family: var(--ig-font-family);
    font-weight: inherit;
}

::slotted(*) {
    --size: calc(var(--_badge-size) / 2) !important;

    font-size: calc(var(--_badge-size) / 2) !important;
}

::slotted(igc-icon) {
    color: var-get($theme, 'icon-color');
}

:host(:not(:empty)) [part='base'] {
    padding: calc(var(--size) / 8) calc(var(--size) / 5.5);
}

:host([variant='primary']) {
    background: var-get($theme, 'background-color');
    color: var-get($theme, 'text-color');
}

:host([variant='info']) {
    background: color(info, 500);
    color: contrast-color(info, 500);
}

:host([variant='success']) {
    background: color(success, 500);
    color: contrast-color(success, 500);
}

:host([variant='warning']) {
    background: color(warn, 500);
    color: contrast-color(warn, 500);
}

:host([variant='danger']) {
    background: color(error, 500);
    color: contrast-color(error, 500);
}

:host([shape='rounded']),
:host([outlined][shape='rounded']) [part='base'] {
    border-radius: calc(var(--size) * 2);
}

:host([shape='square']),
:host([outlined][shape='square']) [part='base'] {
    border-radius: var-get($theme, 'border-radius');
}

:host([outlined]) [part='base'] {
    box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'border-color');
}
