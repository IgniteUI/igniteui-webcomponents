@use 'sass:map';
@use '../../../../../styles/utilities' as *;
@use '../../../../../styles/themes/schemas/material/light' as *;

$flat-schema: map.get($light-material-schema, 'button', 'flat');
$flat-border-radius: border-radius(map.get($flat-schema, 'border-radius')...);
$flat-theme: digest-schema(extend(
    $flat-schema,
    (
        border-radius: $flat-border-radius
    )
));
$contained-schema: map.get($light-material-schema, 'button', 'raised');
$contained-border-radius: border-radius(map.get($contained-schema, 'border-radius')...);
$contained-theme: digest-schema(extend(
    $contained-schema,
    (
        border-radius: $contained-border-radius
    )
));
$fab-schema: map.get($light-material-schema, 'button', 'fab');
$fab-border-radius: border-radius(map.get($fab-schema, 'border-radius')...);
$fab-theme: digest-schema(extend(
    $fab-schema,
    (
        border-radius: $fab-border-radius
    )
));
$outlined-schema: map.get($light-material-schema, 'button', 'outlined');
$outlined-border-radius: border-radius(map.get($outlined-schema, 'border-radius')...);
$outlined-theme: digest-schema(extend(
    $outlined-schema,
    (
        border-radius: $outlined-border-radius
    )
));

:host([variant='flat']) {
    @include css-vars-from-theme($flat-theme, 'ig-button');
}

:host([variant='outlined']) {
    @include css-vars-from-theme($outlined-theme, 'ig-button');
}

:host([variant='contained']) {
    @include css-vars-from-theme($contained-theme, 'ig-button');
}

:host([variant='fab']) {
    --size: #{sizable(rem(32px), rem(40px), rem(48px))};

    @include css-vars-from-theme($fab-theme, 'ig-button');
}

[part='base'] {
    transition: all .1s ease-in-out;
}

:host(:not([disabled])[variant='flat']) [part='base'],
:host(:not(:disabled)[variant='flat']) [part='base'] {
    color: var-get($flat-theme, 'foreground');
    background: var-get($flat-theme, 'background');

    &:hover {
        color: var-get($flat-theme, 'hover-foreground');
        background: var-get($flat-theme, 'hover-background');
    }

    &:focus {
        color: var-get($flat-theme, 'focus-foreground');
        background: var-get($flat-theme, 'focus-background');
    }

    &:active {
        color: var-get($flat-theme, 'active-foreground');
        background: var-get($flat-theme, 'active-background');
    }

    &:focus-visible {
        color: var-get($flat-theme, 'focus-visible-foreground');
        background: var-get($flat-theme, 'focus-visible-background');

        &:hover {
            color: var-get($flat-theme, 'hover-foreground');
            background: var-get($flat-theme, 'hover-foreground');
        }

        &:active {
            color: var-get($flat-theme, 'active-foreground');
            background: var-get($flat-theme, 'active-background');
        }
    }
}

:host(:not([disabled])[variant='outlined']) [part='base'],
:host(:not(:disabled)[variant='outlined']) [part='base'] {
    color: var-get($outlined-theme, 'foreground');
    background: var-get($outlined-theme, 'background');
    border: rem(1px) solid var-get($outlined-theme, 'border-color');

    &:hover {
        color: var-get($outlined-theme, 'hover-foreground');
        background: var-get($outlined-theme, 'hover-background');
        border-color: var-get($outlined-theme, 'hover-border-color');
    }

    &:focus {
        color: var-get($outlined-theme, 'focus-foreground');
        background: var-get($outlined-theme, 'focus-background');
        border-color: var-get($outlined-theme, 'focus-border-color');
    }

    &:active {
        color: var-get($outlined-theme, 'active-foreground');
        background: var-get($outlined-theme, 'active-background');
        border-color: var-get($outlined-theme, 'active-border-color');
    }

    &:focus-visible {
        color: var-get($outlined-theme, 'focus-visible-foreground');
        background: var-get($outlined-theme, 'focus-visible-background');
        border-color: var-get($outlined-theme, 'focus-visible-border-color');

        &:hover {
            color: var-get($outlined-theme, 'hover-foreground');
            background: var-get($outlined-theme, 'hover-foreground');
            border-color: var-get($outlined-theme, 'hover-border-color');
        }

        &:active {
            color: var-get($outlined-theme, 'active-foreground');
            background: var-get($outlined-theme, 'active-background');
            border-color: var-get($outlined-theme, 'active-border-color');
        }
    }
}

:host(:not([disabled])[variant='contained']) [part='base'],
:host(:not(:disabled)[variant='contained']) [part='base'] {
    color: var-get($contained-theme, 'foreground');
    background: var-get($contained-theme, 'background');
    box-shadow: var(--ig-elevation-2);

    &:hover {
        color: var-get($contained-theme, 'hover-foreground');
        background: var-get($contained-theme, 'hover-background');
        box-shadow: var(--ig-elevation-4);
    }

    &:focus {
        color: var-get($contained-theme, 'focus-foreground');
        background: var-get($contained-theme, 'focus-background');
    }

    &:active {
        color: var-get($contained-theme, 'active-foreground');
        background: var-get($contained-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: var(--ig-elevation-8);
    }

    &:focus-visible {
        color: var-get($contained-theme, 'focus-foreground');
        background: var-get($contained-theme, 'focus-background');

        &:hover {
            color: var-get($contained-theme, 'hover-foreground');
            background: var-get($contained-theme, 'hover-background');
        }

        &:active {
            color: var-get($contained-theme, 'active-foreground');
            background: var-get($contained-theme, 'active-background');
        }
    }
}

:host(:not([disabled])[variant='fab']) [part='base'],
:host(:not(:disabled)[variant='fab']) [part='base'] {
    color: var-get($fab-theme, 'foreground');
    background: var-get($fab-theme, 'background');
    box-shadow: var(--ig-elevation-6);

    &:hover {
        color: var-get($fab-theme, 'hover-foreground');
        background: var-get($fab-theme, 'hover-background');
        box-shadow: var(--ig-elevation-4);
    }

    &:focus {
        color: var-get($fab-theme, 'focus-foreground');
        background: var-get($fab-theme, 'focus-background');
    }

    &:active {
        color: var-get($fab-theme, 'active-foreground');
        background: var-get($fab-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: var(--ig-elevation-8);
    }

    &:focus-visible {
        color: var-get($fab-theme, 'focus-foreground');
        background: var-get($fab-theme, 'focus-background');

        &:hover {
            color: var-get($fab-theme, 'hover-foreground');
            background: var-get($fab-theme, 'hover-background');
        }

        &:active {
            color: var-get($fab-theme, 'active-foreground');
            background: var-get($fab-theme, 'active-background');
        }
    }

    &:hover,
    &:focus,
    &:focus-visible,
    &:active {
        box-shadow: var(--ig-elevation-12);
    }
}

:host([variant='flat']) [part='base'] {
    border-radius: var-get($flat-theme, 'border-radius');
}

:host([variant='outlined']) [part='base'] {
    border-radius: var-get($outlined-theme, 'border-radius');
}

:host([variant='contained']) [part='base'] {
    border-radius: var-get($contained-theme, 'border-radius');
}

:host([variant='fab']) [part='base'] {
    border-radius: var-get($fab-theme, 'border-radius');
}

:host([disabled][variant='flat']) [part='base'],
:host(:disabled[variant='flat']) [part='base'] {
    color: var-get($flat-theme, 'disabled-foreground');
    background: var-get($flat-theme, 'disabled-background');
    box-shadow: inset 0 0 0 rem(1px) var-get($flat-theme, 'disabled-border-color');
}

:host([disabled][variant='outlined']) [part='base'],
:host(:disabled[variant='outlined']) [part='base'] {
    color: var-get($outlined-theme, 'disabled-foreground');
    background: var-get($outlined-theme, 'disabled-background');
    box-shadow: inset 0 0 0 rem(1px) var-get($outlined-theme, 'disabled-border-color');
    border: rem(1px) solid var-get($outlined-theme, 'disabled-border-color');
}

:host([disabled][variant='contained']) [part='base'],
:host(:disabled[variant='contained']) [part='base'] {
    color: var-get($contained-theme, 'disabled-foreground');
    background: var-get($contained-theme, 'disabled-background');
    box-shadow: inset 0 0 0 rem(1px) var-get($contained-theme, 'disabled-border-color');
}

:host([disabled][variant='fab']) [part='base'],
:host(:disabled[variant='fab']) [part='base'] {
    color: var-get($fab-theme, 'disabled-foreground');
    background: var-get($fab-theme, 'disabled-background');
    box-shadow: inset 0 0 0 rem(1px) var-get($fab-theme, 'disabled-border-color');
}
