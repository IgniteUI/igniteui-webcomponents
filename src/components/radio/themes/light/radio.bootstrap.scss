@use 'sass:map';
@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;
@use '../../../../styles/themes/schemas/bootstrap/light' as *;

$schema: map.get($light-bootstrap-schema, 'radio');
$theme: digest-schema($schema);

:host {
    @include css-vars-from-theme($theme, 'ig-radio');

    &::part(base) {
        transition: none;
    }
}

[part~='label'] {
    color: var-get($theme, 'label-color');
}

[part~='base'] {
    gap: rem(8px);
}

[part~='control'] {
    --size: #{rem(16px)};

    border-radius: var(--size);
    width: var(--size);
    height: var(--size);
    min-width: var(--size);
    background: none;
    transition: transparent;

    &::before,
    &::after {
        transition: none;
        border-radius: calc(var(--size) / 2);
    }

    &::before {
        transform: translate(-50%, -50%) scale(.375);
    }

    &::after {
        width: inherit;
        height: inherit;
        min-width: inherit;
        border: rem(1px) solid  var-get($theme, 'empty-color');
    }
}

[part~='focused'] [part~='control'] {
    box-shadow: 0 0 0 rem(2px) var-get($theme, 'focus-outline-color');

    &::after {
        border-color: var-get($theme, 'fill-color');
    }
}

[part='control checked'] {
    &::after {
        background: var-get($theme, 'fill-color');
        border-color: var-get($theme, 'fill-color');
    }

    &::before {
        border-color: var-get($theme, 'fill-hover-border-color');
        background: var-get($theme, 'fill-hover-border-color');
    }
}

:host(:not([disabled])[invalid]),
:host(:not(:disabled)[invalid]) {
    [part~='label'] {
        color: var-get($theme, 'error-color');
    }

    [part~='control']::after {
        border-color: var-get($theme, 'error-color');
    }

    [part='control checked'] {
        &::after {
            background: var-get($theme, 'error-color');
        }
    }

    [part~='focused'] [part~='control'] {
        box-shadow: 0 0 0 rem(2px) var-get($theme, 'error-color-hover');
    }
}

:host([disabled]),
:host(:disabled) {
    [part~='label'] {
        color: var-get($theme, 'disabled-label-color');
    }

    [part='control'] {
        &::after {
            border-color: var-get($theme, 'disabled-label-color');
        }
    }

    [part='control checked'] {
        &::after {
            background: var-get($theme, 'disabled-color');
            border-color: var-get($theme, 'disabled-color');
        }
    }
}
