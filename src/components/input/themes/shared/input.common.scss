@use 'styles/utilities' as *;
@use '../light/themes' as *;

$theme: $base;

[part='prefix'] {
    color: var-get($theme, 'input-prefix-color');
    background: var-get($theme, 'input-prefix-background');
}

[part='suffix'] {
    color: var-get($theme, 'input-suffix-color');
    background: var-get($theme, 'input-suffix-background');
}

[part~='filled'] {
    [part='prefix'] {
        color: var-get($theme, 'input-prefix-color--filled');
        background: var-get($theme, 'input-prefix-background--filled');
    }

    [part='suffix'] {
        color: var-get($theme, 'input-suffix-color--filled');
        background: var-get($theme, 'input-suffix-background--filled');
    }
}

[part~='input']::placeholder {
    color: var-get($theme, 'placeholder-color');
}

:host(:focus-within),
:host(:not([readonly],[disabled]):hover) {
    [part~='input']::placeholder {
        color: var-get($theme, 'hover-placeholder-color');
    }
}

:host(:focus-within) {
    [part='prefix'] {
        color: var-get($theme, 'input-prefix-color--focused');
        background: var-get($theme, 'input-prefix-background--focused');
    }

    [part='suffix'] {
        color: var-get($theme, 'input-suffix-color--focused');
        background: var-get($theme, 'input-suffix-background--focused');
    }
}

/* stylelint-disable */
:host([type='search']) {
    input[type='search']::-webkit-search-cancel-button,
    input[type='search']::-webkit-search-decoration {
        -webkit-appearance: none;
    }
}
/* stylelint-enable */

:host(:not([role='combobox'])[readonly]) {
    [part='prefix'],
    [part='suffix'] {
        color: var-get($theme, 'disabled-text-color');
    }
}

:host(:not([disabled],[readonly]):state(ig-invalid)),
:host(:not(:disabled,[readonly]):state(ig-invalid)) {
    ::part(helper-text) {
        color: var-get($theme, 'error-secondary-color');
    }
}

:host(:disabled),
:host([disabled]) {
    [part~='input']::placeholder {
        color: var-get($theme, 'disabled-text-color');
    }
}

::part(helper-text) {
    display: grid;
}

[name='suffix']::slotted(:is([part|='toggle'], [part|='clear'])) {
    padding-inline: var(--affix-padding);
}

:host(:not([role='combobox'])) {
    ::slotted([slot='suffix']),
    ::slotted([slot='prefix']) {
        padding-inline: var(--affix-padding);
    }
}