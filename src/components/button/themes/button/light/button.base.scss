@use '../../../../../styles/common/component';
@use '../../../../../styles/utilities' as *;

:host {
    --size: #{sizable(rem(24px), rem(30px), rem(36px))};

    display: inline-flex;
    vertical-align: middle;
    height: var(--size);

    ::slotted(*) {
        display: inline-flex;
        align-items: center;
    }
}

:host([size='small']) {
    --component-size: var(--ig-size, var(--ig-size-small));
}

:host([size='medium']) {
    --component-size: var(--ig-size, var(--ig-size-medium));
}

:host([size='large']) {
    --component-size: var(--ig-size, var(--ig-size-large));
}

[part='base'] {
    @include border-radius(rem(4px));
    @include type-style(button);

    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex: 1;
    border: none;
    user-select: none;
    outline-style: none;
    -webkit-tap-highlight-color: transparent;
    overflow: hidden;
    white-space: nowrap;
    text-decoration: none;
    z-index: 0;
    height: var(--size);
    padding: 0 pad(8px, 12px, 16px);
    gap: rem(8px);
}

:host(:not([disabled])) [part='base']:hover {
    cursor: pointer;
}

:host([disabled]) {
    pointer-events: none;

    [part='base'] {
        background: color(gray, 300);
        color: color(gray, 500);
        box-shadow: none;
    }
}

%flat {
    color: color(secondary, 500);
    background: transparent;
    transition: background-color .1s ease-out 0s;

    &:hover {
        background: color(secondary, 500, .12);
    }

    &:focus,
    &:active {
        background: color(secondary, 500, .24);
    }
}

:host(:not([disabled])[variant='flat']) [part='base'] {
    @extend %flat;
}

:host([disabled][variant='flat']) [part='base'] {
    background: transparent;
}

:host(:not([disabled])[variant='outlined']) [part='base'] {
    @extend %flat;

    box-shadow: inset 0 0 0 rem(1px) color(secondary, 500);
}

:host([disabled][variant='outlined']) [part='base'] {
    background: transparent;
    box-shadow: inset 0 0 0 rem(1px) color(gray, 300);
}

%contained {
    background: color(secondary, 500);
    color: contrast-color(secondary, 500);
}

:host(:not([disabled])[variant='contained']) [part='base'] {
    @extend %contained;
}

:host(:not([disabled])[variant='fab']) [part='base'] {
    @extend %contained;
}

:host([variant='fab']) {
    --size: #{sizable(rem(32px), rem(40px), rem(48px))};
}

:host([variant='fab']) [part='base'] {
    @include border-radius(calc(var(--size) / 2));

    min-width: var(--size);
    min-height: var(--size);
}
