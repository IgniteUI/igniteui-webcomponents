@use '../../../../styles/common/component';
@use '../step/base-vars' as *;

// STEPPER
:host {
    font-family: var(--igc-font-family);

    // TODO remove this before finalize the component styles
    background: color(surface, 500);
    padding: 16px;
}

// TITLE POSITION [START,END]
:host([title-position='start']),
:host([title-position='end']) {
    --step-min-width: #{rem(80px)};
}

// STEPPER [HORIZONTAL]
:host([orientation='horizontal']) {
    --horizontal-content-disply: block;
    --vertical-separator-visibility: none;
    --horizontal-body-padding: #{rem(8px)};

    display: grid;
    /* stylelint-disable */
    grid-template-columns: minmax(var(--step-min-width), max-content) repeat(calc(#{var(--steps-count)} - 1), minmax(var(--step-min-width), auto));
    /* stylelint-enable */

    ::slotted(igc-step) {
        // display: contents make all direct children of the step to behave like they are direct children of the stepper
        display: contents;
        pointer-events: none;

        --align-text: center;
        --align-items: center;
    }

    // FIRST STEP
    ::slotted(igc-step:first-of-type) {
        --horizontal-separator-visibility--first-of-type: none;
    }

    // LAST STEP
    ::slotted(igc-step:last-of-type) {
        --horizontal-separator-visibility--last-of-type: none;
    }
}

:host([orientation='horizontal'][title-position='start']),
:host([orientation='horizontal'][title-position='end']) {
    /* stylelint-disable */
    grid-template-columns: minmax(var(--step-min-width-side-text), max-content) repeat(calc(#{var(--steps-count)} - 1), minmax(var(--step-min-width-side-text), auto));
    /* stylelint-enable */
}

// FIRST STEP
::slotted(igc-step:first-of-type) {
    --horizontal-separator-display--first-of-type: none;
}

// LAST STEP
::slotted(igc-step:last-of-type) {
    --horizontal-separator-display--last-of-type: none;
}

// NOT FULL HEADER
:host(:not([step-type='full'])) {
    --separator-disply-not-full: none;

    ::slotted(igc-step) {
        --step-not-full-header-aligmnet: center;
    }
}

// FULL HEADER
:host([step-type='full']) {
    ::slotted(igc-step) {
        --step-separator-position: var(--separator-position);
    }
}

// CONTENT TOP
:host([content-top]) {
    ::slotted(igc-step) {
        --header-bottom: 2;
        --body-top: 1;
    }
}

// ------------------------------------------
// STEPPER [VERTICAL]
:host(:not([orientation='horizontal'])) {
    --vertical-header-z-index: 2;
    --vertical-body-disply: block;
    --header-width-vertical: 100%;
    --hide-horizontal-separator: none;

    display: block;

    ::slotted(igc-step) {
        --horizontal-separator-display: none;
        --step-hide-last-of-type: none;
        --step-hide-first-of-type: none;
        --step-width: 100%;
        --body-indent--vertical: calc(var(--header-padding) + var(--indicator-size) + var(--header-gap));

        display: flex;
        flex-direction: column;
    }

    ::slotted(igc-step:last-of-type) {
        --hide-last-separator: none;
    }
}

// CONTENT TOP [VERTICAL]
:host([content-top]:not([orientation='horizontal'])) {
    ::slotted(igc-step) {
        flex-direction: column-reverse;
    }

    ::slotted(igc-step:first-of-type) {
        --hide-first-separator: none;
    }

    ::slotted(igc-step:last-of-type) {
        --hide-last-separator: block;
    }
}
