@use '../../../../styles/utilities' as *;

$thumb-color: var(--thumb-color, color(gray, 700)) !default;
$disabled-thumb-color: var(--disabled-thumb-color, color(surface, 500)) !default;
$hover-color: var(--hover-color, color(gray, 800)) !default;
$checked-hover-color: var(--checked-hover-color, color(primary, 900)) !default;
$invalid-color: var(--invalid-color, color(error, 500)) !default;
$invalid-hover-color: var(--invalid-hover-color, color(error, 700)) !default;
$disabled-color: var(--disabled-color, color(gray, 400)) !default;

:host {
    --size: #{rem(40px)};
    --thumb-size: #{rem(12px)};
    --thumb-offset: calc(var(--thumb-size) / 2);
}

[part~='control'] {
    width: var(--size);
    height: rem(20px);
    box-shadow: inset 0 0 0 1px color(gray, 500);
    border-radius: rem(10px);
    background: transparent;
}

:host(:hover) [part~='control'],
:host(:focus-within) [part~='control'] {
    box-shadow: inset 0 0 0 1px $hover-color;
}

:host(:hover) [part~='thumb'],
:host(:focus-within) [part~='thumb'] {
    background: $hover-color;
}

[part~='control'][part~='checked'] {
    background: color(primary, 500);
    box-shadow: inset 0 0 0 1px color(primary, 500);
}

:host(:hover) [part~='control'][part~='checked'],
:host(:focus-within) [part~='control'][part~='checked'] {
    background: $checked-hover-color;
    box-shadow: inset 0 0 0 1px $checked-hover-color;
}

:host([invalid]) [part~='control'] {
    box-shadow: inset 0 0 0 1px $invalid-color;
}

:host([invalid]) [part~='control'][part~='checked'] {
    background: $invalid-color;
    box-shadow: inset 0 0 0 1px $invalid-color;
}

:host([invalid]:hover) [part~='control'],
:host([invalid]:focus-within) [part~='control'] {
    box-shadow: inset 0 0 0 1px $invalid-hover-color;
}

:host([invalid]:hover) [part~='thumb'],
:host([invalid]:focus-within) [part~='thumb'] {
    background: $invalid-hover-color;
}

:host([invalid]) [part~='thumb'][part~='checked'],
:host([invalid]:hover) [part~='thumb'][part~='checked'],
:host([invalid]:focus-within) [part~='thumb'][part~='checked'] {
    background: color(surface, 500);
}

:host([invalid]:hover) [part~='control'][part~='checked'],
:host([invalid]:focus-within) [part~='control'][part~='checked'] {
    box-shadow: inset 0 0 0 1px $invalid-hover-color;
    background: $invalid-hover-color;
}

:host([disabled]) [part~='label'] {
    color: $disabled-color;
}

:host([disabled]) [part~='control'],
:host([disabled][invalid]) [part~='control'] {
    box-shadow: inset 0 0 0 1px $disabled-color;
}

:host([disabled]) [part~='control'][part~='checked'],
:host([disabled][invalid]) [part~='control'][part~='checked'],
:host([disabled]) [part~='thumb'],
:host([disabled][invalid]) [part~='thumb'] {
    background: $disabled-color;
}

[part~='thumb'] {
    width: var(--thumb-size);
    height: var(--thumb-size);
    min-width: var(--thumb-size);
    margin-inline-start: var(--thumb-offset);
    background: $thumb-color;
}

[part~='thumb'][part~='checked'],
:host(:hover) [part~='thumb'][part~='checked'],
:host(:focus-within) [part~='thumb'][part~='checked'] {
    background: color(surface, 500);
    margin-inline-start: calc(var(--size) - var(--thumb-size) - var(--thumb-offset));
}

:host([disabled]) [part~='thumb'][part~='checked'],
:host([disabled][invalid]) [part~='thumb'][part~='checked'] {
    background: $disabled-thumb-color;
}
