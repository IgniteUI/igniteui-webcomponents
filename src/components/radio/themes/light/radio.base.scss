@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;

:host {
    display: inline-flex;
    color: color(gray, 900);
    font-family: var(--ig-font-family);
}

input[type='radio'] {
    @include hide-default();
}

[part~='base'] {
    display: flex;
    align-items: center;
    gap: rem(8px);
    cursor: pointer;
    transition: color .15s ease-in;

    &:focus-within [part='control'] {
        background: color(gray, 600, .12);
    }
}

[part~='label'] {
    @include type-style('subtitle-1');
}

[part~='control'] {
    @include border-radius(var(--size));

    --size: #{rem(20px)};

    position: relative;
    display: inline-flex;
    width: calc(var(--size) * 2);
    height: calc(var(--size) * 2);
    min-width: calc(var(--size) * 2);
    user-select: none;
    transition: background .15s ease-in;

    &::before,
    &::after {
        @include border-radius(calc(var(--size) / 2));

        position: absolute;
        content: '';
        width: var(--size);
        height: var(--size);
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        transition: all .15s ease-in;
    }

    &::before {
        backface-visibility: hidden;
        transform: translate(-50%, -50%) scale(.1);
        transform-origin: center;
        z-index: 1;
    }

    &::after {
        border: calc(var(--size) / 10) solid color(gray, 600);
    }
}

[part='control checked'] {
    &::before {
        border-color: color(secondary, 500);
        background: color(secondary, 500);
        transform: translate(-50%, -50%) scale(.5);
    }

    &::after {
        border-color: color(secondary, 500);
    }
}

:host(:not([disabled])[invalid]) {
    [part~='label'] {
        color: color(error, 500);
    }

    [part~='control'] {
        &::after {
            border-color: color(error, 500);
        }
    }
}

:host([disabled]) {
    pointer-events: none;
    user-select: none;

    [part~='label'] {
        color: color(gray, 400);
    }

    [part~='control'] {
        &::after {
            border-color: color(gray, 400);
        }
    }

    [part='control checked'] {
        &::before {
            background: color(gray, 400);
            border-color: transparent;
        }
    }
}

:host([label-position='before']) {
    [part~='label'] {
        order: -1;
    }
}
