@use 'styles/utilities' as *;
@use '../light/themes' as *;

$theme: $fluent;
$resting-border-width: rem(1px);
$focused-border-width: rem(2px);
$resting-height: calc(var-get($theme, 'size') - #{($resting-border-width * 2)});
$focused-height: calc(var-get($theme, 'size') - #{($focused-border-width * 2)});

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --input-size: var(--component-size);

    [part='prefix'],
    [part='suffix'] {
        font-size: rem(14px);
        cursor: default;

        ::slotted(*) {
            color: inherit;
        }
    }

    [name='prefix']::slotted(*),
    [name='suffix']::slotted(*) {
        display: inline-flex;
        align-items: center;
        width: max-content;
        height: 100%;
        padding-inline: pad-inline(8px, 12px, 16px);
    }

    [part='prefix'] {
        grid-area: 1 / 1;
    }

    [part='suffix'] {
        grid-area: 1 / 3;
    }

    [part='label'] {
        font-size: rem(14px);
        font-weight: 600;
        color: var-get($theme, 'idle-secondary-color');
    }

    [part^='container'] {
        height: var-get($theme, 'size');
        border-radius: var-get($theme, 'border-border-radius');
        border: #{$resting-border-width} solid var-get($theme, 'border-color');
        transition: none;
        cursor: text;
        grid-template-columns: auto 1fr auto;
        overflow: hidden;
    }

    [part~='input'] {
        color: var-get($theme, 'idle-text-color');
        height: $resting-height;
        background: initial;
        font-size: rem(14px);
        padding-inline: rem(8px);
        max-height: 100%;
        border: none;
        grid-area: 1 / 2;
    }

    [part='helper-text'] {
        @include type-style('caption');

        padding: 0;
        grid-auto-rows: minmax(rem(18px), auto);
        margin-top: rem(5px);
    }
}

:host(:hover) {
    [part^='container'] {
        border-color: var-get($theme, 'hover-border-color');
    }
}

:host(:focus-within) {
    [part='label'] {
        color: color(gray, 800);
    }

    [part^='container'] {
        border-color: var-get($theme, 'focused-border-color');
        border-width: #{$focused-border-width};
    }

    [part~='input'] {
        height: $focused-height;
    }

    [part='prefix'] {
        margin-inline-start: rem(-1px);
    }

    [part='suffix'] {
        margin-inline-end: rem(-1px);
    }

    [name='prefix']::slotted(*),
    [name='suffix']::slotted(*) {
        padding-block: pad-block(6px, 8px, 10px);
    }
}

:host([type='search']:focus-within) {
    [part='prefix'] {
        display: none;
    }
}

:host([required]) {
    [part='label']::after {
        color: var-get($theme, 'error-secondary-color');
    }
}

:host([invalid]) {
    [part^='container'] {
        border-color: var-get($theme, 'error-secondary-color');
    }
}

:host(:disabled),
:host([disabled]) {
    [part^='container'] {
        border-color: var-get($theme, 'disabled-border-color');
    }

    [part^='container'],
    [part='prefix'],
    [part='suffix'] {
        background: var-get($theme, 'border-disabled-background');
    }

    [part='prefix'],
    [part='suffix'],
    [part='label'],
    [part='label']::after,
    [part='helper-text'],
    [part~='input'] {
        color: var-get($theme, 'disabled-text-color');
    }
}

:host(:not([disabled])),
:host(:not(:disabled)) {
    igc-validator[invalid] {
        color: var-get($theme, 'error-secondary-color');
    }
}

igc-validator {
    @include type-style('caption');

    margin-block-start: rem(5px);
}
