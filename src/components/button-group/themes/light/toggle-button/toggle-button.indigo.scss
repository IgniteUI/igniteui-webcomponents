@use 'sass:map';
@use 'styles/utilities' as *;
@use '../themes' as *;

$theme: $indigo;
$group-item-border-thickness: rem(1px);

:host {
    @include css-vars-from-theme($theme, 'ig-button-group');

    button {
        --ig-icon-size: #{rem(18px)};

        min-height: $indigo-flat-btn-size;
        border-width: $group-item-border-thickness;
        border-color: var-get($theme, 'item-border-color');
        color: var-get($theme, 'item-text-color');
        background: var-get($theme, 'item-background');
        padding-inline: pad-inline(rem(8px), rem(12px), rem(12px));
        padding-block: pad-block(rem(1px), rem(2px), rem(3px));
        gap: rem(4px);
    }
}

:host(:hover),
:host(:focus) {
    button {
        color: var-get($theme, 'item-hover-text-color');
        background: var-get($theme, 'item-hover-background');
    }
}

:host(:focus) {
    z-index: 2;

    button {
        box-shadow: 0 0 0 rem(3px) var-get($theme, 'idle-shadow-color');
    }
}

:host([selected]) {
    button {
        color: var-get($theme, 'item-selected-text-color');
        background: var-get($theme, 'item-selected-background');
        border-color: var-get($theme, 'item-selected-border-color');
    }
}

:host([selected]:hover),
:host([selected]:focus) {
    button {
        color: var-get($theme, 'item-selected-text-color');
        background: var-get($theme, 'item-selected-hover-background');
    }
}

:host([selected]:focus) {
    button {
        box-shadow: 0 0 0 rem(3px) var-get($theme, 'selected-shadow-color');
    }
}

:host([disabled]),
:host(:disabled) {
    button {
        color: var-get($theme, 'disabled-text-color');
        background: var-get($theme, 'disabled-background-color');
        border-color: var-get($theme, 'item-disabled-border');
    }
}



