@use 'sass:map';
@use 'styles/common/component';
@use 'styles/utilities' as *;
@use 'themes' as *;
@use '../../../input/themes/light/themes' as input-theme;
@use '../../../dropdown/themes/light/themes' as dropdown-theme;

$theme: $fluent;
$input-theme: input-theme.$fluent;
$dropdown-theme: dropdown-theme.$fluent;

:host {
    @include css-vars-from-theme($input-theme, 'ig-input');
    @include css-vars-from-theme($theme, 'ig-combo');
    @include css-vars-from-theme($dropdown-theme, 'ig-dropdown');

    ::slotted([slot='helper-text']) {
        @include type-style('caption');

        display: block;
        padding: 0;
        margin-top: rem(5px);
        color: color(gray, 700);
    }
}

[part~='toggle-icon'] {
    background: var-get($theme, 'toggle-button-background');
    color: var-get($theme, 'toggle-button-foreground');

    igc-icon {
        color: inherit;
    }
}

[part~='clear-icon'] {
    background: var-get($theme, 'clear-button-background');
    color: var-get($theme, 'clear-button-foreground');

    igc-icon {
        color: inherit;
    }
}

[part='filter-input'] {
    padding: pad(2px, 4px, 8px);
}

[part='list-wrapper'] {
    igc-input::part(suffix) {
        background: transparent;
    }

    igc-input::part(input) {
        height: var(--size);
    }
}

[part='empty'] {
    color: var-get($theme, 'empty-list-placeholder-color');
}

:host(:focus-within) {
    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-focus--border');
        color: var-get($theme, 'toggle-button-foreground-focus');

        igc-icon {
            color: inherit;
        }
    }

    [part~='clear-icon'] {
        background: var-get($theme, 'clear-button-background-focus');
        color: var-get($theme, 'clear-button-foreground-focus');

        igc-icon {
            color: inherit;
        }
    }
}

:host([invalid]) {
    ::slotted([slot='helper-text']) {
        color: var-get($input-theme, 'error-secondary-color');
    }
}

:host([invalid]:focus-within) {
    igc-input::part(input) {
        height: calc(var(--size) - #{rem(4px)});
    }

    igc-input::part(suffix) {
        height: var(--size);
        margin-inline-end: rem(-1px);
        margin-block-start: rem(-2px);
    }

    igc-input::part(prefix) {
        margin-inline-start: rem(-1px);
        margin-block-start: rem(-2px);
    }
}

:host(:disabled),
:host([disabled]) {
    ::slotted([slot='prefix']),
    ::slotted([slot='suffix']),
    igc-input::part(label),
    igc-input::part(input)::placeholder,
    ::slotted([slot='helper-text']) {
        color: color(gray, 500);
    }

    [part~='clear-icon'] {
        background: inherit;
        color: var-get($input-theme, 'disabled-text-color');

        igc-icon {
            color: inherit;
        }
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-disabled');
        color: var-get($theme, 'toggle-button-foreground-disabled');

        igc-icon {
            color: inherit;
        }
    }
}
