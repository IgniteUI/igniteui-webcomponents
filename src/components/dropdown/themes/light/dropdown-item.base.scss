@use 'sass:map';
@use '../../../../styles/utilities' as *;
@use '../../../../styles/common/component';
@use '../../../../styles/themes/schemas/material/light' as *;

$schema: map.get($light-material-schema, 'drop-down');
$item-border-radius: border-radius(map.get($schema, 'item-border-radius')...);
$theme: digest-schema(extend(
    $schema,
    (
        item-border-radius: $item-border-radius
    )
));

:host {
    @include css-vars-from-theme($theme, 'ig-dropdown');
    @include type-style('body-2');

    display: flex;
    justify-content: flex-start;
    align-items: center;
    width: 100%;
    white-space: nowrap;
    position: relative;
    cursor: pointer;
    color: color(gray, 800);
    outline-style: none;
    padding-inline: pad-inline(6px, 12px, 24px);
    padding-block: pad-block(2px, 4px, 8px);
    border-radius: var-get($theme, 'item-border-radius');
}

:host(:hover),
:host([active]) {
    background: color(gray, 200);
}

:host([selected]) {
    background: color(secondary, 100);
    color: contrast-color(secondary, 100);
}

:host([selected]:hover),
:host([selected][active]) {
    background: color(secondary, 200);
    color: contrast-color(secondary, 200);
}

:host([disabled]) {
    color: color(gray, 500);
    cursor: default;
    pointer-events: none;
}

::slotted(*) {
    font: inherit;
}

[part='content'] {
    @include ellipsis();

    display: block;
    width: 100%;
    align-items: center;
}

[part='prefix'],
[part='suffix'] {
    display: flex;
    align-items: center;
    justify-content: center;
}

[name='prefix']::slotted(*) {
    margin-inline-end: pad(16px);
}

[name='suffix']::slotted(*) {
    margin-inline-start: pad(16px);
}
