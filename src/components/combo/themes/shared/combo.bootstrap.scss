@use 'styles/utilities' as *;
@use '../light/themes' as *;
@use 'components/input/themes/light/themes' as input-theme;
@use 'components/dropdown/themes/light/themes' as dropdown-theme;

$theme: $bootstrap;
$input-theme: input-theme.$bootstrap;
$dropdown-theme: dropdown-theme.$bootstrap;

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --combo-size: var(--component-size);
}

igc-validator {
    @include type-style('body-2');

    margin-top: rem(4px);
    padding-inline-start: pad-inline(8px, 12px, 16px);
}

[part='list-wrapper'] {
    border-radius: var-get($dropdown-theme, 'border-radius');

    igc-input::part(input) {
        border-inline-end: 0;
    }

    igc-input::part(suffix) {
        background: transparent;
        border: none;
        border-radius: 0;
    }

    [part='search-input'] {
        [part~='case-icon'] {
            border-block-end: rem(1px) solid color(gray, 400);
            transition: border .15s ease-out;
        }

        &:focus,
        &:focus-within {
            [part~='case-icon'] {
                border-block-end: rem(1px) solid color(primary, 500);
            }
        }
    }
}

[part='clear-icon'] {
    border-inline-end: rem(1px) solid var-get($input-theme, 'border-color');
}

[part='case-icon active'] {
    color: color(primary, 500);
}

:host(:focus-within) {
    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-focus--border');
        color: var-get($theme, 'toggle-button-foreground-focus');

        igc-icon {
            color: inherit;
        }
    }

    [part~='clear-icon'] {
        background: var-get($theme, 'clear-button-background-focus');
        color: var-get($theme, 'clear-button-foreground-focus');

        igc-icon {
            color: inherit;
        }
    }
}

:host(:disabled),
:host([disabled]) {
    ::slotted([slot='prefix']),
    ::slotted([slot='suffix']),
    igc-input::part(label),
    igc-input::part(input)::placeholder {
        color: var-get($theme, 'disabled-text-color');
    }

    [part~='clear-icon'] {
        border-inline-end: rem(1px) solid var-get($input-theme, 'disabled-border-color');
        background: inherit;
        color: var-get($theme, 'disabled-text-color');

        igc-icon {
            color: inherit;
        }
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-disabled');
        color: var-get($theme, 'toggle-button-foreground-disabled');

        igc-icon {
            color: inherit;
        }
    }
}
