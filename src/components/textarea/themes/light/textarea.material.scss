@use 'sass:map';
@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;
@use '../../../../styles/themes/schemas' as *;

$schema: map.get($light-material-schema, 'input-group');
$theme: digest-schema($schema);
$input-top-padding: rem(20px);
$input-bottom-padding: rem(6px);

:host {
    @include css-vars-from-theme($theme, 'ig-textarea');
    @include type-style('subtitle-1');
}

textarea {
    border: none;
    padding: 0;
    overflow: auto;
    margin-block-start: $input-top-padding;
    grid-area: 1 / 2 / span 1 / span 2;
    flex-grow: 1;
    position: relative;
    max-width: inherit;
}

:host(:not([outlined])) {
    [part~='container'] {
        overflow: hidden;
        border-radius: rem(4px);
        border-end-start-radius: border-radius(rem(0));
        border-end-end-radius: border-radius(rem(0));
        background: var-get($theme, 'box-background');

        &::after {
            content: '';
            position: absolute;
            bottom: 0%;
            width: 100%;
            border-block-end: rem(1px) solid var-get($theme, 'idle-bottom-line-color');
            transition: all .25s out-cubic;
        }
    }
}

:host(:not([outlined]):hover) {
    [part~='container'] {
        background: var-get($theme, 'box-background-hover');

        &::after {
            border-block-end-width: rem(1px);
            border-block-end-color: var-get($theme, 'hover-bottom-line-color');
        }
    }
}

:host(:focus-within) {
    [part~='label'] {
        color: var-get($theme, 'focused-secondary-color');
    }
}

:host(:not([outlined]):focus-within) {
    color: var-get($theme, 'input-prefix-color--focused');

    [part~='container'] {
        background: var-get($theme, 'box-background-focus');

        &::after {
            border-block-end-width: rem(2px);
            border-block-end-color: var-get($theme, 'focused-bottom-line-color');
        }
    }

    [part~='prefix'] {
        color: var-get($theme, 'input-prefix-color--focused');
        background: var-get($theme, 'input-prefix-background--focused');
    }

    [part~='suffix'] {
        color: var-get($theme, 'input-suffix-color--focused');
        background: var-get($theme, 'input-suffix-background--focused');
    }
}

[part~='label'] {
    position: absolute;
    max-width: 100%;
    padding-inline-end: rem(4px);
    line-height: normal;
    backface-visibility: hidden;
    will-change: transform;
    transform-origin: top left;
    transition: all .25s out-cubic;
    color: var-get($theme, 'idle-secondary-color');
    transform: translateY(0);
    top: calc(#{$input-top-padding} / 4);
    font-size: rem(12px);
}

[part='start'],
[part='end'] {
    display: flex;
    align-items: center;
    min-width: rem(12px);
    min-height: 100%;
    overflow: hidden;
}

[part='start'] {
    grid-area: 1 / 1;
}

[part='notch'] {
    display: flex;
    align-items: center;
    width: auto;
    min-width: 0;
    height: 100%;
    position: relative;
    grid-area: 1 / 2;
}

[part='filler'] {
    grid-area: 1 / 3;
}

[part='end'] {
    grid-area: 1 / 4;
}

[part~='prefixed'] {
    [part~='prefix'] {
        color: var-get($theme, 'input-prefix-color');
        background: var-get($theme, 'input-prefix-background');
        padding-inline: pad-inline(rem(12px), rem(14px), rem(16px));
    }
}

[part~='suffixed'] {
    [part~='suffix'] {
        color: var-get($theme, 'input-suffix-color');
        background: var-get($theme, 'input-suffix-background');
        padding-inline: pad-inline(rem(12px), rem(14px), rem(16px));
    }
}

[part~='filled'] {
    color: var-get($theme, 'input-prefix-color--filled');

    [part~='prefix'] {
        color: var-get($theme, 'input-prefix-color--filled');
        background: var-get($theme, 'input-prefix-background--filled');
    }

    [part~='suffix'] {
        color: var-get($theme, 'input-suffix-color--filled');
        background: var-get($theme, 'input-suffix-background--filled');
    }
}

[part~='helper-text'] {
    @include type-style('caption');

    color: var-get($theme, 'helper-text-color');
    padding-block-start: rem(5px);
    padding-inline-start: rem(16px);
}

// Outlined Textarea
:host([outlined]) {
    align-items: initial;
    padding: 0;
    box-shadow: none;
    border-radius: var-get($theme, 'border-border-radius');
    background: var-get($theme, 'border-background');
    overflow: initial;

    [part~='container'] {
        grid-template-columns: auto auto 1fr auto;
        display: grid;
    }

    [part='start'] {
        width: auto;
        border: {
            color: var-get($theme, 'border-color');
            style: solid;
            inline: {
                start-width: rem(1px);
                end-width: 0;
            };
            block: {
                start-width: rem(1px);
                end-width: rem(1px);
            };
            start: {
                start-radius: var-get($theme, 'border-border-radius');
            };
            end: {
                start-radius: var-get($theme, 'border-border-radius');
            };
        }
    }

    [part~='label'] {
        top: 0;
        transform: translateY(-50%);
        margin-block-end: auto;
        padding-inline-end: 0;
        display: inline-block;
        position: relative;
        background: transparent;
    }

    [part='filler'] {
        border: {
            width: rem(1px);
            style: solid;
            color: var-get($theme, 'border-color');
            left: none;
            right: none;
        }
    }

    [part='notch'] {
        border-block-start-color: transparent;
        border-block-end: rem(1px) solid var-get($theme, 'border-color');
        padding: 0 rem(4px);

        &:empty {
            display: none;
        }
    }

    [part='end'] {
        display: flex;
        justify-content: flex-end;
        flex-grow: 1;
        height: 100%;
        grid-area: 1 / 4;
        border: {
            color: var-get($theme, 'border-color');
            style: solid;
            inline: {
                start-width: 0;
                end-width: rem(1px);
            };
            block: {
                start-width: rem(1px);
                end-width: rem(1px);
            };
            start: {
                end-radius: var-get($theme, 'border-border-radius');
            };
            end: {
                end-radius: var-get($theme, 'border-border-radius');
            };
        }
    }

    textarea {
        bottom: rem(2px);
    }
}

:host([outlined]:focus-within) {
    [part='filler'],
    [part='notch'] {
        border-block-width: rem(2px);
    }
    
    [part='filler'] {
        border-block-color: var-get($theme, 'focused-border-color');
    }

    [part='notch'] {
        border-block-end-color: var-get($theme, 'focused-border-color');
    }

    [part='start'] {
        border: {
            color: var-get($theme, 'focused-border-color');
            inline: {
                start-width: rem(2px);
                end-width: 0;
            };
            block: {
                start-width: rem(2px);
                end-width: rem(2px);
            };
        }
    }

    [part='end'] {
        border: {
            color: var-get($theme, 'focused-border-color');
            inline: {
                start-width: 0;
                end-width: rem(2px);
            };
            block: {
                start-width: rem(2px);
                end-width: rem(2px);
            };
        }
    }

    [part~='prefix'] {
        margin-inline-start: rem(-1px);
    }

    [part~='suffix'] {
        margin-inline-end: rem(-1px);
    }
}
