@use 'sass:map';
@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;
@use '../../../../styles/themes/schemas' as *;

$input-schema: map.get($light-indigo-schema, 'input-group');
$combo-schema: map.get($light-indigo-schema, 'combo');
$input-theme: digest-schema($input-schema);
$theme: digest-schema($combo-schema);

:host {
    @include css-vars-from-theme($input-theme, 'ig-input');
    @include css-vars-from-theme($theme, 'ig-combo');

    [part='helper-text'] {
        margin-top: rem(6px);
        padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));
    }

    ::slotted([slot='helper-text']) {
        color: var-get($input-theme, 'helper-text-color');
    }
}

[part='case-icon'] {
    color: color(gray, 600);
}

[part='case-icon active'] {
    color: color(gray, 900);
}

[part='empty'] {
    color: var-get($theme, 'empty-list-placeholder-color');
}

:host(:not([single-select])) {
    > igc-input::part(input) {
        &::selection {
            background: transparent;
        }
    }
}

[part='list-wrapper'] {
    igc-input::part(container) {
        background: transparent;
        border-inline-end-color: transparent;
    }

    igc-input::part(input) {
        border-inline-end-color: transparent;

        &::selection {
            background: color(primary, 100);
        }
    }

    [part='case-icon active'] {
        color: color(primary, 500);
    }
}

[part~='toggle-icon'] {
    background: var-get($theme, 'toggle-button-background');
    color: var-get($theme, 'toggle-button-foreground');

    igc-icon {
        color: inherit;
    }
}

:host(:focus-within) {
    igc-input::part(label) {
        color: var-get($input-theme, 'focused-secondary-color');
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-focus--border');
        color: var-get($theme, 'toggle-button-foreground-focus');

        igc-icon {
            color: inherit;
        }
    }

    [part~='clear-icon'] {
        background: var-get($theme, 'clear-button-background-focus');
        color: var-get($theme, 'clear-button-foreground-focus');

        igc-icon {
            color: inherit;
        }
    }
}

:host([invalid]) {
    ::slotted([slot='helper-text']) {
        color: var-get($input-theme, 'error-secondary-color');
    }
}

:host(:disabled),
:host([disabled]) {
    ::slotted([slot='prefix']),
    ::slotted([slot='suffix']),
    ::slotted([slot='helper-text']) {
        color: var-get($input-theme, 'disabled-text-color');
    }

    igc-input::part(input)::selection {
        background: transparent;
    }

    [part~='clear-icon'] {
        background: inherit;
        color: var-get($input-theme, 'disabled-text-color');

        igc-icon {
            color: inherit;
        }
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-disabled');
        color: var-get($theme, 'toggle-button-foreground-disabled');

        igc-icon {
            color: inherit;
        }
    }
}
