@use 'styles/utilities' as *;
@use '../light/themes' as *;

$flat-theme: $indigo-flat;
$contained-theme: $indigo-contained;
$fab-theme: $indigo-fab;
$outlined-theme: $indigo-outlined;

:host [part='base']{
    padding: 0 pad(10px, 16px, 24px);
}

:host([variant='flat']) {
    --component-size: var(--ig-size, #{var-get($flat-theme, 'default-size')});
}

:host([variant='outlined']) {
    --component-size: var(--ig-size, #{var-get($outlined-theme, 'default-size')});
}

:host([variant='contained']) {
    --component-size: var(--ig-size, #{var-get($contained-theme, 'default-size')});
}

:host([variant='fab']) {
    --component-size: var(--ig-size, #{var-get($fab-theme, 'default-size')});

    padding: 0 pad(6px, 8px, 10px);
}

:host(:not([disabled])[variant='flat']) [part='base'],
:host(:not(:disabled)[variant='flat']) [part='base'] {
    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color');
    }

    igc-icon {
        color: var-get($flat-theme, 'icon-color');
    }

    &:hover {
        igc-icon {
            color: var-get($flat-theme, 'icon-color-hover');
        }
    }

    &:focus,
    &:focus-visible {
        igc-icon {
            color: var-get($flat-theme, 'icon-color');
        }

        &:hover {
            igc-icon {
                color: var-get($flat-theme, 'icon-color-hover');
            }
        }
    }
}

:host(:not([disabled])[variant='outlined']) [part='base'],
:host(:not(:disabled)[variant='outlined']) [part='base'] {
    border-style: solid;
    border-color: var-get($outlined-theme, 'border-color');
    border-width: rem(2px);

    igc-icon {
        color: var-get($outlined-theme, 'icon-color');
    }
    

    &:hover {
        border-color: var-get($outlined-theme, 'hover-border-color');

        igc-icon {
            color: var-get($outlined-theme, 'icon-color-hover');
        }
    }

    &:focus {
        border-color: var-get($outlined-theme, 'focus-border-color');

        igc-icon {
            color: var-get($outlined-theme, 'icon-color');
        }

        &:hover {
            border-color: var-get($outlined-theme, 'hover-border-color');

            igc-icon {
                color: var-get($outlined-theme, 'icon-color-hover');
            }
        }
    }

    &:active {
        border-color: var-get($outlined-theme, 'active-border-color');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');
    }

    &:focus-visible {
        border-color: var-get($outlined-theme, 'focus-visible-border-color');

        igc-icon {
            color: var-get($outlined-theme, 'icon-color');
        }

        &:hover {
            border-color: var-get($outlined-theme, 'hover-border-color');

            igc-icon {
                color: var-get($outlined-theme, 'icon-color-hover');
            }
        }

        &:active {
            color: var-get($outlined-theme, 'active-foreground');
            background: var-get($outlined-theme, 'active-background');
            border-color: var-get($outlined-theme, 'active-border-color');
        }
    }
}

:host(:not([disabled])[variant='contained']) [part='base'],
:host(:not(:disabled)[variant='contained']) [part='base'] {
    igc-icon {
        color: var-get($contained-theme, 'icon-color');
    }

    &:hover {
        border-color: var-get($contained-theme, 'hover-border-color');

        igc-icon {
            color: var-get($contained-theme, 'icon-color-hover');
        }
    }

    &:focus {
        border-color: var-get($contained-theme, 'focus-border-color');

        igc-icon {
            color: var-get($contained-theme, 'icon-color');
        }

        &:hover {
            border-color: var-get($contained-theme, 'hover-border-color');

            igc-icon {
                color: var-get($contained-theme, 'icon-color-hover');
            }
        }
    }

    &:active {
        border-color: var-get($contained-theme, 'active-border-color');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(3px) var-get($contained-theme, 'shadow-color');
    }

    &:focus-visible {
        background: var-get($contained-theme, 'focus-visible-background');
        color: var-get($contained-theme, 'focus-visible-foreground');
        border-color: var-get($contained-theme, 'focus-visible-border-color');

        igc-icon {
            color: var-get($contained-theme, 'icon-color');
        }

        &:hover {
            border-color: var-get($contained-theme, 'hover-border-color');

            igc-icon {
                color: var-get($contained-theme, 'icon-color-hover');
            }
        }

        &:active {
            color: var-get($contained-theme, 'active-foreground');
            background: var-get($contained-theme, 'active-background');
            border-color: var-get($contained-theme, 'active-border-color');
        }
    }
}

:host(:not([disabled])[variant='fab']) [part='base'],
:host(:not(:disabled)[variant='fab']) [part='base'] {
    border-color: var-get($fab-theme, 'border-color');
    min-width: var(--size);
    min-height: var(--size);

    igc-icon {
        color: var-get($fab-theme, 'icon-color');
    }

    &:hover {
        border-color: var-get($fab-theme, 'hover-border-color');

        igc-icon {
            color: var-get($fab-theme, 'icon-color-hover');
        }
    }

    &:focus {
        border-color: var-get($fab-theme, 'focus-border-color');

        igc-icon {
            color: var-get($fab-theme, 'icon-color');
        }

        &:hover {
            border-color: var-get($fab-theme, 'hover-border-color');

            igc-icon {
                color: var-get($fab-theme, 'icon-color-hover');
            }
        }
    }

    &:active {
        border-color: var-get($fab-theme, 'active-border-color');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color');
    }

    &:focus-visible {
        border-color: var-get($fab-theme, 'focus-visible-border-color');

        igc-icon {
            color: var-get($fab-theme, 'icon-color');
        }

        &:hover {
            border-color: var-get($fab-theme, 'hover-border-color');

            igc-icon {
                color: var-get($fab-theme, 'icon-color-hover');
            }
        }

        &:active {
            border-color: var-get($fab-theme, 'active-border-color');
        }
    }
}

:host([disabled][variant='outlined']) [part='base'],
:host(:disabled[variant='outlined']) [part='base'] {
    border-color: var-get($outlined-theme, 'disabled-border-color');
}
