@use 'styles/utilities' as *;
@use '../../light/themes' as *;

$theme: $bootstrap;
$group-item-border-thickness: rem(1px);

:host {
    min-width: var(--button-min-width);

    [part~='toggle'] {
        min-height: $bootstrap-flat-btn-size;
        border-width: $group-item-border-thickness;
        padding-inline: pad-inline(rem(8px), rem(10px), rem(12px));
        padding-block: pad-block(rem(2px), rem(4px), rem(7px));

        &::before {
            position: absolute;
            pointer-events: none;
            width: 100%;
            height: 100%;
            z-index: -1;
        }
    }

    [part='toggle focused'] {
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'idle-shadow-color');
        z-index: 1;
    }
}

:host(:active) {
    [part~='toggle'] {
        background: var-get($theme, 'item-hover-background');
        color: var-get($theme, 'item-hover-text-color');
        border-color: var-get($theme, 'item-hover-border-color');

        &::before {
            content: '';
            background: var-get($theme, 'item-focused-background');
        }
    }

    ::slotted(igc-icon) {
        color: var-get($theme, 'item-hover-icon-color');
    }
}

:host([selected]:active) {
    [part~='toggle'] {
        background: var-get($theme, 'item-selected-hover-background');
        color: var-get($theme, 'item-selected-hover-text-color');
        border-color: var-get($theme, 'item-selected-hover-border-color');

        ::slotted(igc-icon) {
            color: var-get($theme, 'item-selected-hover-icon-color');
        }
        
        &::before {
            background: var-get($theme, 'item-selected-focus-background');
        }
    }
}
