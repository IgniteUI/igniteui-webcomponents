@use '../../styles/utilities' as utils;

@mixin theme() {
	igc-button,
	igc-link-button {
		--l-size: #{utils.rem(36px)};
		--m-size: #{utils.rem(32px)};
		--s-size: #{utils.rem(24px)};
	}

	igc-button[size='large']::part(base),
	igc-link-button[size='large']::part(base) {
		--size: var(--l-size);
		--igc-border-radius: calc(var(--l-size) / 2);
		border-radius: var(--igc-border-radius);

		&::before,
		&::after {
			border-radius: var(--igc-border-radius)
		}
	}

	igc-button[size='medium']::part(base),
	igc-link-button[size='medium']::part(base) {
		--size: var(--m-size);
		--igc-border-radius: calc(var(--m-size) / 2);
		border-radius: var(--igc-border-radius);

		&::before,
		&::after {
			border-radius: var(--igc-border-radius)
		}
	}

	igc-button[size='small']::part(base),
	igc-link-button[size='small']::part(base) {
		--size: var(--s-size);
		--igc-border-radius: calc(var(--s-size) / 2);
		border-radius: var(--igc-border-radius);

		&::before,
		&::after {
			border-radius: var(--igc-border-radius)
		}
	}

	igc-button[variant='flat']:not([disabled])::part(base),
	igc-link-button[variant='flat']:not([disabled])::part(base) {
		color: var(--igc-gray-700);

		transition: color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

		&:hover,
		&:focus,
		&:active {
			color: var(--igc-gray-900);
		}

		&:hover::before {
			background: transparent;
		}

		&:focus::before,
		&:active::before {
			background: transparent;
		}

		&:focus,
		&:active {
			box-shadow: 0 0 0 utils.rem(3px) var(--igc-gray-300);
		}
	}

	igc-button[variant='outlined']:not([disabled])::part(base),
	igc-link-button[variant='outlined']:not([disabled])::part(base) {
		color: var(--igc-gray-700);
		transition: color .15s ease-out;
		box-shadow: inset 0 0 0 2px var(--igc-gray-500);
		overflow: visible;

		&::after {
			position: absolute;
			content: '';
			width: 100%;
			height: 100%;
			transition: box-shadow .15s ease-out;
		}

		&:hover {
			color: var(--igc-gray-900);
			background: var(--igc-gray-50);
		}

		&:focus,
		&:active {
			color: var(--igc-gray-900);
		}

		&:focus::before,
		&:active::before {
			background: transparent;
		}

		&:focus::after,
		&:active::after {
			box-shadow: 0 0 0 utils.rem(3px) var(--igc-gray-300);
		}
	}

	igc-button[variant='fab']:not([disabled])::part(base),
	igc-link-button[variant='fab']:not([disabled])::part(base),
	igc-button[variant='raised']:not([disabled])::part(base),
	igc-link-button[variant='raised']:not([disabled])::part(base) {
		color: var(--igc-primary-600-contrast);

		&:hover {
			color: var(--igc-primary-600-contrast);
		}

		&:focus,
		&:active {
			color: var(--igc-primary-600-contrast);
			box-shadow: 0 0 0 utils.rem(3px) var(--igc-primary-200);
		}

		&::before {
			background: var(--igc-primary-500);
			opacity: 1;
		}

		&:hover::before,
		&:focus::before,
		&:active::before {
			background: var(--igc-primary-400);
			opacity: 1;
		}
	}

	igc-button[variant='fab']:not([disabled])::part(base),
	igc-link-button[variant='fab']:not([disabled])::part(base) {
		border-radius: calc(var(--igc-border-radius) * 100);
	}

	igc-button[variant='raised']::part(base),
	igc-button[variant='fab']::part(base),
	igc-link-button[variant='raised']::part(base),
	igc-link-button[variant='fab']::part(base) {
		box-shadow: var(--igc-elevation-0);
	}

		// DISABLED START
	igc-button[variant='flat'][disabled]::part(base),
	igc-link-button[variant='flat'][disabled]::part(base),
	igc-button[variant='outlined'][disabled]::part(base),
	igc-link-button[variant='outlined'][disabled]::part(base) {
		background: transparent;
		box-shadow: none;
		color: var(--igc-gray-400);
	}

	igc-button[variant='fab'][disabled]::part(base),
	igc-button[variant='raised'][disabled]::part(base),
	igc-link-button[variant='fab'][disabled]::part(base),
	igc-link-button[variant='raised'][disabled]::part(base) {
		background: var(--igc-gray-100);
		color: var(--igc-gray-400);
	}
	// DISABLED END
}
