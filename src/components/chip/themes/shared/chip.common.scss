@use 'styles/utilities' as *;
@use '../light/themes' as *;

$theme: $material;

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --chip-size: var(--component-size);
}

:host button {
    border-radius: var-get($theme, 'border-radius');
    background: var-get($theme, 'background');
    color: var-get($theme, 'text-color');
    border-color: var-get($theme, 'border-color');
    outline: none;
    height: var-get($theme, 'size');

    &:focus {
        background: var-get($theme, 'focus-background');
        color: var-get($theme, 'focus-text-color');
        border-color: var-get($theme, 'focus-border-color');
    }

    &:hover {
        background: var-get($theme, 'hover-background');
        color: var-get($theme, 'hover-text-color');
        border-color: var-get($theme, 'hover-border-color');
    }

    &[disabled] {
        background: var-get($theme, 'disabled-background');
        color: var-get($theme, 'disabled-text-color');
        border-color: var-get($theme, 'disabled-border-color');
    }

    ::slotted([slot="remove"]) {
        color: var-get($theme, 'remove-icon-color');

        &:focus-within {
            color: var-get($theme, 'remove-icon-color-focus');
        }
    }

    slot[name='remove'] {
        igc-icon,
        ::slotted(igc-icon) {
            color: var-get($theme, 'remove-icon-color');
        }

        &:focus-within {
            igc-icon,
            ::slotted(igc-icon) {
                color: var-get($theme, 'remove-icon-color-focus');
            }
        }
    }

    igc-icon,
    ::slotted(igc-icon) {
        --component-size: var(--chip-size);
    }

    ::slotted(*) {
        --default-size: var(--chip-size);

        display: inline-flex;
        place-items: center;
    }

    ::slotted(igc-avatar) {
        --size: #{sizable(rem(14px), rem(18px), rem(24px))};
    }

    ::slotted(igc-circular-progress) {
        --diameter: #{sizable(rem(14px), rem(18px), rem(24px))};
    }
}

:host([selected]) button:not([disabled]) {
    background: var-get($theme, 'selected-background');
    color: var-get($theme, 'selected-text-color');
    border-color: var-get($theme, 'selected-border-color');

    &:focus {
        background: var-get($theme, 'focus-selected-background');
        color: var-get($theme, 'focus-selected-text-color');
        border-color: var-get($theme, 'focus-selected-border-color');
    }

    &:hover {
        background: var-get($theme, 'hover-selected-background');
        color: var-get($theme, 'hover-selected-text-color');
        border-color: var-get($theme, 'hover-selected-border-color');
    }
}
