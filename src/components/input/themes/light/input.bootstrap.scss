@use '../../../../styles/utilities' as *;

$input-background: var(--input-background, #fff) !default;

:host([size='large']) {
    --component-size: var(--ig-size, var(--ig-size-large));
}

:host([size='medium']) {
    --component-size: var(--ig-size, var(--ig-size-medium));
}

:host([size='small']) {
    --component-size: var(--ig-size, var(--ig-size-small));
}

:host {
    --size: #{sizable(rem(31px), rem(38px), rem(48px))};
    --font: #{sizable(rem(14px), rem(16px), rem(20px))};
    --input-font: #{sizable(rem(16px), rem(16px), rem(20px))};

    &::after {
        background: none;
    }

    [part~='container'] {
        @include border-radius(rem(4px));

        border-style: none;
        grid-template-columns: auto 1fr auto;
        background: $input-background;
        height: var(--size);

        &::after {
            display: none;
        }
    }

    [part~='input'] {
        @include border-radius(rem(4px));

        height: var(--size);
        font-size: var(--input-font);
        padding-inline: pad-inline(8px, 12px, 16px);
        padding-block: pad-block(4px, 6px, 8px);
        background: inherit;
        box-shadow: 0 0 0 0 transparent;
        z-index: 1;
        border: 1px solid color(gray, 400);
        transition: box-shadow .15s ease-out, border .15s ease-out;
        grid-area: 1 / 2;
    }

    [part*='input prefixed'] {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
    }

    [part*='input suffixed'] {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
    }

    [part*='input prefixed suffixed'] {
        border-radius: 0;
    }

    label {
        line-height: rem(24px);
        margin-bottom: rem(4px);
        color: color(gray, 700);

        &:empty {
            display: none;
        }
    }

    [part='prefix'],
    [part='suffix'] {
        position: relative;
        border-radius: none;
        min-width: auto;
        color: color(gray, 800);
        background: color(gray, 300);
        transition: box-shadow .15s ease-out, border .15s ease-out;
        font-size: var(--font);

        &:focus-within {
            box-shadow: 0 0 0 rem(4px) color(gray, 300, .38);
        }
    }

    [part='prefix'] {
        grid-area: 1 / 1;
        border: {
            style: solid;
            color: color(gray, 400);
            inline: {
                start-width: 1px;
                end-width: 0;
            };
            block: {
                start-width: 1px;
                end-width: 1px;
            };
            start: {
                start-radius: rem(4px);
            };
            end: {
                start-radius: rem(4px);
            };
        }
    }

    [name='prefix']::slotted(*),
    [name='suffix']::slotted(*) {
        display: inline-flex;
        align-items: center;
        width: max-content;
        height: 100%;
        padding-inline: pad-inline(8px, 12px, 16px);
    }

    [part='suffix'] {
        grid-area: 1 / 3;

        border: {
            style: solid;
            color: color(gray, 400);
            inline: {
                start-width: 0;
                end-width: 1px;
            };
            block: {
                start-width: 1px;
                end-width: 1px;
            };
            start: {
                end-radius: rem(4px);
            };
            end: {
                end-radius: rem(4px);
            };
        }
    }

    [part='helper-text'] {
        @include type-style('body-2');

        margin-top: rem(4px);
        color: color(gray, 700);
    }
}

:host(:focus-within) {
    [part~='input'] {
        box-shadow: 0 0 0 rem(4px) color(primary, 500, .38);
        border-color: color(primary, 500);
    }
}

:host([invalid]),
:host([invalid]:focus-within) {
    [part~='input'] {
        box-shadow: 0 0 0 rem(4px) color(error, 500, .38);
        border-color: color(error, 500);
    }
}

:host([disabled]),
:host([readonly]) {
    [part='prefix'],
    [part='suffix'],
    [part~='container'] {
        background: color(gray, 100);
        color: color(gray, 400);
        border-block-color: color(gray, 300);
    }

    [part='prefix'] {
        border-inline-start-color: color(gray, 300);
    }

    [part='suffix'] {
        border-inline-end-color: color(gray, 300);
    }

    [part~='input'] {
        border-block-color: color(gray, 300);
        border-inline-color: transparent;
    }
}

:host([disabled]) {
    [part='helper-text'] {
        color: color(gray, 400);
    }
}

:host([readonly]) {
    [part='prefix'],
    [part='suffix'],
    [part~='container'] {
        color: color(gray, 800);
    }
}

:host(:focus-within[readonly]) {
    [part~='input'] {
        box-shadow: 0 0 0 rem(4px) color(gray, 400, .38);
        border-color: color(gray, 400);
    }
}
