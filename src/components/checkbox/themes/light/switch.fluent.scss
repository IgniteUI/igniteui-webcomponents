@use '../../../../styles/utilities' as *;

$thumb-color: var(--thumb-color, color(gray, 700)) !default;
$disabled-thumb-color: var(--disabled-thumb-color, color(gray, 100)) !default;
$hover-color: var(--hover-color, color(gray, 800)) !default;
$checked-hover-color: var(--checked-hover-color, color(primary, 900)) !default;
$invalid-color: var(--invalid-color, color(error, 500)) !default;
$invalid-hover-color: var(--invalid-hover-color, color(error, 700)) !default;
$disabled-color: var(--disabled-color, color(gray, 400)) !default;

:host {
    --size: #{rem(40px)};
    --thumb-size: #{rem(12px)};
    --thumb-offset: calc(var(--thumb-size) / 2);
    --label-gap: #{rem(8px)};
}

[part~='base'] {
    &:hover [part~='thumb'] {
        &::after {
            background: color(gray, 600, .06);
        }
    }

    &:focus-within [part~='thumb'] {
        &::after {
            background: color(gray, 600, .12);
        }
    }
}

[part~='control'] {
    @include border-radius(rem(10px));

    width: var(--size);
    height: rem(20px);
    box-shadow: inset 0 0 0 1px color(gray, 700);
    background: transparent;
}

[part~='control'][part~='checked'] {
    background: color(primary, 500);
    box-shadow: inset 0 0 0 1px color(primary, 500);
}

[part~='thumb'] {
    @include border-radius(rem(10px));

    width: var(--thumb-size);
    height: var(--thumb-size);
    min-width: var(--thumb-size);
    margin-inline-start: var(--thumb-offset);
    background: $thumb-color;
}

[part~='label'] {
    @include type-style('body-2');

    color: color(gray, 900);
    transition: all .2s ease-in-out;
}

:host(:hover) [part~='control'] {
    box-shadow: inset 0 0 0 1px $hover-color;
}

[part~='focused'] {
    position: relative;

    $focus-outline-offset-top: rem(2px);
    $focus-outline-offset-left: rem(2px);

    &::after {
        content: '';
        position: absolute;
        top: -$focus-outline-offset-top;
        left: -$focus-outline-offset-left;
        box-shadow: 0 0 0 1px color(gray, 700);
        width: calc(100% + (#{$focus-outline-offset-left} * 2));
        height: calc(100% + (#{$focus-outline-offset-top} * 2));
    }
}

:host(:hover) [part~='thumb'] {
    background: $hover-color;
}

:host(:hover) [part~='control'][part~='checked'] {
    background: $checked-hover-color;
    box-shadow: inset 0 0 0 1px $checked-hover-color;
}

:host([invalid]) [part~='control'] {
    box-shadow: inset 0 0 0 1px $invalid-color;
}

:host([invalid]) [part~='control'][part~='checked'] {
    background: $invalid-color;
    box-shadow: inset 0 0 0 1px $invalid-color;
}

:host([invalid]:hover) [part~='control'] {
    box-shadow: inset 0 0 0 1px $invalid-hover-color;
}

:host([invalid]:hover) [part~='thumb'] {
    background: $invalid-hover-color;
}

:host([invalid]) [part~='thumb'][part~='checked'],
:host([invalid]:hover) [part~='thumb'][part~='checked'] {
    background: color(surface, 500);
}

:host([invalid]:hover) [part~='control'][part~='checked'] {
    box-shadow: inset 0 0 0 1px $invalid-hover-color;
    background: $invalid-hover-color;
}

:host([disabled]) [part~='label'] {
    color: $disabled-color;
}

:host(:not([disabled])[invalid]) {
    [part~='label'] {
        color: color(error, 500);
    }

    [part~='thumb'] {
        background: color(error, 500);
    }
}

:host([disabled]) [part~='control'],
:host([disabled][invalid]) [part~='control'] {
    box-shadow: inset 0 0 0 1px $disabled-color;
}

:host([disabled]) [part~='control'][part~='checked'],
:host([disabled][invalid]) [part~='control'][part~='checked'],
:host([disabled]) [part~='thumb'],
:host([disabled][invalid]) [part~='thumb'] {
    background: $disabled-color;
}

[part~='thumb'][part~='checked'],
:host(:hover) [part~='thumb'][part~='checked'] {
    background: color(gray, 50);
    margin-inline-start: calc(var(--size) - var(--thumb-size) - var(--thumb-offset));
}

:host([disabled]) [part~='thumb'][part~='checked'],
:host([disabled][invalid]) [part~='thumb'][part~='checked'] {
    background: $disabled-thumb-color;
}
