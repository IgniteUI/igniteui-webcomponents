@use '../../styles/utilities' as utils;

@mixin theme() {
    $border-radius: rem(2px);
    $label-color: color(gray, 800);
    $idle-color: color(gray, 600);
    $active-color: color(primary, 500);
    $idle-border-width: rem(1px);
    $active-border-width: rem(2px);
    $input-height: rem(32px);
    $success-color: color(success, 500);
    $error-color: color(error, 500);

    :host([size='small']),
    :host([size='medium']),
    :host([size='large']) {
        height: auto;
    }

    :host(:not([outlined])) {
        label {
            position: relative;
            top: initial;
            inset-inline-start: 0;
            transform: initial;
            padding: rem(5px) 0;
            font-size: rem(14px);
            color: $label-color;
            font-weight: 600;
            overflow-wrap: break-word;

            &:hover,
            &:focus {
                color: $label-color;
            }

            &::after {
                color: color(error, 300);
            }
        }

        input {
            padding: 0 rem(8px) !important;
            min-height: $input-height;
        }

        &::after {
            display: none;
        }

        [part='container'] {
            background: transparent;
            position: relative;
            box-shadow: 0 0 0 $idle-border-width $idle-color;
            transition: box-shadow 50ms ease-in-out;
            border-radius: $border-radius;
            border: none;
            min-height: $input-height;

            border: {
                start: {
                    end-radius: $border-radius;
                    start-radius: $border-radius;
                };
            }

            &:hover {
                box-shadow: 0 0 0 $idle-border-width color(gray, 800);
            }

            &:focus {
                box-shadow: 0 0 0 $active-border-width color(primary, 800);
            }
        }

        [part='prefix'] {
            border: {
                start: {
                    start-radius: $border-radius;
                };
                end: {
                    start-radius: $border-radius;
                };
            }
        }

        [part='suffix'] {
            border: {
                start: {
                    end-radius: $border-radius;
                };
                end: {
                    end-radius: $border-radius;
                };
            }
        }

        [part='prefix'],
        [part='suffix'] {
            font-size: 100%;
            padding: 0 rem(10px);
            background: color(gray, 100);
            min-height: $input-height;
        }

        [part='end'],
        [part='prefix'],
        [part='notch'] {
            border: none;
        }
    }

    :host(:not([outlined]):focus-within) {
        [part='container'] {
            box-shadow: 0 0 0 $active-border-width $active-color;
        }

        [part='prefix'] {
            padding: 0 rem(10px);
        }

        label {
            color: $label-color;
        }
    }

    :host(:not([outlined]):focus-within),
    :host(:not([outlined])[placeholder]),
    input:not(:placeholder-shown) + [part='container'] {
        label {
            transform: initial;
        }
    }

    :host([disabled]) {
        [part='container'],
        label {
            color: color(gray, 400);

            &::after {
                color: color(gray, 400);
            }
        }

        [part='container'] {
            box-shadow: 0 0 0 $idle-border-width transparent;
        }

        [part='container'],
        [part='prefix'],
        [part='suffix']{
            background: color(gray, 100);
        }
    }

    :host([invalid]) {
        [part='container'] {
            box-shadow: 0 0 0 $idle-border-width $error-color;

            &:focus {
                box-shadow: 0 0 0 $active-border-width $error-color;
            }
        }
    }

    :host([invalid]:focus-within) {
        [part='container'] {
            box-shadow: 0 0 0 $active-border-width $error-color;
        }
    }

    :host([valid]) {
        [part='container'] {
            box-shadow: 0 0 0 $idle-border-width $success-color;

            &:focus {
                box-shadow: 0 0 0 $active-border-width $success-color;
            }
        }
    }

    :host([valid]:focus-within) {
        [part='container'] {
            box-shadow: 0 0 0 $active-border-width $success-color;
        }
    }
}

