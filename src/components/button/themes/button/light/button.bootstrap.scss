@use 'sass:map';
@use '../../../../../styles/utilities' as *;
@use '../../../../../styles/themes/schemas/bootstrap/light' as *;

$flat-schema: map.get($light-bootstrap-schema, 'button', 'flat');
$flat-border-radius: border-radius(map.get($flat-schema, 'border-radius')...);
$flat-theme: digest-schema(extend(
    $flat-schema,
    (
        border-radius: $flat-border-radius
    )
));

$contained-schema: map.get($light-bootstrap-schema, 'button', 'raised');
$contained-border-radius: border-radius(map.get($contained-schema, 'border-radius')...);
$contained-theme: digest-schema(extend(
    $contained-schema,
    (
        border-radius: $contained-border-radius
    )
));

$fab-schema: map.get($light-bootstrap-schema, 'button', 'fab');
$fab-border-radius: border-radius(map.get($fab-schema, 'border-radius')...);
$fab-theme: digest-schema(extend(
    $fab-schema,
    (
        border-radius: $fab-border-radius
    )
));

$outlined-schema: map.get($light-bootstrap-schema, 'button', 'outlined');
$outlined-border-radius: border-radius(map.get($outlined-schema, 'border-radius')...);
$outlined-theme: digest-schema(extend(
    $outlined-schema,
    (
        border-radius: $outlined-border-radius
    )
));

:host([variant='flat']) {
    @include css-vars-from-theme($flat-theme, 'ig-button');

    [part='base'] {
        border-radius: var-get($flat-theme, 'border-radius');
    }
}

:host([variant='contained']) {
    @include css-vars-from-theme($contained-theme, 'ig-button');

    [part='base'] {
        border-radius: var-get($contained-theme, 'border-radius');
    }
}

:host([variant='outlined']) {
    @include css-vars-from-theme($outlined-theme, 'ig-button');

    [part='base'] {
        border: rem(1px) solid var-get($outlined-theme, 'border-color');

        border-radius: var-get($outlined-theme, 'border-radius');
    }
}

:host([variant='fab']) {
    @include css-vars-from-theme($fab-theme, 'ig-button');

    [part='base'] {
        border-radius: var-get($fab-theme, 'border-radius');
    }
}

:host {
    --size: #{sizable(rem(31px), rem(38px), rem(48px))};
}

:host [part='base'] {
    transition: all .15s ease-in-out;
}

:host(:not([disabled])[variant='flat']) [part='base'] {
    color: var-get($flat-theme, 'foreground');
    background: var-get($flat-theme, 'background');

    &:hover {
        color: var-get($flat-theme, 'hover-foreground');
        background: var-get($flat-theme, 'hover-background');
    }

    &:focus {
        color: var-get($flat-theme, 'focus-foreground');
        background: var-get($flat-theme, 'focus-background');
    }

    &:focus-visible {
        color: var-get($flat-theme, 'focus-visible-foreground');
        background: var-get($flat-theme, 'focus-visible-background');
    }

    &:active {
        color: var-get($flat-theme, 'active-foreground');
        background: var-get($flat-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(4px) var-get($flat-theme, 'shadow-color');
    }
}

:host(:not([disabled])[variant='contained']) [part='base'] {
    color: var-get($contained-theme, 'foreground');
    background: var-get($contained-theme, 'background');

    &:hover {
        color: var-get($contained-theme, 'hover-foreground');
        background: var-get($contained-theme, 'hover-background');
    }

    &:focus {
        color: var-get($contained-theme, 'focus-foreground');
        background: var-get($contained-theme, 'focus-background');
    }

    &:focus-visible {
        color: var-get($contained-theme, 'focus-visible-foreground');
        background: var-get($contained-theme, 'focus-visible-background');
    }

    &:active {
        color: var-get($contained-theme, 'active-foreground');
        background: var-get($contained-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(4px) var-get($contained-theme, 'shadow-color');
    }
}

:host(:not([disabled])[variant='outlined']) [part='base'] {
    color: var-get($outlined-theme, 'foreground');
    background: var-get($outlined-theme, 'background');

    &:focus {
        color: var-get($outlined-theme, 'focus-foreground');
        background: var-get($outlined-theme, 'focus-background');
    }

    &:focus-visible {
        color: var-get($outlined-theme, 'focus-visible-foreground');
        background: var-get($outlined-theme, 'focus-visible-background');
    }

    &:hover {
        color: var-get($outlined-theme, 'hover-foreground');
        background: var-get($outlined-theme, 'hover-background');
    }

    &:active {
        color: var-get($outlined-theme, 'active-foreground');
        background: var-get($outlined-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(4px) var-get($outlined-theme, 'shadow-color');
    }
}

:host(:not([disabled])[variant='fab']) [part='base'] {
    color: var-get($fab-theme, 'foreground');
    background: var-get($fab-theme, 'background');

    &:hover {
        color: var-get($fab-theme, 'hover-foreground');
        background: var-get($fab-theme, 'hover-background');
    }

    &:focus {
        color: var-get($fab-theme, 'focus-foreground');
        background: var-get($fab-theme, 'focus-background');
    }

    &:focus-visible {
        color: var-get($fab-theme, 'focus-visible-foreground');
        background: var-get($fab-theme, 'focus-visible-background');
    }

    &:active {
        color: var-get($fab-theme, 'active-foreground');
        background: var-get($fab-theme, 'active-background');
    }

    &:focus,
    &:active {
        box-shadow: 0 0 0 rem(4px) var-get($fab-theme, 'shadow-color');
    }
}

:host([disabled][variant='flat']) [part='base'] {
    color: var-get($flat-theme, 'disabled-foreground');
    background: var-get($flat-theme, 'disabled-background');
}

:host([disabled][variant='contained']) [part='base'] {
    color: var-get($contained-theme, 'disabled-foreground');
    background: var-get($contained-theme, 'disabled-background');
}

:host([disabled][variant='outlined']) [part='base'] {
    color: var-get($contained-theme, 'disabled-foreground');
    background: var-get($contained-theme, 'disabled-background');
    border-color: var-get($contained-theme, 'disabled-border-color');
}

:host([disabled][variant='fab']) [part='base'] {
    color: var-get($fab-theme, 'disabled-foreground');
    background: var-get($fab-theme, 'disabled-background');
}
