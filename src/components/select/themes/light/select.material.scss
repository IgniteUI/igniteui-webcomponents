@use '../../../../styles/utilities' as *;

$idle-color: color(gray, 600) !default;
$idle-hover-color: color(gray, 800) !default;
$hover-background: color(gray, 200) !default;
$focus-background: var(--focus-background, color(gray, 300)) !default;
$active-color: color(primary, 500) !default;
$error-color: color(error, 500) !default;
$idle-border-width: rem(1px) !default;
$active-border-width: rem(2px) !default;

:host([outlined]:focus-within) {
    igc-input[readonly]:not([disabled])::part(start) {
        border: {
            color: $active-color;
            inline: {
                start-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            }
        }
    }

    igc-input[readonly]:not([disabled])::part(notch) {
        border: {
            width: $active-border-width;
            color: $active-color;
            top: $idle-border-width solid transparent;
        }
    }

    igc-input[readonly]:not([disabled])::part(filler) {
        border: {
            width: $active-border-width;
            color: $active-color;
        }
    }

    igc-input[readonly]:not([disabled])::part(end) {
        border: {
            color: $active-color;
            inline: {
                end-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            };
        }
    }

    igc-input[readonly]:not([disabled])::part(label) {
        color: $active-color;
    }
}

:host([outlined][invalid]:focus-within) {
    igc-input[readonly]:not([disabled])::part(start) {
        border: {
            color: $error-color;
            inline: {
                start-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            }
        }
    }

    igc-input[readonly]:not([disabled])::part(notch) {
        border: {
            width: $active-border-width;
            color: $error-color;
            top: $idle-border-width solid transparent;
        }
    }

    igc-input[readonly]:not([disabled])::part(filler) {
        border: {
            width: $active-border-width;
            color: $error-color;
        }
    }

    igc-input[readonly]:not([disabled])::part(end) {
        border: {
            color: $error-color;
            inline: {
                end-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            };
        }
    }

    igc-input[readonly]:not([disabled])::part(label) {
        color: $error-color;
    }
}

[part~='toggle-icon'] {
    background: color(gray, 300);
}

[part='helper-text'] {
    color: color(gray, 700);
    margin-top: rem(5px);
    padding-inline: pad-inline(rem(14px), rem(16px), rem(18px));
}

:host([disabled]) {
    [part~='toggle-icon'],
    ::slotted([slot='helper-text']) {
        color: color(gray, 500);
    }

    [part~='toggle-icon'] {
        background: color(gray, 100);
    }
}

igc-input:not([outlined]) {
    &:focus-within {
        [part~='toggle-icon'] {
            background: color(gray, 400, .3);
        }
    }
}
