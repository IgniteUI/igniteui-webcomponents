@use 'sass:map';
@use 'styles/common/component';
@use 'styles/utilities' as *;
@use '../../../input/themes/light/themes' as *;

$theme: $fluent;

:host {
    @include css-vars-from-theme($theme, 'ig-textarea');
    @include type-style('body-2');
}

:host(:hover) {
    [part~='container'] {
        border-color: var-get($theme, 'hover-border-color');
    }
}

:host(:focus-within) {
    [part~='container'] {
        border-color: var-get($theme, 'focused-border-color');
        border-width: rem(2px);
    }

    [part~='prefix']:not([hidden]) {
        margin-inline-start: rem(-1px);
    }

    [part~='suffix']:not([hidden]) {
        margin-inline-end: rem(-1px);
    }

    textarea {
        margin-block: rem(-1px);
        margin-inline-start: rem(-1px);
    }

    [part~='prefix']:not([hidden]) ~ textarea {
        margin-inline: initial;
    }
}

[part~='container'] {
    border: rem(1px) solid var-get($theme, 'border-color');
    background: var-get($theme, 'border-background');
    align-items: stretch;
    overflow: hidden;
    border-radius: var-get($theme, 'border-border-radius');
}

[part~='label'] {
    display: block;
    font-size: rem(14px);
    font-weight: 600;
    position: static;
    transform: translateY(0);
    transform-origin: top left;
    margin-top: 0;
    height: auto;
    margin-block-end: rem(4px);
    color: var-get($theme, 'idle-secondary-color');
}

:host([invalid]) {
    [part~='label'] {
        color: var-get($theme, 'idle-text-color');
    }
}

textarea {
    @include type-style('body-2');

    padding: rem(8px);
}

[part~='prefixed'] {
    [part~='prefix'] {
        color: var-get($theme, 'input-prefix-color');
        background: var-get($theme, 'input-prefix-background');
    }
}

[part~='suffixed'] {
    [part~='suffix'] {
        color: var-get($theme, 'input-suffix-color');
        background: var-get($theme, 'input-suffix-background');
    }
}

[part~='filled'] {
    [part='prefix'],
    [part='suffix'] {
        color: var-get($theme, 'input-prefix-color--filled');
        background: var-get($theme, 'input-prefix-background--filled');
    }

    [part~='input'] {
        color: var-get($theme, 'input-prefix-color--filled');
    }
}

[part~='helper-text'] {
    @include type-style('caption');

    color: var-get($theme, 'helper-text-color');
    padding-block-start: rem(5px);
    padding-inline-start: 0;
}

:host([required]:not(:disabled)),
:host([required]:not([disabled])) {
    [part~='label'] {
        &::after {
            color: var-get($theme, 'error-secondary-color');
        }
    }
}

:host([invalid]:not(:disabled)),
:host([invalid]:not([disabled])) {
    [part~='container'] {
        border-color: var-get($theme, 'error-secondary-color');
    }

    [part~='helper-text'] {
        color: var-get($theme, 'error-secondary-color');
    }
}

:host(:disabled),
:host([disabled]) {
    color: var-get($theme, 'disabled-text-color');

    [part='prefix'],
    [part='suffix'] {
        color: var-get($theme, 'disabled-text-color');
        background: inherit;
    }

    [part~='helper-text'] {
        color: var-get($theme, 'disabled-text-color');
    }

    textarea {
        color: var-get($theme, 'disabled-text-color');

        &::placeholder {
            color: var-get($theme, 'disabled-placeholder-color');
        }
    }

    [part~='label'] {
        color: var-get($theme, 'disabled-text-color');
    }

    [part~='container'] {
        border-color: var-get($theme, 'disabled-border-color');
        background: var-get($theme, 'border-disabled-background');
    }
}
