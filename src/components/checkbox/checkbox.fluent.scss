@use '../../styles/utilities' as utils;

@mixin theme() {
    igc-checkbox::part(control) {
        width: var(--size, utils.rem(20px));
        height: var(--size, utils.rem(20px));
        min-width: var(--size, utils.rem(20px));
        background: transparent;
        transition: none;

        &::after {
            border: none;
            background: transparent;
            box-shadow: inset 0 0 0 1px #{utils.color(gray, 500)};
        }
    }

    igc-checkbox::part(indicator) {
        stroke-width: 1.5;
        transform: scale(.8);
    }

    igc-checkbox:hover {
        &::part(indicator) {
            opacity: 1;
            stroke: #{utils.color(gray, 700)};
            stroke-dashoffset: 0;
            transition: opacity .1s ease-out;
        }

        &::part(indicator checked) {
            stroke: white;
        }
    }

    igc-checkbox:hover,
    igc-checkbox:focus-within {
        &::part(control)::after {
            box-shadow: inset 0 0 0 1px #{utils.color(gray, 800)};
        }
    }

    igc-checkbox[indeterminate] {
        &::part(indicator) {
            display: none;
        }

        &::part(control)::before {
            display: block;
            width: inherit;
            height: inherit;
            content: '';
            transform: scale(.5);
            transition-duration: .1s;
            background: #{utils.color(primary, 500)};
            border-radius: utils.rem(2px);
            z-index: 1;
        }

        &::part(control)::after {
            box-shadow: inset 0 0 0 1px #{utils.color(primary, 500)};
        }

        &::part(control checked)::after {
            background: transparent;
        }
    }

    igc-checkbox[indeterminate]:hover::part(control),
    igc-checkbox[indeterminate]:focus-within::part(control) {
        &::before {
            background: #{utils.color(primary, 900)};
        }

        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(primary, 900)};
            background: transparent;
        }
    }

    igc-checkbox::part(control checked) {
        &::after {
            background: #{utils.color(primary, 500)};
            box-shadow: inset 0 0 0 1px #{utils.color(primary, 500)};
        }
    }

    igc-checkbox:hover::part(control checked),
    igc-checkbox:focus-within::part(control checked) {
        &::after {
            background: #{utils.color(primary, 900)};
            box-shadow: inset 0 0 0 1px #{utils.color(primary, 900)};
        }
    }

    igc-checkbox[invalid]::part(control) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 500)};
        }
    }

    igc-checkbox[invalid]:hover::part(indicator) {
        stroke: #{utils.color(error, 500, .54)};
    }

    igc-checkbox[invalid]:hover::part(indicator checked) {
        stroke: white;
    }

    igc-checkbox[invalid]::part(control checked) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 500)};
            background: #{utils.color(error, 500)};
        }
    }

    igc-checkbox[indeterminate][invalid]::part(control) {
        &::before {
            background: #{utils.color(error, 500)};
        }

        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 500)};
        }
    }

    igc-checkbox[invalid]:hover::part(control),
    igc-checkbox[invalid]:focus-within::part(control) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 700)};
        }
    }

    igc-checkbox[invalid]:hover::part(control checked),
    igc-checkbox[invalid]:focus-within::part(control checked) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 700)};
            background: #{utils.color(error, 700)};
        }
    }

    igc-checkbox[indeterminate][invalid]:hover::part(control),
    igc-checkbox[indeterminate][invalid]:focus-within::part(control) {
        &::before {
            background: #{utils.color(error, 700)};
        }

        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(error, 700)};
        }
    }

    igc-checkbox[disabled]::part(control),
    igc-checkbox[disabled][invalid]::part(control) {
        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(gray, 400)};
            background: transparent;
        }
    }

    igc-checkbox[disabled]::part(control checked),
    igc-checkbox[disabled][invalid]::part(control checked) {
        &::after {
            background: #{utils.color(gray, 400)};
        }
    }

    igc-checkbox[disabled][indeterminate]::part(control),
    igc-checkbox[disabled][indeterminate][invalid]::part(control) {
        &::before {
            background: #{utils.color(gray, 400)};
        }

        &::after {
            box-shadow: inset 0 0 0 1px #{utils.color(gray, 400)};
            background: transparent;
        }
    }
}
