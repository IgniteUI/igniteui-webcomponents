@use 'styles/utilities' as *;
@use '../light/themes' as *;
@use 'components/dropdown/themes/light/themes' as dropdown-theme;
@use 'components/input/themes/light/themes' as input-theme;

$theme: $indigo;
$dropdown-theme: dropdown-theme.$indigo;
$input-theme: input-theme.$indigo;

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --select-size: var(--component-size);
    --dropdown-size: var(--component-size);

    ::part(helper-text) {
        @include type-style('caption');

        margin-block-start: rem(4px);
        grid-auto-rows: minmax(rem(15px), auto);
    }

    igc-input::part(input) {
        color: var-get($input-theme, 'filled-text-color');
    }

    igc-input::part(container) {
        padding-inline: 0;
    }
}

[part='base'] {
    outline: var-get($dropdown-theme, 'border-width') solid var-get($dropdown-theme, 'border-color');
    padding: rem(3px);
}

:host(:hover) {
    [part~='toggle-icon'] {
        color: var-get($theme, 'toggle-button-foreground-focus');
    }
}

:host(:focus-within) {
    igc-input::part(label) {
        color: var-get($input-theme, 'focused-secondary-color');
    }

    igc-input::part(container) {
        background: var-get($input-theme, 'box-background-hover');

        &::after {
            transform: scaleY(1);
        }
    }
}

:host([invalid]:focus-within) {
    igc-input::part(label) {
        color: var-get($theme, 'error-secondary-color');
    }
}

:host(:not([disabled])[invalid]),
:host(:not(:disabled)[invalid]) {
    ::part(helper-text) {
        color: var-get($input-theme, 'helper-text-color');
    }

    ::part(validation-icon) {
        color: var-get($theme, 'error-secondary-color');
    }
}

:host(:disabled),
:host([disabled]) {
    igc-input::part(input) {
        color: var-get($theme, 'disabled-text-color');
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-disabled');
        color: var-get($theme, 'toggle-button-foreground-disabled');

        igc-icon {
            color: inherit;
        }
    }
}
