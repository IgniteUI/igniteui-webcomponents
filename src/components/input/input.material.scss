@use 'sass:map';
@use 'sass:math';
@use '../../styles/common/component';
@use '../../styles/utilities' as *;

$idle-color: color(gray, 600);
$idle-hover-color: color(gray, 800);
$active-color: color(primary, 500);
$error-color: color(error, 500);
$idle-border-width: rem(1px);
$active-border-width: rem(2px);
$scale: .75;
$fs: rem(16px);

$input-height: (
    large: rem(56px),
    medium: rem(48px),
    small: rem(40px)
);

@function floated-position($input-height) {
    $scaled-fs: $fs * $scale;
    @return $scaled-fs + $input-height - #{math.div($fs, 2)};
}

%large-label {
    $y-offset: floated-position(map.get($input-height, 'large'));
    transform: translateY(-34.75px) scale($scale);
}

%medium-label {
    $y-offset: floated-position(map.get($input-height, 'medium'));
    transform: translateY(-29.75px) scale($scale);
}

%small-label {
    $y-offset: floated-position(map.get($input-height, 'small'));
    transform: translateY(-25.75px) scale($scale);
}

%floated-styles {
    > [part='notch']  {
        border-top: $idle-border-width solid transparent;
    }
}

%starfix {
    display: flex;
    align-items: center;
    height: 100%;
    color: color(gray, 700);
}

:host {
    position: relative;
    display: block;
    font-family: var(--igc-font-family);
    outline-style: none;
    --theme: material;
}

:host([size='large']) {
    [part~='input'],
    [part~='container'] {
        height: map.get($input-height, 'large');
    }

    input:not(:placeholder-shown) + [part^='container'] [part='label'] {
        @extend %large-label;
    }
}

:host([size='medium']) {
    [part~='input'],
    [part~='container'] {
        height: map.get($input-height, 'medium');
    }

    input:not(:placeholder-shown) + [part^='container'] [part='label'] {
        @extend %medium-label;
    }
}

:host([size='small']) {
    [part~='input'],
    [part~='container'] {
        height: map.get($input-height, 'small');
    }

    input:not(:placeholder-shown) + [part^='container'] [part='label'] {
        @extend %small-label;
    }
}

:host([size='large']:focus-within) {
    [part='label'] {
        @extend %large-label;
    }
}

:host([size='medium']:focus-within) {
    [part='label'] {
        @extend %medium-label;
    }
}

:host([size='small']:focus-within) {
    [part='label'] {
        @extend %small-label;
    }
}

:host([placeholder][size='large']) > [part^='container'] {
    @extend %floated-styles;

    [part='label'] {
        @extend %large-label;
    }
}

:host([placeholder][size='medium']) > [part^='container'] {
    @extend %floated-styles;

    [part='label'] {
        @extend %medium-label;
    }
}

:host([placeholder][size='small']) > [part^='container'] {
    @extend %floated-styles;

    [part='label'] {
        @extend %small-label;
    }
}

input {
    width: 100%;
    height: 100%;
    border: none;
    background: transparent;
    outline-style: none;
    padding: rem(12px) rem(16px);
    font-size: rem(16px);
    font-family: var(--igc-font-family);
}

[part='label'] {
    position: absolute;
    display: inline-block;
    top: 50%;
    inset-inline-start: rem(4px);
    transform: translateY(-50%) scale(1);
    transition: transform 150ms cubic-bezier(.4, 0, .2, 1), color 150ms cubic-bezier(.4, 0, .2, 1);
    white-space: nowrap;
    color: $idle-color;
    line-height: 1;
}

:host(:focus-within) {
    [part='start'] {
        border: {
            color: $active-color;
            inline: {
                start-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            }
        }
    }

    [part='notch'] {
        border: {
            width: $active-border-width;
            color: $active-color;
            top: $idle-border-width solid transparent;
        }
    }

    [part='end'] {
        border: {
            color: $active-color;
            inline: {
                end-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            };
        }
    }

    [part='prefix'] {
        padding-inline-start: 4px;
    }

    [part='suffix'] {
        padding-inline-end: rem(4px);
    }

    [part='label'] {
        color: $active-color;
    }
}

:host([invalid]),
:host([invalid]:focus-within) {
    [part='start'],
    [part='notch'],
    [part='end'] {
        border-color: $error-color;
    }

    [part='label'] {
        color: $error-color;
    }
}

:host([invalid]:focus-within) {
    [part='notch']  {
        border-top: $idle-border-width solid transparent;
    }
}

input:not(:placeholder-shown) + [part^='container'] {
    @extend %floated-styles;
}

[part^='container'] {
    position: absolute;
    display: flex;
    top: 0;
    width: 100%;
    height: 100%;
    max-width: 100%;
    pointer-events: none;
}

[part='prefix'],
[part='suffix'] {
    display: none;
}

[part~='prefixed'] {
    [part='prefix'] {
        @extend %starfix;
    }
}

[part~='suffixed'] {
    [part='suffix'] {
        @extend %starfix;
    }
}

[part='start'] {
    width: auto;
    min-width: rem(12px);
    flex-shrink: 0;
    border: {
        style: solid;
        color: $idle-color;
        inline: {
            start-width: $idle-border-width;
            end-width: 0;
        };
        block: {
            start-width: $idle-border-width;
            end-width: $idle-border-width;
        };
        start: {
            start-radius: rem(4px);
        };
        end: {
            start-radius: rem(4px);
        };
    }

    > [part='prefix'] {
        padding-inline-start: rem(5px);
        padding-inline-end: rem(4px);
    }
}

[part='notch'] {
    position: relative;
    flex: 0 0 auto;
    width: auto;
    height: 100%;
    border: {
        width: $idle-border-width;
        style: solid;
        color: $idle-color;
        left: none;
        right: none;
    }
    overflow: visible;
}

[part='end'] {
    display: flex;
    justify-content: flex-end;
    flex-grow: 1;
    height: 100%;
    border: {
        style: solid;
        color: $idle-color;
        inline: {
            start-width: 0;
            end-width: $idle-border-width;
        };
        block: {
            start-width: $idle-border-width;
            end-width: $idle-border-width;
        };
        start: {
            end-radius: rem(4px);
        };
        end: {
            end-radius: rem(4px);
        };
    }

    > [part='suffix'] {
        padding-inline-start: rem(4px);
        padding-inline-end: rem(5px);
    }
}

[part='helper-text'] {
    @include type-category('caption');
    padding: 0 rem(8px);
    margin-top: rem(4px);
    color: color(gray, 600);
}

:host([required]) {
    [part='label']::after {
        content: '*';
    }
}

:host([disabled]) {
    pointer-events: none;

    [part='input'],
    [part='label'] {
        color: color(gray, 400);
    }

    [part='start'],
    [part='notch'],
    [part='end'] {
        color: color(gray, 400);
        border-color: color(gray, 400);
    }
}

// Filled Style
:host(:not([outlined])) {
    [part='start'],
    [part='end'] {
        border-color: transparent;
        border-top-width: rem(1px);
    }

    [part='notch'] {
        border-top: 1px solid transparent;
        border-bottom: transparent;
        border-bottom-width: rem(1px);
    }

    [part='label'] {
        inset-inline-start: rem(2px);
    }

    input {
        padding-top: rem(20px);
        padding-bottom: rem(6px);
        background: color(gray, 100);
        border-bottom: 1px solid $idle-color;

        border: {
            start: {
                end-radius: rem(4px);
                start-radius: rem(4px);
            };
        }

        transition: border-bottom-width 150ms cubic-bezier(.4, 0, .2, 1);

        &:focus {
            border-color: $active-color;
        }

        &:hover {
            background: color(gray, 200);
            border-color: $idle-hover-color;
        }
    }

    input:not(:placeholder-shown) + [part^='container'] {
        [part='label'] {
            transform: translateY(-106%) scale($scale);
        }
    }

    [part~='container']::after {
        position: absolute;
        content: '';
        width: 100%;
        height: rem(2px);
        left: 0;
        right: 0;
        bottom: 0;
        background: $active-color;
        transform: scaleX(0);
        transition: transform 180ms cubic-bezier(.4, 0, .2, 1), opacity 180ms cubic-bezier(.4, 0, .2, 1);
    }
}

:host(:not([outlined]):focus-within) {
    [part='start'],
    [part='end'] {
        border-color: transparent;
    }

    [part='notch'] {
        border-bottom-color: transparent;
        border-top: 1px solid transparent;
    }

    [part~='container']::after {
        transform: scaleX(1);
        opacity: 1;
    }

    [part~='input'] {
        border-color: $active-color;
    }
}

:host(:not([outlined]):focus-within),
:host(:not([outlined])[placeholder]) {
    [part='label'] {
        transform: translateY(-106%) scale($scale);
    }
}

:host(:not([outlined])[invalid]),
:host(:not([outlined])[invalid]:focus-within) {
    [part~='input'] {
        border-color: $error-color;
    }

    [part~='container']::after {
        background: $error-color;
    }
}
