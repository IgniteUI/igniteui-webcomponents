@use '../../styles/common/component';
@use '../../styles/utilities' as *;
@use 'sass:map';

$node-height: (
    large: rem(50px),
    medium: rem(40px),
    small: rem(32px)
);

:host {
    display: flex;
    flex-direction: column;
    font-family: inherit;
    --igc-tree-indentation-size: #{rem(24px)};
}

:host(:focus-within) {
    outline: none;
}

[part~='wrapper'] {
    display: flex;
    align-items: center;
    min-height: rem(50px);
    padding: 0 rem(24px);
    position: relative;
    color: color(gray, 900);

    &:hover {
        background: color(gray, 200);
        color: contrast-color(gray, 200);
    }
}

[part~='active'] {
    background: color(gray, 100);
    color: contrast-color(gray, 100);
}

[part~='selected'] {
    background: color(secondary, 200);
    color: contrast-color(secondary, 200);

    &:hover {
        background: color(secondary, 300);
        color: contrast-color(secondary, 300);
    }
}

[part='wrapper selected focused active'],
[part='wrapper selected focused'],
[part='wrapper selected active'] {
    background: color(secondary, 300);
    color: contrast-color(secondary, 300);

    &:hover {
        background: color(secondary, 300);
        color: contrast-color(secondary, 300);
    }
}

[part~='focused'] {
    box-shadow: inset 0 0 0 1px color(secondary, 500);
}

[part~='indicator'] {
    display: flex;
    align-items: center;
    z-index: 1;
    justify-content: center;
    cursor: pointer;
    user-select: none;
    margin-inline-end: rem(4px);

    igc-icon {
        width: rem(24px);
        height: rem(24px);
        font-size: rem(24px);
    }
}

[part~='label'] {
    display: block;

    @include type-category('body-2');

    margin: 0;
}

[part~='label'],
[part~='text'] {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}

[part~='select'] {
    display: flex;
    align-items: center;
    z-index: 1;
    margin-inline-end: rem(4px);

    igc-checkbox {
        &::part(label) {
            display: none;
        }
    }
}

// TODO REMOVE THIS SELECTORS AFTER WE CHANGE THE WAY INDENTATION IS CALCULATED
[part~='spacer'] {
    display: inline-block;
}


// TODO RENAME ALL SPACERS PARTS TO INDENTATION
// LARGE
[part~='large'] {
    height: map.get($node-height, 'large');
}

[part='spacer large'] {
    width: var(--igc-tree-indentation-size);
}

// MEDIUM
[part~='medium'] {
    height: map.get($node-height, 'medium');
}

[part='spacer medium'] {
    $node-indentation: calc(var(--igc-tree-indentation-size) - #{rem(8px)});
    width: $node-indentation;
}

// SMALL
[part~='small'] {
    height: map.get($node-height, 'small');
}

[part='spacer small'] {
    $node-indentation: calc(var(--igc-tree-indentation-size) - #{rem(12px)});
    width: $node-indentation;
}

