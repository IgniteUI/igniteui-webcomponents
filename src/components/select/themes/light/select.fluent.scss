@use 'sass:map';
@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;
@use '../../../../styles/themes/schemas/fluent/light' as *;

$dropdown-schema: map.get($light-fluent-schema, 'drop-down');
$dropdown-theme: digest-schema($dropdown-schema);
$input-schema: map.get($light-fluent-schema, 'input-group');
$schema: map.get($light-fluent-schema, 'select');
$input-theme: digest-schema($input-schema);
$theme: digest-schema($schema);
$focused-border-width: rem(2px);

:host {
    @include css-vars-from-theme($input-theme, 'ig-input');
    @include css-vars-from-theme($theme, 'ig-select');
    @include css-vars-from-theme($dropdown-theme, 'ig-drop-down');
}

[part='base'] {
    background: var-get($dropdown-theme, 'background-color');
    border-radius: var-get($dropdown-theme, 'border-radius');
    box-shadow: var(--ig-elevation-4);
}

[part='helper-text'] {
    margin-top: rem(5px);

    ::slotted([slot='helper-text']) {
        color: var-get($input-theme, 'helper-text-color');
    }
}

[part~='toggle-icon'] {
    background: var-get($theme, 'toggle-button-background');
    color: var-get($theme, 'toggle-button-foreground');

    igc-icon {
        color: inherit;
    }
}

:host(:focus-within) {
    igc-input[readonly]:not([disabled])::part(container) {
        border-width: #{$focused-border-width};
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-focus--border');
        color: var-get($theme, 'toggle-button-foreground-focus');

        igc-icon {
            color: inherit;
        }
    }
}

:host(:not([invalid]):focus-within) {
    igc-input[readonly]:not([disabled])::part(container) {
        border-color: var-get($input-theme, 'focused-border-color');
        border-width: #{$focused-border-width};
    }

    igc-input[readonly]:not([disabled])::part(prefix) {
        margin-inline-start: rem(-1px);
    }

    igc-input[readonly]:not([disabled])::part(suffix) {
        margin-inline-end: rem(-1px);
    }
}

:host(:disabled),
:host([disabled]) {
    [part='helper-text'] ::slotted([slot='helper-text']) {
        color: var-get($input-theme, 'disabled-text-color');
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-disabled');
        color: var-get($theme, 'toggle-button-foreground-disabled');

        igc-icon {
            color: inherit;
        }
    }
}
