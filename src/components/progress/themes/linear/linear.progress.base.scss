@use 'sass:math';
@use 'styles/common/component';
@use 'styles/utilities' as *;
@use '../animations' as *;
@use '../vars' as *;

:host {
    --track-size: #{rem(4px)};
    --linear-animation-duration: 2000ms;
}

[part~='base'] {
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    font-family: var(--ig-font-family), serif;
    position: relative;
    width: 100%;
    flex: 1 1 100%;
}

:host(:dir(rtl)[indeterminate]),
:host([dir='rtl'][indeterminate]) {
    [part~='track'] {
        transform: rotateY(180deg);
    }
}

[part~='label'] {
    display: flex;
    align-items: center;
    color: inherit;
    font-weight: 600;
}

[part~='track'] {
    position: relative;
    width: inherit;
    height: var(--track-size);
    overflow: hidden;
    z-index: 0;
}

[part~='fill'] {
    width: calc(var(--_progress-whole, 0) * 1%);
    transition: width var(--_transition-duration) linear;
    position: relative;
    height: 100%;
}

[part~='fill']:not([part~='indeterminate']) {
    overflow: hidden;
    animation: initial-width var(--_transition-duration) linear;
}

[part~='indeterminate'],
[part~='indeterminate secondary'] {
    width: 100% !important;
    height: inherit;
    position: absolute;
    background: transparent;

    &::after {
        content: '';
        position: absolute;
        top: 0;
        inset-inline-start: 0;
        width: inherit;
        height: inherit;
        backface-visibility: hidden;
    }
}

[part~='indeterminate']:not([part~='secondary']) {
    transform: scale3d(0, 1, 1);
    animation: indeterminate-primary var(--linear-animation-duration) infinite linear;
    left: -145.1666%;

    &::after {
        animation: indeterminate-primary-scale var(--linear-animation-duration) infinite linear;
    }
}

[part~='secondary'] {
    animation: indeterminate-secondary var(--linear-animation-duration) infinite linear;
    left: -54.8888%;

    &::after {
        animation: indeterminate-secondary-scale var(--linear-animation-duration) infinite linear;
        width: 100%;
        height: inherit;
    }
}

[part~='value'] {
    @include type-style('subtitle-2');
}

[part~='counter'] {
    animation: initial-counter var(--_transition-duration) ease-in-out;
    counter-reset:
            progress-integer var(--_progress-integer, 0)
            progress-fraction var(--_progress-fraction, 0);
    transition:
            --_progress-integer var(--_transition-duration) ease-in-out,
            --_progress-fraction var(--_transition-duration) ease-in-out;
    display: block;

    &::before {
        // fix safari bug with label jumping
        @include type-style('subtitle-2');
    }
}

[part~='counter']:not([part~='fraction']) {
    &::before {
        content: counter(progress-integer) '%';
    }
}

[part~='counter'][part~='fraction'] {
    &::before {
        content: counter(progress-integer) "." counter(progress-fraction, decimal-leading-zero) '%';
    }
}

// Label Positions
:host([label-align='top']),
:host([label-align='top-start']),
:host([label-align='top-end']) {
    [part~='label'] {
        order: -1;
    }
}

:host([label-align='top-start']),
:host([label-align='bottom-start']),
:host([label-align='start']) {
    [part~='label'] {
        align-self: flex-start;
    }
}

:host([label-align='bottom-end']),
:host([label-align='top-end']),
:host([label-align='end']) {
    [part~='label'] {
        align-self: flex-end;
    }
}

:host([label-align='top']),
:host([label-align='bottom']) {
    [part~='label'] {
        align-self: center;
    }
}

[part~='hidden'] {
    display: none;
}
