@use '../../styles/common/component';
@use '../../styles/utilities' as *;
@use 'base' as *;

:host {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-family: var(--igc-font-family);
    color: $text-color;

    --stroke-thicknes: 4px;
    --size: #{rem(32px)};
}

[part~='custom_label'] {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    transform: translate(-50%, -50%);
    top: 50%;
    left: 50%;
    color: inherit;
}

[part~='wrapper'] {
    display: inline-flex;
    position: relative;
    flex: 1 1 auto;
    width: var(--size);
    height: var(--size);
}

[part~='indeterminate'] {
    transform-origin: 50% 50%;
    animation: 3s linear 0s infinite normal none running rotate-center;
}

[part~='svg'] {
    width: 100%;
    height: 100%;
    min-width: inherit;
    min-height: inherit;
}

[part~='inner'] {
    stroke: $track-color;
}

[part~='outer'] {
    stroke-dashoffset: 289;
    stroke-dasharray: 289;
    transform-origin: 50% 50%;
    transform: rotate(-90deg);
}

[part~='inner'],
[part~='outer'] {
    fill: transparent;
    stroke-width: var(--stroke-thicknes);
    cx: 50;
    cy: 50;
    r: calc(49px - var(--stroke-thicknes) / 2);
}

[part~='gradient_start'] {
    stop-color: $fill-color;
}

[part~='gradient_end'] {
    stop-color: $fill-color;
}

[part~='text'] {
    font-size: rem(32px);
    font-weight: 600;
    fill: $text-color;
}

[part~='indeterminate'] [part~='outer'] {
    stroke-dasharray: 289;
    animation: 1.5s cubic-bezier(0, .085, .68, .53) 0s infinite normal none running indeterminate-accordion;
}
