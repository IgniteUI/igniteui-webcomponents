@use 'sass:map';
@use '../../../../styles/common/component';
@use '../../../../styles/utilities/index' as *;

$schema: extend(
    (
        name: 'igc-switch'
    ),
    map.get($light-indigo-schema, 'switch')
);
$theme: digest-schema($schema);

// border-color,
// border-hover-color,
// border-disabled-color,
// border-on-color,
// border-on-hover-color,
// thumb-on-color
// track-on-color
// thumb-off-color
// track-disabled-color
// track-on-disabled-color
// track-off-color
// thumb-disabled-color
// thumb-on-disabled-color
// label-color
// label-disabled-color
// label-invalid-color
// track-error-color
// error-color
// error-color-hover

$checked-color: var-get($theme, 'track-on-color') !default;
$border-width: rem(1px);

:host {
    --size: #{rem(34px)};
    --thumb-size: #{rem(8px)};
    --thumb-offset: #{rem(3px)};
    --label-gap: #{rem(8px)};

    @include css-vars($theme);

    font-weight: 600;
}

[part~='base'] {
    &:hover {
        [part~='control'][part~='checked'] {
            border-color: var-get($theme, 'border-hover-color');
        }
    }
}

[part~='control'][part~='focused'] {
    box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');
}

[part~='control'][part~='checked'][part~='focused'] {
    box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-focused');
}

[part~='control'] {
    @include border-radius(var-get($theme, 'border-radius-track'));

    width: var(--size);
    height: rem(16px);
    border: rem(2px) solid var-get($theme, 'border-color');
    background: var-get($theme, 'track-off-color');
}

:host(:not([disabled])) {
    [part~='control'][part~='checked'] {
        border-color: var-get($theme, 'border-on-color');
        background: $checked-color;
        box-shadow: inset 0 0 0 rem(2px) $checked-color;
    }
}

[part~='thumb'] {
    @include border-radius(var-get($theme, 'border-radius-thumb'));

    width: var(--thumb-size);
    height: var(--thumb-size);
    min-width: var(--thumb-size);
    background: var-get($theme, 'thumb-off-color');
}

[part~='thumb']:not([part~='checked']) {
    margin-inline-start: var(--thumb-offset);
}

[part~='thumb'][part~='checked'] {
    background: var-get($theme, 'thumb-on-color');
    margin-inline-start: calc(100% - var(--thumb-size) - var(--thumb-offset));
}

[part~='label'] {
    @include type-style('subtitle-1');

    color: var-get($theme, 'label-color');
    transition: all .2s ease-in-out;
}

:host(:not([disabled])[invalid]) [part~='control'][part~='checked'] {
    border-color: var-get($theme, 'error-color');
}

:host(:not([disabled])[invalid]) [part~='control'][part~='checked'],
:host(:not([disabled])[invalid]) [part~='thumb'] {
    background: var-get($theme, 'error-color');
}

:host(:not([disabled])[invalid]:hover) [part~='control'] {
    box-shadow: 0 0 0 2px var-get($theme, 'error-color-hover');
}

:host(:not([disabled])[invalid]:focus-within) [part~='control'],
:host(:not([disabled])[invalid]:focus-within) [part~='control'][part~='checked'] {
    box-shadow: 0 0 0 2px var-get($theme, 'error-color-hover');
}

:host(:not([disabled])[invalid]) {
    [part~='control'] {
        background: var-get($theme, 'track-error-color');
    }

    [part~='thumb'] {
        background: var-get($theme, 'error-color');
    }

    [part~='thumb'][part~='checked'] {
        background: var-get($theme, 'error-color');
    }

    [part~='label'] {
        color: var-get($theme, 'label-invalid-color');
    }
}

:host([disabled]),
:host([disabled][invalid]) {
    [part~='control'] {
        border-color: var-get($theme, 'border-disabled-color');
        background: var-get($theme, 'track-disabled-color');
    }

    [part~='control'][part~='checked'] {
        border-color: var-get($theme, 'border-disabled-color');
        background: var-get($theme, 'track-on-disabled-color');
    }

    [part~='thumb'] {
        background: var-get($theme, 'thumb-disabled-color');
    }

    [part~='thumb'][part~='checked'] {
        background: var-get($theme, 'thumb-on-disabled-color');
    }
}

:host([disabled]) [part~='label'] {
    color: var-get($theme, 'label-disabled-color');
}

