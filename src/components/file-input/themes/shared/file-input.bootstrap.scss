@use 'styles/utilities' as *;
@use '../../../input/themes/light/themes' as *;
@use '../light/themes' as file-input;

$theme: $bootstrap;
$theme-file-input: file-input.$bootstrap;

:host(:focus-within) {
    --border-color: #{var-get($theme, 'focused-border-color')};

    [part~='container'] {
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'focused-secondary-color');
    }
}

[part~='file-selector-button'] igc-button {
    &::part(base) {
        font-size: var(--input-font);
        transition: border 0.15s ease-out;
        box-shadow: none;
        border: {
            style: solid;
            color: var(--input-border-color);
            inline: {
                start-width: 1px;
                end-width: 0;
            }
            block: {
                start-width: 1px;
                end-width: 1px;
            }
        }
    }
}

[part~='file-names'] {
    font-size: var(--input-font);
    padding-inline: pad-inline(8px, 12px, 16px);
    padding-block: pad-block(4px, 6px, 8px);
    border: 1px solid var-get($theme, 'border-color');
    border-start-end-radius: var-get($theme, 'border-border-radius');
    border-end-end-radius: var-get($theme, 'border-border-radius');
    transition:
        box-shadow 0.15s ease-out,
        border 0.15s ease-out;
}

[part*='prefixed'] {
    [part~='file-selector-button'] igc-button::part(base) {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
    }
}

[part*='suffixed'] {
    [part~='file-names'] {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
    }
}

[part~='container'] {
    transition:
        box-shadow 0.15s ease-out,
        border 0.15s ease-out;

    [part~='file-selector-button'] igc-button::part(base) {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
        height: var(--input-height);
    }
}


:host(:not([disabled]):state(ig-invalid)) {
    --input-border-color: #{var-get($theme, 'error-secondary-color')};

    [part='prefix'],
    [part='suffix'],
    [part~='file-names'] {
        border-color: var-get($theme, 'error-secondary-color');
    }

		[part~='prefixed'] ::slotted([slot='prefix']) {
	      border-inline-start-color: var(--error-secondary-color);
	  }

	  [part~='suffixed'] ::slotted([slot='suffix']) {
	      border-inline-end-color: var(--error-secondary-color);
	  }
}

:host(:not([disabled]):state(ig-invalid):focus-within) {
    [part~='container'] {
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'error-shadow-color');
    }
}

:host(:disabled),
:host([disabled]) {
    --input-border-color: #{var-get($theme, 'disabled-border-color')};

    [part~='file-names'] {
        color: var-get($theme-file-input, 'file-names-foreground--disabled');
        border-color: var-get($theme, 'disabled-border-color');
    }

    [part~='file-selector-button'] igc-button {
        --disabled-border-color: var(--input-border-color);
    }
}
