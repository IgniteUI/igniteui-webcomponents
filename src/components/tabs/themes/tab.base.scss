@use 'styles/common/component';
@use 'styles/utilities' as *;
@use 'tabs.common' as *;
@use 'sass:map';

[part~='tab-header'] {
    $transition: .3s $tabs-animation-function;

    display: flex;
    scroll-snap-align: var(--_ig-tab-snap);
    flex-direction: column;
    align-items: center;
    flex-shrink: 0;
    text-align: center;
    justify-content: center;
    pointer-events: all;
    height: 100%;
    max-width: var(--tab-max-width--justify, $tab-max-width);
    min-width: $tab-min-width;
    cursor: pointer;
    position: relative;
    z-index: map.get($tabs-z-index, 'header');
    grid-row: 1;
    word-break: break-word;
    transition:
        background-color $transition,
        color $transition;

    ::slotted(igc-icon) {
        transition: color $transition;
    }

    &:focus-within {
        outline-color: transparent;
    }
}

[part='base'] {
    display: flex;
    grid-row: var(--header-bottom, 1);
    align-items: center;
    justify-content: center;
    gap: rem(8px);
    user-select: none;
    outline-style: none;
}

[part~='content'] {
    @include line-clamp(2, true, true);

    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center;
    outline-style: none;
    gap: rem(8px);
    flex: 1;

    ::slotted(*) {
        @include line-clamp(2, true, true);
    }

    ::slotted(igc-icon) {
        display: flex;
    }
}

[part~='tab-body'] {
    display: none;
    position: sticky;
    inset-inline-start: 0;
    width: 100%;
    height: 100%;
    grid-row: 3;
    grid-column: 1 / -1;

    // The value of --_ig-tabs-width is calculated in TypeScript and represents the width of the ig-tabs component
    max-width: var(--_ig-tabs-width);
    transition: transform 250ms ease-in-out;
}

:host([selected]) {
    [part~='tab-body'] {
        display: block;
        transform: translateX(0);
    }
}

:host([disabled]) {
    [part='tab-header'] {
        pointer-events: none;
        cursor: initial;
    }
}

