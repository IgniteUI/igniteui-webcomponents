@use 'styles/utilities' as *;
@use '../../light/switch/themes' as *;

$theme: $bootstrap;

:host {
    --size: #{rem(32px)};
    --thumb-size: #{rem(10px)};
    --border-size: #{rem(1px)};
    --thumb-offset: #{rem(2px)};
    --label-gap: #{rem(8px)};
}

[part~='label'] {
    @include type-style('body-1');
}

[part~='focused'] {
    [part~='thumb']:not([part~='checked']) {
        background: var-get($theme, 'focus-fill-color');
    }

    &[part~='control'] {
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'focus-outline-color');
        border-color: var-get($theme, 'focus-fill-color')
    }
}

[part~='control'] {
    border-radius: var-get($theme, 'border-radius-track');
    width: var(--size);
    height: rem(16px);
    border: var(--border-size) solid var-get($theme, 'border-color');
    background: var-get($theme, 'track-off-color');
    transition: all .2s ease-in-out;
}

[part~='control'][part~='checked'] {
    background: var-get($theme, 'track-on-color');
    border-color: var-get($theme, 'border-on-color');
}

[part~='thumb'] {
    border-radius: var-get($theme, 'border-radius-thumb');
    width: var(--thumb-size);
    height: var(--thumb-size);
    min-width: var(--thumb-size);
    margin-inline-start: var(--thumb-offset);
    background: color(gray, 400);
}

[part~='thumb'][part~='checked'] {
    background: var-get($theme, 'thumb-on-color');
    margin-inline-start: calc(var(--size) - var(--thumb-size) - var(--thumb-offset) - (var(--border-size) * 2));
}

:host(:not([disabled]):hover),
:host(:not(:disabled):hover)  {
    [part~='control'] {
        border-color: var-get($theme, 'border-hover-color');
    }

    [part~='control'][part~='checked'] {
        background: var-get($theme, 'track-on-hover-color');
        border-color: var-get($theme, 'border-on-hover-color');
    }

    [part~='thumb'] {
        background: var-get($theme, 'border-hover-color');
    }

    [part~='thumb'][part~='checked'] {
        background: var-get($theme, 'thumb-on-color');
    }

    [part~='focused']:not([part~='checked']) {
        [part~='thumb'] {
            background: var-get($theme, 'focus-fill-hover-color');
        }

        &[part~='control'] {
            box-shadow: 0 0 0 rem(4px) var-get($theme, 'focus-outline-color');
            border-color: var-get($theme, 'focus-fill-hover-color');
        }
    }
}

:host(:not([disabled])[invalid]),
:host(:not(:disabled)[invalid]) {
    [part~='control'],
    [part~='control'][part~='checked'] {
        border-color: var-get($theme, 'error-color');
    }

    [part~='control'][part~='checked'],
    [part~='thumb']:not([part~='checked']) {
        background: var-get($theme, 'error-color');
    }

    [part='focused'][part~='control'],
    [part='focused'][part~='control'][part~='checked'] {
        box-shadow: 0 0 0 rem(2px) var-get($theme, 'error-color-hover');
    }
}

:host([disabled]) {
    [part~='control'][part~='checked'] {
        border-color: var-get($theme, 'track-on-disabled-color');
    }
}
