@use 'sass:map';
@use '../../../../../styles/utilities' as *;
@use '../../../../../styles/themes/schemas/fluent/light' as *;

$schema: map.get($light-fluent-schema, 'button', 'icon');
$border-radius: border-radius(map.get($schema, 'border-radius')...);
$theme: digest-schema(extend(
    $schema,
    (
        border-radius: $border-radius
    )
));
$text-color: var(--text-color, #{contrast-color(primary, 600)}) !default;
$hover-background: var(--hover-background, #{color(primary, 600)}) !default;
$outline-btn-indent: rem(2px);

:host {
    @include css-vars-from-theme($theme, 'ig-button');

    ::slotted(igc-ripple) {
        border-radius: var-get($theme, 'border-radius');
    }
}

[part='base'] {
    border-radius: var-get($theme, 'border-radius');
    background: transparent;
    color: color(primary, 500);
    transition: color .15s ease-out, background .15s ease-out;
    box-shadow: none;
    width: var-get($theme, 'size');
    height: var-get($theme, 'size');
    padding: pad(4px, 6px, 7px);

    &::after {
        position: absolute;
        content: '';
        pointer-events: none;
        top: 2px;
        left: 2px;
        width: calc(100% - (#{$outline-btn-indent} * 2));
        height: calc(100% - (#{$outline-btn-indent} * 2));
        border-radius: calc(#{var-get($theme, 'border-radius')} - #{$outline-btn-indent * 2});
    }

    &:hover {
        color: color(primary, 500);
        background: color(gray, 200);
    }

    &:active {
        color: color(primary, 500);
        background: color(gray, 300);
    }

    &:focus-visible::after {
        box-shadow: 0 0 0 rem(1px) color(gray, 500);
    }

    igc-icon {
        color: color(primary, 500);
    }
}

:host([variant='contained']) {
    [part='base'] {
        color: $text-color;
        background: color(primary, 500);

        &:hover {
            background: $hover-background;
        }

        &:active {
            color: contrast-color(primary, 800);
            background: color(primary, 800);
        }

        &:focus-visible::after {
            box-shadow: 0 0 0 rem(1px) contrast-color(primary, 600);
        }
    }

    igc-icon {
        color: $text-color;
    }
}

:host([variant='outlined']) {
    [part='base'] {
        color: color(gray, 900);
        box-shadow: 0 0 0 1px color(gray, 700);

        &:focus {
            background: transparent;
        }

        &:hover,
        &:focus:hover {
            background: color(gray, 100);
        }

        &:focus:active {
            background: color(gray, 200);
        }
    }

    igc-icon {
        color: color(gray, 900);
    }
}

:host([disabled]) {
    [part='base'] {
        color: color(gray, 400);
        background: color(gray, 100);
    }

    igc-icon {
        color: color(gray, 400);
    }
}

:host([disabled][variant='contained']),
:host([disabled][variant='outlined']) {
    [part='base'] {
        color: color(gray, 500);
    }

    igc-icon {
        color: color(gray, 500);
    }
}
