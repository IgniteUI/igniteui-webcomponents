@use '../../../../styles/utilities' as *;

$container-background: var(--container-background, color(surface, 500)) !default;
$resting-border-width: rem(1px);
$focused-border-width: rem(2px);
$resting-height: calc(var(--size) - #{($resting-border-width * 2)});
$focused-height: calc(var(--size) - #{($focused-border-width * 2)});

:host([size='large']) {
    --component-size: var(--ig-size, var(--ig-size-large));
}

:host([size='medium']) {
    --component-size: var(--ig-size, var(--ig-size-medium));
}

:host([size='small']) {
    --component-size: var(--ig-size, var(--ig-size-small));
}

:host {
    --size: #{sizable(rem(32px), rem(40px), rem(48px))};

    [part='prefix'],
    [part='suffix'] {
        color: color(gray, 700);
        background: color(gray, 100);
        font-size: rem(14px);
        cursor: default;
    }

    [name='prefix']::slotted(*),
    [name='suffix']::slotted(*) {
        display: inline-flex;
        align-items: center;
        width: max-content;
        height: 100%;
        padding-inline: pad-inline(8px, 12px, 16px);
    }

    [part='prefix'] {
        grid-area: 1 / 1;
    }

    [part='suffix'] {
        grid-area: 1 / 3;
    }

    [part='label'] {
        font-size: rem(14px);
        font-weight: 600;
        color: color(gray, 900);
    }

    [part^='container'] {
        @include border-radius(2px);

        border: #{$resting-border-width} solid color(gray, 500);
        transition: none;
        background: $container-background;
        cursor: text;
        grid-template-columns: auto 1fr auto;
        overflow: hidden;
        height: var(--size);

        &::after {
            background: transparent;
            transform: none;
            height: initial;
        }
    }

    [part~='input'] {
        height: $resting-height;
        background: initial;
        font-size: rem(14px);
        padding: rem(8px);
        max-height: 100%;
        border: none;
        grid-area: 1 / 2;
    }

    [part='helper-text'] {
        padding: 0;
        margin-top: rem(5px);
        color: color(gray, 700);
    }
}

:host(:not([invalid]):hover) {
    [part^='container'] {
        border-color: color(gray, 700);
    }
}

:host(:focus-within) {
    [part^='container'] {
        border-width: #{$focused-border-width};
    }

    [part~='input'] {
        height: $focused-height;
    }

    [part='prefix'] {
        margin-inline-start: rem(-1px);
    }

    [part='suffix'] {
        margin-inline-end: rem(-1px);
    }

    [name='prefix']::slotted(*),
    [name='suffix']::slotted(*) {
        padding-block: pad-block(6px, 8px, 10px);
    }
}

:host(:not([invalid]):focus-within),
:host(:not([invalid]):focus-within:hover) {
    [part^='container'] {
        border-color: color(primary, 500);
    }
}

:host([required]),
:host([outlined][required]) {
    [part='label']::after {
        color: color(error, 500);
    }
}

:host([invalid]),
:host([outlined][invalid]) {
    [part^='container'] {
        border-color: color(error, 500);
    }
}

:host([disabled][outlined][invalid]),
:host(:disabled[outlined][invalid]) {
    [part^='container'] {
        border-color: color(gray, 100);
    }
}

:host([disabled]),
:host(:disabled) {
    pointer-events: none;

    [part^='container'] {
        border-color: color(gray, 100);
        color: color(gray, 400);
    }

    [part^='container'],
    [part='prefix'],
    [part='suffix'] {
        background: color(gray, 100);
    }

    [part='prefix'],
    [part='suffix'],
    [part='label'],
    [part='label']::after,
    [part='helper-text'],
    [part~='input'],
    [part~='input']::placeholder {
        color: color(gray, 500);
    }
}
