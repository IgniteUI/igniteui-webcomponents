@use 'styles/utilities' as *;
@use '../light/themes' as *;
@use '../../../input/themes/light/themes' as input-theme;
@use '../../../dropdown/themes/light/themes' as dropdown-theme;

$theme: $material;
$input-theme: input-theme.$material;
$dropdown-theme: dropdown-theme.$material;

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --combo-size: var(--component-size);

    [part='helper-text'] {
        margin-top: rem(5px);
        padding-inline: pad-inline(rem(14px), rem(16px), rem(18px));
    }

    ::slotted([slot='helper-text']) {
        @include type-style('caption');

        line-height: 1;
    }

    ::slotted([slot='prefix']),
    ::slotted([slot='suffix']) {
        color: inherit;
    }
}

:host(:not([single-select])) {
    > igc-input::part(input) {
        &::selection {
            background: transparent;
        }
    }
}

[part='list-wrapper'] {
    border-radius: var-get($dropdown-theme, 'border-radius');

    igc-input::part(container) {
        background: transparent;
        border-inline-end-color: transparent;
    }

    igc-input::part(input) {
        border-inline-end-color: transparent;

        &::selection {
            background: color(primary, 100);
        }
    }

    [part='case-icon'] {
        color: color(gray, 600);
    }

    [part='case-icon active'] {
        color: color(primary, 500);
    }
}

[part='toggle-icon filled'] {
    color: var-get($theme, 'toggle-button-foreground-filled');
}

:host(:focus-within) {
    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-focus');
    }
}

:host(:not([outlined]):focus-within) {
    > igc-input::part(container) {
        background: var-get($input-theme, 'box-background-focus');
    }
}

:host([outlined]:focus-within) {
    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-focus--border');
    }
}

:host(:disabled[outlined]),
:host([outlined][disabled]),
:host([outlined][invalid]) {
    igc-input::part(filled) + igc-input::part(notch) {
        border-top-color: transparent;
    }
}
