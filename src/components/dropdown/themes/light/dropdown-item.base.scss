@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;

$padding-sm-inline: calc(var(--igc-spacing-small) * 3);
$padding-md-inline: calc(var(--igc-spacing-medium) * 3);
$padding-lg-inline: calc(var(--igc-spacing-large) * 3);
$padding-sm-block: var(--igc-spacing-small);
$padding-md-block: var(--igc-spacing-medium);
$padding-lg-block: var(--igc-spacing-large);

:host {
    @include type-style('body-2');

    --spacing-inline: #{sizable($padding-sm-inline, $padding-md-inline, $padding-lg-inline)};
    --spacing-block: #{sizable($padding-sm-block, $padding-md-block, $padding-lg-block)};

    display: flex;
    justify-content: flex-start;
    align-items: center;
    width: 100%;
    white-space: nowrap;
    position: relative;
    cursor: pointer;
    color: color(gray, 800);
    outline-style: none;
    padding-inline: var(--spacing-inline);
    padding-block: var(--spacing-block);
}

:host(:hover),
:host([active]) {
    background: color(gray, 200);
}

:host([selected]) {
    background: color(secondary, 100);
    color: contrast-color(secondary, 100);
}

:host([selected]:hover),
:host([selected][active]) {
    background: color(secondary, 200);
    color: contrast-color(secondary, 200);
}

:host([disabled]) {
    color: color(gray, 500);
    cursor: default;
    pointer-events: none;
}

::slotted(*) {
    font: inherit;
}

[part='content'] {
    @include ellipsis();

    display: block;
    width: 100%;
    align-items: center;
}

[part='prefix'],
[part='suffix'] {
    display: flex;
    align-items: center;
    justify-content: center;
}

[name='prefix']::slotted(*) {
    margin-inline-end: calc(var(--igc-spacing-large) * 2);
}

[name='suffix']::slotted(*) {
    margin-inline-start: calc(var(--igc-spacing-large) * 2);
}
