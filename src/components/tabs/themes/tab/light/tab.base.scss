@use '../../../../../styles/common/component';
@use '../../../../../styles/utilities' as *;

:host {
    // Header idle
    --header-background: #{color(surface, 500)};
    --header-foreground: #{color(gray, 700)};
    --header-background--hover: #{color(gray, 200)};
    --header-foreground--hover: var(--header-foreground);
    --header-foreground--focus-within: #{color(primary, 500)};

    // Header Selected
    --header-background--selected: var(--header-background);
    --header-foreground--selected: #{color(primary, 500)};
    --header-background--selected--hover: var(--header-background--hover);
    --header-foreground--selected--hover: var(--header-foreground--selected);

    // Header Disabled
    --header-background--disabled: #{color(primary, 500, .5)};
    --header-foreground--disabled: #{color(gray, 500)};

    // Body
    --body-background: transparent;
    --body-foreground: #{color(gray, 700)};
}

[part~='header'] {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex-shrink: 0;
    justify-content: var(--header-content, flex-start);
    height: 100%;
    word-wrap: break-word;
    padding: rem(12px) rem(16px);
    overflow: hidden;
    max-width: var(--tab-max-width, rem(360px));
    min-width: rem(90px);
    pointer-events: all;
    cursor: pointer;
    position: relative;
    user-select: none;
    background: var(--header-background);
    color: var(--header-foreground);

    &:hover,
    &:focus-within {
        background: var(--header-background--hover);
    }

    &:hover {
        color: var(--header-foreground--hover);
    }

    &:focus-within {
        outline: none;
        color: var(--header-foreground--focus-within);
    }
}

[part='base'] {
    display: flex;
    grid-row: var(--header-bottom, 1);
    align-items: center;
    justify-content: space-between;
    outline-style: none;
    gap: rem(8px);
    pointer-events: none;

    ::slotted(igc-icon) {
        --size: #{rem(24px)};
    }
}

[part='label'] {
    @include type-style('button');

    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center;
    outline-style: none;

    ::slotted(*) {
        @include line-clamp(2, true, true);
    }

    ::slotted(igc-icon:not(:only-child)) {
        margin-bottom: rem(8px);
    }
}

[part~='body'] {
    display: none;
    position: sticky;
    inset-inline-start: 0;
    background: var(--body-background);
    color: var(--body-foreground);

    // TODO Set the width of the body to be the width of the stepper.
    width: var(--tabs-width);
    grid-row: 3;
    grid-column: 1 / -1;
    padding: 10px;

    // TODO Dynamically set the translate based on scroll direction.
    transform: translateX(100%);
    transition: transform 250ms ease-in-out;
}

:host([selected]) {
    [part='header'] {
        background: var(--header-background--selected);
        color: var(--header-foreground--selected);

        ::slotted(igc-icon) {
            color: var(--header-foreground--selected);
        }

        &:hover,
        &:focus-within {
            background: var(--header-background--selected--hover);
            color: var(--header-foreground--selected--hover);
        }
    }

    [part~='body'] {
        display: flex;
        transform: translateX(0);
    }
}

:host([disabled]) {
    [part='header'] {
        pointer-events: none;
        cursor: initial;
        color: var(--header-foreground--disabled);
    }
}
