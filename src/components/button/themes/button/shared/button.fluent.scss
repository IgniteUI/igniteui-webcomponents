@use 'styles/utilities' as *;
@use '../light/themes' as *;

$flat-theme: $fluent-flat;
$contained-theme: $fluent-contained;
$fab-theme: $fluent-fab;
$outlined-theme: $fluent-outlined;
$btn-indent: rem(3px);
$outlined-btn-indent: rem(2px);

:host([variant='flat']) {
    --component-size: var(--ig-size, #{var-get($flat-theme, 'default-size')});
}

:host([variant='outlined']) {
    --component-size: var(--ig-size, #{var-get($outlined-theme, 'default-size')});
}

:host([variant='contained']) {
    --component-size: var(--ig-size, #{var-get($contained-theme, 'default-size')});
}

:host([variant='fab']) {
    --component-size: var(--ig-size, #{var-get($fab-theme, 'default-size')});

    [part='base'] {
        &::after {
            border-radius: calc(#{var-get($fab-theme, 'border-radius')} - #{$btn-indent});
        }
    }
}

[part='base'] {
    padding: 0 pad(8px, 12px, 16px);
    transition: all .1s ease-in-out;

    &:focus-visible::after {
        content: '';
        position: absolute;
        inset-block-start: $btn-indent;
        inset-inline-start: $btn-indent;
        pointer-events: none;
        width: calc(100% - (#{$btn-indent} * 2));
        height: calc(100% - (#{$btn-indent} * 2));
    }
}

:host(:not([disabled])[variant='flat']) [part='base'],
:host(:not(:disabled)[variant='flat']) [part='base'] {
    &:focus-visible {
        &::after {
            box-shadow: 0 0 0 rem(1px) var-get($flat-theme, 'focus-visible-border-color');
        }
    }
}

:host(:not([disabled])[variant='outlined']) [part='base'],
:host(:not(:disabled)[variant='outlined']) [part='base'] {
    border: rem(1px) solid var-get($outlined-theme, 'border-color');

    &:active {
        border-color: var-get($outlined-theme, 'active-border-color');
    }

    &:focus-visible {
        &::after {
            inset-block-start: $outlined-btn-indent;
            inset-inline-start: $outlined-btn-indent;
            width: calc(100% - (#{$outlined-btn-indent} * 2));
            height: calc(100% - (#{$outlined-btn-indent} * 2));
            box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-border-color');
        }

        &:hover {
            color: var-get($outlined-theme, 'hover-foreground');
            background: var-get($outlined-theme, 'hover-background');
        }

        &:active {
            color: var-get($outlined-theme, 'active-foreground');
            background: var-get($outlined-theme, 'active-background');
            border-color: var-get($outlined-theme, 'active-border-color');

            &::after {
                box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');
            }
        }
    }
}

:host(:not([disabled])[variant='contained']) [part='base'],
:host(:not(:disabled)[variant='contained']) [part='base'] {
    &:focus-visible {
        color: var-get($contained-theme, 'focus-visible-foreground');
        background: var-get($contained-theme, 'focus-visible-background');
        position: relative;

        &::after {
            box-shadow: 0 0 0 1px var-get($contained-theme, 'focus-visible-foreground');
        }

        &:hover {
            color: var-get($contained-theme, 'hover-foreground');
            background: var-get($contained-theme, 'hover-background');
        }

        &:active {
            color: var-get($contained-theme, 'active-foreground');
            background: var-get($contained-theme, 'active-background');
        }
    }
}

:host(:not([disabled])[variant='fab']) [part='base'],
:host(:not(:disabled)[variant='fab']) [part='base'] {
    &:focus-visible {
        color: var-get($fab-theme, 'focus-visible-foreground');
        background: var-get($fab-theme, 'focus-visible-background');
        position: relative;

        &::after {
            box-shadow: 0 0 0 1px var-get($fab-theme, 'focus-visible-foreground');
        }

        &:hover {
            color: var-get($fab-theme, 'hover-foreground');
            background: var-get($fab-theme, 'hover-background');
        }

        &:active {
            color: var-get($fab-theme, 'active-foreground');
            background: var-get($fab-theme, 'active-background');
        }
    }
}
