@use 'sass:map';
@use 'styles/common/component';
@use 'styles/utilities' as *;
@use 'switch-themes' as *;

$theme: $bootstrap;

:host {
    --size: #{rem(32px)};
    --thumb-size: #{rem(10px)};
    --border-size: #{rem(1px)};
    --thumb-offset: #{rem(2px)};
    --label-gap: #{rem(8px)};

    @include css-vars-from-theme($theme, 'ig-switch');
}

[part~='focused'] {
    [part~='thumb']:not([part~='checked']) {
        background: var-get($theme, 'focus-fill-color');
    }
}

[part~='focused'][part~='control'] {
    box-shadow: 0 0 0 rem(2px) color(primary, 100);
    border-color: var-get($theme, 'focus-fill-color')
}

[part~='focused'][part~='control'][part~='checked'] {
    box-shadow: 0 0 0 rem(2px) color(primary, 200);
}

[part~='control'] {
    border-radius: var-get($theme, 'border-radius-track');
    width: var(--size);
    height: rem(16px);
    border: var(--border-size) solid var-get($theme, 'border-color');
    background: var-get($theme, 'track-off-color');
    transition: all .2s ease-in-out;
}

[part~='control'][part~='checked'] {
    background: var-get($theme, 'track-on-color');
    border-color: var-get($theme, 'border-on-color');
}

[part~='thumb'] {
    border-radius: var-get($theme, 'border-radius-thumb');
    width: var(--thumb-size);
    height: var(--thumb-size);
    min-width: var(--thumb-size);
    margin-inline-start: var(--thumb-offset);
    background: color(gray, 400);
}

[part~='thumb'][part~='checked'] {
    background: var-get($theme, 'thumb-on-color');
    margin-inline-start: calc(var(--size) - var(--thumb-size) - var(--thumb-offset) - (var(--border-size) * 2));
}

[part~='label'] {
    @include type-style('subtitle-1');

    color: color(gray, 900);
}

:host(:not([disabled])[invalid]),
:host(:not(:disabled)[invalid]) {
    [part~='control'],
    [part~='control'][part~='checked'] {
        border-color: var-get($theme, 'error-color');
    }

    [part~='control'][part~='checked'],
    [part~='thumb']:not([part~='checked']) {
        background: var-get($theme, 'error-color');
    }

    [part='focused'][part~='control'],
    [part='focused'][part~='control'][part~='checked'] {
        box-shadow: 0 0 0 rem(2px) var-get($theme, 'error-color-hover');
    }

    [part~='label'] {
        color: var-get($theme, 'label-invalid-color');
    }
}

:host([disabled]) {
    [part~='control'] {
        background: var-get($theme, 'track-disabled-color');
        border-color: var-get($theme, 'border-disabled-color');
    }

    [part~='control'][part~='checked'] {
        background: var-get($theme, 'track-on-disabled-color');
        border-color: var-get($theme, 'track-on-disabled-color');
    }

    [part~='thumb'] {
        background: var-get($theme, 'thumb-disabled-color');
    }

    [part~='thumb'][part~='checked'] {
        background: var-get($theme, 'thumb-on-disabled-color');
    }

    [part~='label'] {
        color: var-get($theme, 'label-disabled-color');
    }
}
