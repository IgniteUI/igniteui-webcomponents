@use 'styles/utilities' as *;
@use '../light/themes' as *;

$theme: $bootstrap;

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --input-size: var(--component-size);
    --font: #{sizable(rem(14px), rem(16px), rem(20px))};
    --input-font: #{sizable(rem(16px), rem(16px), rem(20px))};
    --input-border-color: #{var-get($theme, 'border-color')};
    --input-height: #{var-get($theme, 'size')};

    ::part(helper-text) {
        @include type-style('body-2');

        color: var-get($theme, 'helper-text-color');
        grid-auto-rows: minmax(rem(20px), auto);
        margin-block-start: rem(4px);
    }
}

:host([type='file']) {
    [part~='container'] {
        transition:
            box-shadow 0.15s ease-out,
            border 0.15s ease-out;
    }
}

:host([type='file']:focus-within) {
    --border-color: #{var-get($theme, 'focused-border-color')};

    [part~='container'] {
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'focused-secondary-color');
    }
}

[part~='container'] {
    border-radius: var-get($theme, 'border-border-radius');
    border-style: none;
    grid-template-columns: auto 1fr auto;

    [part~='file-selector-button'] igc-button::part(base) {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
        height: var(--input-height);
    }

    &::after {
        display: none;
    }
}

[part~='file-selector-button'] igc-button {
    --foreground: #{var-get($theme, 'input-prefix-color')};
    --background: #{var-get($theme, 'input-prefix-background')};
    --hover-foreground: var(--foreground);
    --hover-background: var(--background);
    --active-foreground: var(--foreground);
    --active-background: var(--background);
    --focus-visible-foreground: var(--foreground);
    --focus-visible-background: var(--background);
    --disabled-foreground: #{var-get($theme, 'disabled-text-color')};
    --disabled-background: #{var-get($theme, 'border-disabled-background')};

    &::part(base) {
        font-size: var(--input-font);
        transition: border 0.15s ease-out;
        box-shadow: none;
        border: {
            style: solid;
            color: var(--input-border-color);
            inline: {
                start-width: 1px;
                end-width: 0;
            }
            block: {
                start-width: 1px;
                end-width: 1px;
            }
        }
    }
}

[part~='file-names'] {
    font-size: var(--input-font);
    padding-inline: pad-inline(8px, 12px, 16px);
    padding-block: pad-block(4px, 6px, 8px);
    color: var-get($theme, 'idle-text-color');
    border: 1px solid var-get($theme, 'border-color');
    border-start-end-radius: var-get($theme, 'border-border-radius');
    border-end-end-radius: var-get($theme, 'border-border-radius');
    transition:
        box-shadow 0.15s ease-out,
        border 0.15s ease-out;
}

[part*='prefixed'] {
    [part~='file-selector-button'] igc-button::part(base) {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
    }
}

[part*='suffixed'] {
    [part~='file-names'] {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
    }
}

[part~='input'] {
    border-radius: var-get($theme, 'border-border-radius');
    font-size: var(--input-font);
    padding-inline: pad-inline(8px, 12px, 16px);
    padding-block: pad-block(4px, 6px, 8px);
    color: var-get($theme, 'idle-text-color');
    background: transparent;
    box-shadow: none;
    z-index: 1;
    border: 1px solid var-get($theme, 'border-color');
    transition:
        box-shadow 0.15s ease-out,
        border 0.15s ease-out;
    grid-area: 1 / 2;
    background-clip: padding-box;
}

[part~='input'],
[part~='container'] {
    height: var-get($theme, 'size');
}

[part*='input prefixed'] {
    border-start-start-radius: 0;
    border-end-start-radius: 0;
}

[part*='input suffixed'] {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
}

[part*='input prefixed suffixed'] {
    border-radius: 0;
}

[part~='label'],
[part~='input']::placeholder {
    @include type-style('body-1');
}

[part~='label'] {
    margin-block-end: rem(4px);
    color: var-get($theme, 'idle-secondary-color');

    &:empty {
        display: none;
    }
}

[name='prefix']::slotted(*),
[name='suffix']::slotted(*) {
    display: inline-flex;
    align-items: center;
    width: max-content;
    height: 100%;
    padding-inline: pad-inline(8px, 12px, 16px);
}

[part='prefix'],
[part='suffix'] {
    position: relative;
    border-radius: none;
    min-width: auto;
    transition:
        box-shadow 0.15s ease-out,
        border 0.15s ease-out;
    font-size: var(--font);

    ::slotted(*) {
        color: inherit;
    }
}

[part='prefix'] {
    border-start-start-radius: inherit;
    border-end-start-radius: inherit;
    grid-area: 1 / 1;
    border: {
        style: solid;
        color: var-get($theme, 'border-color');
        inline: {
            start-width: 1px;
            end-width: 0;
        }
        block: {
            start-width: 1px;
            end-width: 1px;
        }
    }
}

[part='suffix'] {
    border-start-end-radius: inherit;
    border-end-end-radius: inherit;
    grid-area: 1 / 3;
    border: {
        style: solid;
        color: var-get($theme, 'border-color');
        inline: {
            start-width: 0;
            end-width: 1px;
        }
        block: {
            start-width: 1px;
            end-width: 1px;
        }
    }
}

:host(:focus-within) {
    [part~='input'] {
        color: var-get($theme, 'input-prefix-color--focused');
        border-color: var-get($theme, 'focused-border-color');
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'focused-secondary-color');
    }
}

[part~='filled'] {
    [part~='input'] {
        color: var-get($theme, 'input-prefix-color--filled');
    }
}

[part~='prefixed'] [part='prefix'],
[part~='suffixed'] [part='suffix'] {
    ::slotted(*) {
        color: inherit;
    }
}

:host(:not([disabled])[invalid]),
:host(:not([disabled])[invalid]:focus-within) {
    [part~='input'] {
        border-color: var-get($theme, 'error-secondary-color');
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'error-shadow-color');
    }
}

:host(:not([disabled])[invalid][type='file']) {
    --input-border-color: #{var-get($theme, 'error-secondary-color')};

    [part~='container'] {
        box-shadow: 0 0 0 rem(4px) var-get($theme, 'error-shadow-color');
    }

    [part='prefix'],
    [part='suffix'],
    [part~='file-names'] {
        border-color: var-get($theme, 'error-secondary-color');
    }
}

:host(:disabled),
:host([disabled]) {
    --input-border-color: #{var-get($theme, 'disabled-border-color')};

    [part='prefix'],
    [part='suffix'],
    [part~='input'],
    [part~='file-names'] {
        color: var-get($theme, 'disabled-text-color');
        background: var-get($theme, 'border-disabled-background');
        border-block-color: var-get($theme, 'disabled-border-color');
    }

    [part='prefix'] {
        border-inline-start-color: var-get($theme, 'disabled-border-color');
    }

    [part='suffix'] {
        border-inline-end-color: var-get($theme, 'disabled-border-color');
    }

    [part~='input'],
    [part~='file-names'] {
        border-color: var-get($theme, 'disabled-border-color');
    }

    [part='label'],
    ::part(helper-text) {
        color: var-get($theme, 'disabled-text-color');
    }

    [part~='file-selector-button'] igc-button {
        --disabled-border-color: var(--input-border-color);
    }
}
