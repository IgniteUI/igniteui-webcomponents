@use '../../../../styles/utilities' as *;

[part~='control'] {
    @include border-radius(rem(4px));

    --size: #{rem(16px)};

    width: var(--size);
    height: var(--size);
    min-width: var(--size);
    transition: background-color .15s ease-in-out;

    &::after {
        width: inherit;
        height: inherit;
        min-width: inherit;
        border-radius: inherit;
        border: none;
        box-shadow: inset 0 0 0 1px color(gray, 400);
        transition: none;
    }
}

[part~='indicator'] {
    stroke-width: 3;
    transform: scale(.7);
    transition: none;
    stroke: white;
}

[part~='label'] {
    @include type-style('body-2');

    transition: none;
}

:host([indeterminate]) [part='indicator'] {
    transform: rotate(45deg) translateX(-.075rem) scale(.7);
}

:host(:focus-within) [part~='control'] {
    box-shadow: 0 0 0 4px color(primary, 100);

    &::after {
        box-shadow: inset 0 0 0 1px color(primary, 500);
    }
}

[part='control checked'],
:host([indeterminate]) [part~='control'] {
    &::after {
        background: color(primary, 500);
        box-shadow: inset 0 0 0 1px color(primary, 500);
    }
}

:host([invalid]) [part='control'] {
    &::after {
        box-shadow: inset 0 0 0 1px color(error, 500);
    }
}

:host([invalid]) [part='control checked'],
:host([invalid][indeterminate]) [part='control'] {
    &::after {
        box-shadow: inset 0 0 0 1px color(error, 500);
    }
}

:host([invalid]:focus-within) [part='control'],
:host([invalid]:focus-within) [part='control checked'],
:host([invalid][indeterminate]:focus-within) [part='control'] {
    box-shadow: 0 0 0 4px color(error, 100);
}

:host([disabled]) [part='control'],
:host([disabled][invalid]) [part='control'] {
    &::after {
        box-shadow: inset 0 0 0 1px color(gray, 300);
    }
}

:host([disabled]),
:host([disabled][invalid]) {
    [part='control checked']::after {
        background: color(primary, 200);
        box-shadow: inset 0 0 0 1px color(primary, 200);
    }
}

:host([disabled][indeterminate]),
:host([disabled][invalid][indeterminate]) {
    [part='control']::after {
        background: color(primary, 200);
        box-shadow: inset 0 0 0 1px color(primary, 200);
    }
}
