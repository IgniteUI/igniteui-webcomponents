@use 'sass:map';
@use '../../styles/common/component';
@use '../../styles/utilities' as *;

:host {
    --symbol-full-color: #{color(warn)};
    --symbol-empty-color: #{color(gray, 600)};

    display: inline-flex;
    font-family: var(--ig-font-family);
    align-items: flex-start;
    flex-direction: column;
    gap: rem(4px);
}

@each $s in 'small', 'medium', 'large' {
    $size: map.get(
        (
            small: rem(18px),
            medium: rem(24px),
            large: rem(36px)
        ),
        $s
    );

    :host([size='#{$s}']) {
        --symbol-size: #{$size};
    }
}

[part='base'] {
    position: relative;
    display: flex;
    align-items: center;
    user-select: none;
    flex-wrap: wrap;
    gap: rem(4px);
}

[part~='symbols'] {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: rem(2px);
    gap: rem(2px);
    inset-inline-start: 0;
}

[part~='value-label'] {
    @include type-style('subtitle-1');

    color: color(gray, 900);
}

[part~='label'] {
    @include type-style('caption');

    color: color(gray, 700);
    padding-inline-start: rem(4px);
    height: auto;
    width: auto;
    min-height: 0;
    min-width: 0;
    margin: 0;
}

:host(:not([disabled], [readonly])) {
    [part~='symbols'] {
        cursor: pointer;
    }
}

:host([disabled]) {
    [part~='value-label'],
    [part~='label'] {
        color: color(gray, 400);
    }

    --symbol-full-color: #{color(warn, 200)};
    --symbol-empty-color: #{color(gray, 400)};
    --symbol-full-filter: grayscale(50%);
    --symbol-empty-filter: grayscale(100%) opacity(50%);

    [part~='symbols'] {
        cursor: initial;
    }
}
