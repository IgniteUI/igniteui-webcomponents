@use 'styles/common/component';
@use 'styles/utilities' as *;
@use './light/themes' as *;

$theme: $material;

:host {
    --lines-clamped: 1;

    width: auto;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    color: var-get($theme, 'body-color');
    background: var-get($theme, 'body-background');
    border-radius: var-get($theme, 'border-radius');
}

[part='header'] {
    display: flex;
    align-items: center;
    cursor: pointer;
    padding-inline: pad-inline(24px);
    padding-block: pad-block(16px);
    background: var-get($theme, 'header-background');

    &:focus,
    &:active {
        outline: transparent;
        background: var-get($theme, 'header-focus-background');
    }

    *:not([part~='indicator']) {
        display: flex;
        flex-direction: column;
        justify-content: center;
        flex: 1 0 0%;
        overflow: hidden;
        user-select: none;
    }
}

[part='title'] {
    color: var-get($theme, 'header-title-color');

    &::slotted(*) {
        @include type-style('h5');
        @include line-clamp(var(--lines-clamped), true, true);

        margin: 0;
    }
}

[part='subtitle'] {
    color: var-get($theme, 'header-description-color');

    &::slotted(*) {
        @include type-style('subtitle-2');
        @include ellipsis();
    }
}

[part='content'] ::slotted(*) {
    @include type-style('body-2');
}

[part~='content'] {
    overflow: hidden;

    > slot {
        display: block;
        padding-inline: pad-inline(24px);
        padding-block: pad-block(16px);
    }
}

:host(:not([open])) [part~='content'] {
    height: 0;
}

:host([open]) [part~='content'] {
    height: auto;
}

[part~='indicator'] {
    color: var-get($theme, 'header-icon-color');

    igc-icon {
        --ig-size: 3;
    }
}

:host([indicator-position='start']) [part~='indicator'] {
    margin-inline-end: pad(16px);
}

:host([indicator-position='end']) [part~='indicator'] {
    order: 2;
    margin-inline-start: pad(16px);
}

:host([indicator-position='none']) [part~='indicator'] {
    display: none;
}

:host([disabled]) {
    pointer-events: none;

    [part='title'],
    [part='subtitle'],
    [part~='indicator'] {
        color: var-get($theme, 'disabled-color');
    }
}
