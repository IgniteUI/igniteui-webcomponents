@use 'styles/utilities' as *;
@use '../light/themes' as *;
@use '../../vars' as *;
@use '../../shared' as *;
@use '../../animations' as *;

$theme: $material;

[part~='track'] {
    border-radius: var-get($theme, 'track-border-radius');
    background: var-get($theme, 'track-color');
}

[part~='value'] {
    color: var-get($theme, 'text-color');
}

// Mixin for base background styles
@mixin background-styles($part, $color-key) {
    [part~='#{$part}']:not([part~='indeterminate']) {
        background-color: var-get($theme, $color-key);
    }
    [part~='#{$part}'] {
        &::after {
            background-color: var-get($theme, $color-key);
        }
    }
}

// Mixin for striped styles
@mixin striped-styles($part, $color-key) {
    [part~='striped'][part~='#{$part}']:not([part~='indeterminate']) {
        @include stripe-colors(var-get($theme, $color-key), var-get($theme, 'stripes-color'), $stripe-size, -45deg);
    }
    [part~='striped'][part~='#{$part}'] {
        &::after {
            @include stripe-colors(var-get($theme, $color-key), var-get($theme, 'stripes-color'), $stripe-size, -45deg);
        }
    }
}

// Apply styles for different parts
@each $part, $color-key in (
    'primary': 'fill-color-default',
    'danger': 'fill-color-danger',
    'warning': 'fill-color-warning',
    'info': 'fill-color-info',
    'success': 'fill-color-success'
) {
    @include background-styles($part, $color-key);
    @include striped-styles($part, $color-key);
}
