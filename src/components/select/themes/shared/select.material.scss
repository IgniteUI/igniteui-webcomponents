@use 'styles/utilities' as *;
@use '../light/themes' as *;
@use '../../../dropdown/themes/light/themes' as dropdown-theme;
@use '../../../input/themes/light/themes' as input-theme;

$theme: $material;
$dropdown-theme: dropdown-theme.$material;
$input-theme: input-theme.$material;
$active-color: var-get($input-theme, 'focused-border-color');
$error-color: var-get($input-theme, 'error-secondary-color');
$idle-border-width: rem(1px) !default;
$active-border-width: rem(2px) !default;

[part='base'] {
    box-shadow: var(--ig-elevation-8);
    padding: rem(8px) 0;
}

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --select-size: var(--component-size);
    --dropdown-size: var(--component-size);
}

:host([outlined]:focus-within) {
    igc-input[readonly]:not([disabled])::part(start) {
        border: {
            color: $active-color;
            inline: {
                start-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            }
        }
    }

    igc-input[readonly]:not([disabled])::part(filler) {
        border: {
            width: $active-border-width;
            color: $active-color;
        }
    }

    igc-input:not([invalid])::part(notch) {
        border-bottom: {
            width: $active-border-width;
            color: $active-color;
        }
    }

    igc-input[readonly]:not([disabled])::part(end) {
        border: {
            color: $active-color;
            inline: {
                end-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            };
        }
    }

    igc-input[readonly]:not([disabled])::part(label) {
        color: $active-color;
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-focus--border');
    }
}

:host([outlined][invalid]:focus-within) {
    igc-input[readonly]:not([disabled])::part(start) {
        border: {
            color: $error-color;
            inline: {
                start-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            }
        }
    }

    igc-input[readonly]:not([disabled])::part(filler) {
        border: {
            width: $active-border-width;
            color: $error-color;
        }
    }

    igc-input[readonly]:not([disabled])::part(end) {
        border: {
            color: $error-color;
            inline: {
                end-width: $active-border-width;
            };
            block: {
                start-width: $active-border-width;
                end-width: $active-border-width;
            };
        }
    }

    igc-input[readonly]:not([disabled])::part(label) {
        color: $error-color;
    }
}

:host(:not([outlined]):focus-within) {
    igc-input::part(container) {
        background: var-get($input-theme, 'box-background-focus');
        border-bottom-color: var-get($input-theme, 'focused-bottom-line-color');
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-focus');
    }
}

:host(:not([outlined])[invalid]:focus-within) {
    igc-input::part(container) {
        border-bottom-color: var-get($input-theme, 'error-secondary-color');
    }
}

[part='toggle-icon filled'] {
    color: var-get($theme, 'toggle-button-foreground-filled');
}


[part='helper-text'] {
    margin-top: rem(5px);
    padding-inline: pad-inline(rem(14px), rem(16px), rem(18px));
}

:host([invalid]) {
    [part='helper-text'] {
        color: var-get($input-theme, 'error-secondary-color');
    }
}

:host([disabled]),
:host(:disabled) {
    igc-input::part(input)::selection {
        background: transparent;
    }
}

:host(:disabled[outlined]),
:host([outlined][disabled]),
:host([outlined][invalid]) {
    igc-input::part(filled) + igc-input::part(notch) {
        border-top-color: transparent;
    }
}
