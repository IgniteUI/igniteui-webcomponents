@use 'styles/utilities' as *;
@use '../../light/themes' as *;

$theme: $material;

%after-element {
    content: '';
    position: absolute;
    pointer-events: none;
    inset: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
}

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --_border-radius: #{var-get($theme, 'border-radius')};
}

[part~='base'] {
    background: var-get($theme, 'tile-background');
    border-radius: var(--_border-radius);
    box-shadow: var-get($theme, 'resting-elevation');

    &::after {
        @extend %after-element;

        border: rem(1px) solid var-get($theme, 'border-color');
    }
}

[part~='base']:not([part~='resizable']) {
    &:hover {
        &::after {
            border: rem(1px) solid var-get($theme, 'hover-border-color');
        }
    }
}

:host([part='resizing']),
:host([part='dragging']) {
    border-radius: var-get($theme, 'border-radius');
}

:host([part='dragging']) {
    background: var-get($theme, 'placeholder-background');
    border: rem(1px) solid var-get($theme, 'ghost-border');
}

[part~='base'][part~='resizing'] {
    opacity: 0.3;
}

[part='content-container'] {
    background: var-get($theme, 'content-background');
    color: var-get($theme, 'content-color');
}

[part='ghost'] {
    border-radius: var-get($theme, 'border-radius');
    border: rem(1px) solid var-get($theme, 'ghost-border');
    background: var-get($theme, 'overlay-background');
}

[part~='drag-over'] {
    &::after {
        @extend %after-element;

        z-index: 1000;
        border: rem(1px) solid var-get($theme, 'ghost-border');
        background: var-get($theme, 'overlay-background');
    }
}

[part='header'] {
    background: var-get($theme, 'header-background');
    border-top-left-radius: var(--_border-radius);
    border-top-right-radius: var(--_border-radius);
}

[part='title'] {
    color: var-get($theme, 'title-color');
}

igc-divider {
    --color: #{var-get($theme, 'divider-color')};
}

igc-resize {
    --resize-indicator: #{var-get($theme, 'ghost-border')};
}

igc-resize[part~='side-adorner']::part(trigger-side) {
    background-color: transparent;
    right: 0;
}

igc-resize[part~='corner-adorner']::part(trigger) {
    background-color: transparent;
    right: 0;
    bottom: 0;
}

igc-resize[part~='bottom-adorner']::part(trigger-bottom) {
    background-color: transparent;
    bottom: 0;
}
