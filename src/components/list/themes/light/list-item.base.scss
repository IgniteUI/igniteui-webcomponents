@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;

$padding-sm-inline: calc(var(--igc-spacing-small) * 2);
$padding-md-inline: calc(var(--igc-spacing-medium) * 2);
$padding-lg-inline: calc(var(--igc-spacing-large) * 2);
$padding-sm-block: var(--igc-spacing-small);
$padding-md-block: var(--igc-spacing-medium);
$padding-lg-block: var(--igc-spacing-large);

:host {
    --spacing-inline: #{sizable($padding-sm-inline, $padding-md-inline, $padding-lg-inline)};
    --spacing-block: #{sizable($padding-sm-block, $padding-md-block, $padding-lg-block)};

    display: flex;
    align-items: center;
    position: relative;
    color: color(gray, 800);
    background: color(surface, 500);
    transition: background .15s ease-out;
    padding-inline: var(--spacing-inline);
    padding-block: var(--spacing-block);
}

:host(:hover),
:host(:focus-within) {
    background: color(gray, 200);
}

::slotted(*) {
    margin: 0;
    font: inherit;
    opacity: inherit;
}

[part='content'] {
    flex-grow: 1;
}

[part='start'],
[part='end'] {
    display: flex;
    align-items: center;
    justify-content: center;
}

[name='start']::slotted(*) {
    margin-inline-end: calc(var(--igc-spacing-large) * 2);
}

[name='end']::slotted(*) {
    margin-inline-start: calc(var(--igc-spacing-large) * 2);
}

[part='title'] {
    @include type-style('subtitle-1');
}

[part='subtitle'] {
    @include type-style('caption');

    opacity: .74;
}
