@use 'sass:map';
@use '../../../../styles/common/component';
@use '../../../../styles/utilities' as *;
@use '../../../../styles/themes/schemas/indigo/light' as *;

$schema: map.get($light-indigo-schema, 'input-group');
$border-border-radius: border-radius(map.get($schema, 'border-border-radius')...);
$box-border-radius: border-radius(map.get($schema, 'box-border-radius')...);
$theme: digest-schema(extend(
    $schema,
    (
        border-border-radius: $border-border-radius,
        box-border-radius: $box-border-radius,
    )
));

%suffix-preffix {
    display: inline-flex;
    align-items: center;
    width: max-content;
    height: calc(100% - #{rem(2px)});
    padding-inline: pad-inline(8px, 12px, 16px);
}

:host {
    @include css-vars-from-theme($theme, 'ig-input');
    
    [part='prefix'],
    [part='suffix'] {
        ::slotted(*) {
            color: inherit;
        }
    }

    [part='prefix'] {
        border-start-start-radius: var-get($theme, 'border-border-radius');
        color: var-get($theme, 'input-prefix-color');
        background: var-get($theme, 'input-prefix-background');
        grid-area: 1 / 1;

        ::slotted(*) {
            @extend %suffix-preffix;
        }
    }

    [part='suffix'] {
        border-start-end-radius: var-get($theme, 'border-border-radius');
        color: var-get($theme, 'input-suffix-color');
        background: var-get($theme, 'input-suffix-background');
        grid-area: 1 / 3;

        ::slotted(*) {
            @extend %suffix-preffix;
        }
    }

    [part~='label'] {
        color: var-get($theme, 'idle-secondary-color');
        font-size: rem(14px);
        font-weight: 600;
        line-height: 1;
    }

    [part^='container'] {
        border-radius: var-get($theme, 'box-border-radius');
        border-end-start-radius: 0;
        border-end-end-radius: 0;
        border-bottom: 1px solid var-get($theme, 'idle-bottom-line-color');
        transition: background .25s ease-out;
        grid-template-columns: auto 1fr auto;

        &::after {
            position: absolute;
            content: '';
            width: 100%;
            height: rem(2px);
            left: 0;
            right: 0;
            bottom: -1px;
            background: var-get($theme, 'focused-bottom-line-color');
            transform: scaleY(0);
            transition: transform 180ms cubic-bezier(.4, 0, .2, 1), opacity 180ms cubic-bezier(.4, 0, .2, 1);
            transform-origin: bottom center;
        }
    }

    [part~='input'] {
        color: var-get($theme, 'idle-text-color');
        font-size: rem(16px);
        background: initial;
        padding-block: rem(8px);
        padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));
        border: none;
        grid-area: 1 / 2;
    }

    [part*='input prefixed'] {
        padding-inline-start: 0;
    }

    [part*='input suffixed'] {
        padding-inline-end: 0;
    }

    [part='helper-text'] {
        margin-top: rem(6px);
        padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));
        color: var-get($theme, 'helper-text-color');
    }
}

:host(:focus-within),
:host(:hover) {
    [part^='container'] {
        background: var-get($theme, 'box-background-hover');
    }
}

[part~='filled'] {
    [part='prefix'] {
        color: var-get($theme, 'input-prefix-color--filled');
        background: var-get($theme, 'input-prefix-background--filled');
    }

    [part='suffix'] {
        color: var-get($theme, 'input-suffix-color--filled');
        background: var-get($theme, 'input-suffix-background--filled');
    }

    [part~='input'] {
        color: var-get($theme, 'filled-text-color');
    }
}

:host(:focus-within) {
    [part^='container'] {
        &::after {
            transform: scaleY(1);
        }
    }

    [part='prefix'] {
        color: var-get($theme, 'input-prefix-color--focused');
        background: var-get($theme, 'input-prefix-background--focused');
    }

    [part='suffix'] {
        color: var-get($theme, 'input-suffix-color--focused');
        background: var-get($theme, 'input-suffix-background--focused');
    }

    [part='label'] {
        color: var-get($theme, 'focused-secondary-color');
    }
}

:host([invalid]) {
    [part^='container'] {
        border-color: var-get($theme, 'error-secondary-color');

        &::after {
            background: var-get($theme, 'error-secondary-color');
        }
    }

    [part='label'] {
        color: var-get($theme, 'error-secondary-color');
    }

    [part='helper-text'] {
        color: var-get($theme, 'error-secondary-color');
    }
}

:host(:disabled),
:host([disabled]) {
    [part^='container'] {
        border-color: var-get($theme, 'disabled-bottom-line-color');
    }

    [part='prefix'],
    [part='suffix'],
    [part='label'],
    [part~='input'],
    [part='helper-text'],
    [part~='input']::placeholder {
        color: var-get($theme, 'disabled-text-color');
    }
}
