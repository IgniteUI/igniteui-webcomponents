@use 'styles/utilities' as *;
@use '../light/themes' as *;

$flat-theme: $indigo-flat;
$contained-theme: $indigo-contained;
$outlined-theme: $indigo-outlined;
$icon-size: rem(16px);

:host {
    --icon-size: #{$icon-size};
}

[part='icon'] {
    --size: #{$icon-size};
}

[part='base'] {
    transition: color .15s ease-in-out, box-shadow .15s ease-in-out, background .15s ease-in-out;
    padding: pad(6px);
}

:host([variant='flat']) {
    @include css-vars-from-theme($flat-theme, 'ig-icon-button');

    --component-size: var(--ig-size, #{var-get($flat-theme, 'default-size')});

    [part='base'] {
        &:focus,
        &:focus-within,
        &:active {
            border-color: var-get($flat-theme, 'border-color');
            box-shadow: 0 0 0 rem(3px) var-get($flat-theme, 'focus-border-color');
        }
    }
}

:host([variant='contained']) {
    @include css-vars-from-theme($contained-theme, 'ig-icon-button');

    --component-size: var(--ig-size, #{var-get($contained-theme, 'default-size')});

    [part='base'] {
        &:focus,
        &:focus-visible,
        &:active {
            box-shadow: 0 0 0 rem(3px) var-get($contained-theme, 'focus-border-color');
        }
    }
}

:host([variant='outlined']) {
    @include css-vars-from-theme($outlined-theme, 'ig-icon-button');

    --component-size: var(--ig-size, #{var-get($outlined-theme, 'default-size')});

    [part='base'] {
        &::after {
            position: absolute;
            content: '';
            box-shadow: inset 0 0 0 rem(2px) var-get($outlined-theme, 'border-color');
            width: 100%;
            height: 100%;
            border-radius: inherit;
        }

        &:hover {
            &::after {
                box-shadow: inset 0 0 0 rem(2px) var-get($outlined-theme, 'foreground');
            }
        }

        &:focus,
        &:focus-visible,
        &:active {
            box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'focus-border-color');
            
            &:hover {
                &::after {
                    box-shadow: inset 0 0 0 rem(2px) var-get($outlined-theme, 'foreground');
                }
            }
        }
    }
}

:host([variant="outlined"]),
:host([variant="flat"]) {
    [part="base"] {
        &:hover {    
            igc-icon {
                color: var-get($flat-theme, 'hover-foreground');
            }
        }

        &:focus,
        &:focus-within {
            igc-icon {
                color: var-get($flat-theme, 'focus-foreground');
            }

            &:hover {
                igc-icon {
                    color: var-get($flat-theme, 'focus-hover-foreground');
                }
            }
        }
    }
}

:host([disabled]),
:host(:disabled) {
    [part='base'] {
        box-shadow: none;
    }
}

:host([disabled][variant='outlined']),
:host(:disabled[variant='outlined']) {
    [part='base'] {
        border-width: rem(2px);

        &::after {
            box-shadow: none;
        }
    }
}
