@use 'styles/utilities' as *;
@use '../light/themes' as *;
@use 'components/input/themes/light/themes' as input-theme;

$theme: $bootstrap;
$input-theme: input-theme.$bootstrap;

:host {
    --component-size: var(--ig-size, #{var-get($theme, 'default-size')});
    --select-size: var(--component-size);
    --dropdown-size: var(--component-size);

    ::part(helper-text) {
        @include type-style('body-2');

        color: var-get($theme, 'helper-text-color');
        grid-auto-rows: minmax(rem(20px), auto);
        margin-block-start: pad-block(rem(4px));
    }

    ::slotted([slot='suffix']),
    ::slotted([slot='prefix']) {
        height: 100%;
        display: flex;
        align-items: center;
    }
}

[part='base'] {
    border: rem(1px) solid var(--dd-border-color);
    padding: pad-block(rem(8px)) 0;
}

:host(:not(:state(ig-invalid)):focus-within) {
    igc-input[readonly]:not([disabled])::part(input) {
        box-shadow: 0 0 0 rem(4px) var-get($input-theme, 'focused-secondary-color');
        border-color: var-get($input-theme, 'focused-border-color');
    }
}

:host([disabled]),
:host(:disabled) {
    igc-validator {
        color: var-get($theme, 'disabled-text-color');
    }

    [part~='toggle-icon'] {
        background: var-get($theme, 'toggle-button-background-disabled');
        color: var-get($theme, 'toggle-button-foreground-disabled');

        igc-icon {
            color: inherit;
        }
    }

    ::slotted([slot='suffix']),
    [part|='toggle'] {
        border-inline-end: rem(1px) solid var(--disabled-border-color);
    }

    ::slotted([slot='prefix']) {
        border-inline-start: rem(1px) solid var(--disabled-border-color);
    }
}

:host(:not([disabled])),
:host(:not(:disabled)) {
    ::slotted([slot='suffix']),
    [part|='toggle'] {
        border-inline-end: rem(1px) solid var(--border-color);
    }

    ::slotted([slot='prefix']) {
        border-inline-start: rem(1px) solid var(--border-color);
    }
}
