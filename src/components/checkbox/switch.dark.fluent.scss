@use '../../styles/utilities' as utils;
@use 'switch.fluent' as light-switch;

@mixin theme {
    @include light-switch.theme();

    igc-switch:hover::part(control) {
        box-shadow: inset 0 0 0 1px #{utils.color(gray, 900)};
    }

    igc-switch::part(thumb) {
        background: #{utils.color(gray, 500)};
    }

    igc-switch:hover::part(thumb) {
        background: #{utils.color(gray, 900)};
    }

    igc-switch::part(control checked),
    igc-switch:hover::part(control checked) {
        box-shadow: inset 0 0 0 1px #{utils.color(primary, 500)};
    }

    igc-switch:hover::part(control checked),
    igc-switch:focus-within::part(control checked) {
        background: #{utils.color(primary, 100)};
        box-shadow: inset 0 0 0 1px #{utils.color(primary, 100)};
    }

    igc-switch:not([disabled])[invalid]::part(label) {
        color: #{utils.color(error, 200)};
    }

    igc-switch[invalid]::part(control) {
        box-shadow: inset 0 0 0 1px #{utils.color(error, 200)};
    }

    igc-switch[invalid]:hover::part(control),
    igc-switch[invalid]:focus-within::part(control) {
        box-shadow: inset 0 0 0 1px #{utils.color(error, 100)};
    }

    igc-switch[invalid]::part(thumb) {
        background: #{utils.color(error, 200)};
    }

    igc-switch[invalid]:hover::part(thumb),
    igc-switch[invalid]:focus-within::part(thumb) {
        background: #{utils.color(error, 100)};
    }

    igc-switch[invalid]::part(control checked) {
        box-shadow: inset 0 0 0 1px #{utils.color(error, 200)};
        background: #{utils.color(error, 200)};
    }

    igc-switch[invalid]:hover::part(control checked),
    igc-switch[invalid]:focus-within::part(control checked) {
        box-shadow: inset 0 0 0 1px #{utils.color(error, 100)};
        background: #{utils.color(error, 100)};
    }

    igc-switch::part(thumb checked),
    igc-switch:hover::part(thumb checked),
    igc-switch:focus-within::part(thumb checked),
    igc-switch[invalid]::part(thumb checked),
    igc-switch[invalid]:hover::part(thumb checked),
    igc-switch[invalid]:focus-within::part(thumb checked) {
        background: #{utils.color(surface, 500)};
    }

    igc-switch[disabled]::part(label) {
        color: #{utils.color(gray, 200)};
    }

    igc-switch[disabled]::part(control),
    igc-switch[disabled][invalid]::part(control) {
        box-shadow: inset 0 0 0 1px #{utils.color(gray, 200)};
    }

    igc-switch[disabled]::part(thumb),
    igc-switch[disabled][invalid]::part(thumb),
    igc-switch[disabled]::part(control checked),
    igc-switch[disabled][invalid]::part(control checked) {
        background: #{utils.color(gray, 200)};
    }

    igc-switch[disabled]::part(thumb checked),
    igc-switch[disabled][invalid]::part(thumb checked) {
        background: #{utils.color(surface, 100)};
    }
}
